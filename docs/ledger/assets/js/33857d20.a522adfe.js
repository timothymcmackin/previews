"use strict";(self.webpackChunktezos_developer_docs=self.webpackChunktezos_developer_docs||[]).push([[4703],{53291:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>c,toc:()=>r});const c=JSON.parse('{"id":"unity/reference/Wallet","title":"Unity SDK Wallet object","description":"The Unity SDK class TezosSDK.Tezos.Wallet.WalletProvider, which is available at runtime as TezosManager.Instance.Wallet, provides methods to connect to wallets and send transactions from the connected account.","source":"@site/docs/unity/reference/Wallet.md","sourceDirName":"unity/reference","slug":"/unity/reference/Wallet","permalink":"/previews/docs/ledger/unity/reference/Wallet","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1703739600000,"frontMatter":{"title":"Unity SDK Wallet object","sidebar_label":"Wallet object","authors":"Tim McMackin","last_update":{"date":"28 December 2023"}},"sidebar":"documentationSidebar","previous":{"title":"TokenContract object","permalink":"/previews/docs/ledger/unity/reference/TokenContract"},"next":{"title":"Documentation style guide","permalink":"/previews/docs/ledger/reference/style-guide"}}');var s=t(74848),o=t(28453);const a={title:"Unity SDK Wallet object",sidebar_label:"Wallet object",authors:"Tim McMackin",last_update:{date:"28 December 2023"}},l=void 0,i={},r=[{value:"Properties",id:"properties",level:2},{value:"<code>IsConnected</code>",id:"isconnected",level:3},{value:"<code>HandshakeData</code>",id:"handshakedata",level:3},{value:"Methods",id:"methods",level:2},{value:"<code>Connect()</code>",id:"connect",level:3},{value:"<code>Disconnect()</code>",id:"disconnect",level:3},{value:"<code>GetWalletAddress()</code>",id:"getwalletaddress",level:3},{value:"<code>RequestSignPayload()</code>",id:"requestsignpayload",level:3},{value:"<code>VerifySignedPayload()</code>",id:"verifysignedpayload",level:3},{value:"<code>CallContract()</code>",id:"callcontract",level:3},{value:"<code>OriginateContract()</code>",id:"originatecontract",level:3}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["The Unity SDK class ",(0,s.jsx)(n.code,{children:"TezosSDK.Tezos.Wallet.WalletProvider"}),", which is available at runtime as ",(0,s.jsx)(n.code,{children:"TezosManager.Instance.Wallet"}),", provides methods to connect to wallets and send transactions from the connected account."]}),"\n",(0,s.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(n.h3,{id:"isconnected",children:(0,s.jsx)(n.code,{children:"IsConnected"})}),"\n",(0,s.jsx)(n.p,{children:"Returns true if a wallet is currently connected."}),"\n",(0,s.jsx)(n.h3,{id:"handshakedata",children:(0,s.jsx)(n.code,{children:"HandshakeData"})}),"\n",(0,s.jsxs)(n.p,{children:["An object with a field named ",(0,s.jsx)(n.code,{children:"PairingData"})," with the data that applications need to connect to the wallet."]}),"\n",(0,s.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(n.h3,{id:"connect",children:(0,s.jsx)(n.code,{children:"Connect()"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"void Connect(WalletProviderType walletProvider, bool withRedirectToWallet)\n"})}),"\n",(0,s.jsx)(n.p,{children:"Sends a request to a user's wallet to connect to the application."}),"\n",(0,s.jsx)(n.p,{children:"Parameters:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"walletProvider"}),": The type of wallet to connect to, including ",(0,s.jsx)(n.code,{children:"WalletProviderType.beacon"})," for TZIP-10 wallets (most Tezos wallets) and ",(0,s.jsx)(n.code,{children:"WalletProviderType.kukai"})," for Kukai wallets."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"withRedirectToWallet"}),": When running on a mobile platform, whether to open the connected mobile app after connecting to a wallet."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["This method triggers the ",(0,s.jsx)(n.code,{children:"WalletConnected"})," or ",(0,s.jsx)(n.code,{children:"WalletConnectionFailed"})," events, depending on whether the connection was successful or not."]}),"\n",(0,s.jsxs)(n.p,{children:["When the ",(0,s.jsx)(n.code,{children:"walletProvider"})," parameter is set to ",(0,s.jsx)(n.code,{children:"WalletProviderType.beacon"}),", this method automatically picks the correct way to connect to wallets:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["In WebGL applications, it uses the ",(0,s.jsx)(n.code,{children:"TezosSDK.Beacon.BeaconConnectorWebGl"})," class to trigger the browser to connect to a wallet app in a browser plugin."]}),"\n",(0,s.jsxs)(n.li,{children:["In all other applications, it uses the ",(0,s.jsx)(n.code,{children:"TezosSDK.Beacon.BeaconConnectorDotNet"}),' class to generate a QR code to connect to a wallet app on a mobile device or use a "deep link" to connect to a wallet on the same mobile device that is running the application.']}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["When the ",(0,s.jsx)(n.code,{children:"walletProvider"})," parameter is set to ",(0,s.jsx)(n.code,{children:"WalletProviderType.kukai"})," in a WebGL application, it triggers the web browser to open the user's Kukai wallet.\nThis type of connection is appropriate only for WebGL applications."]}),"\n",(0,s.jsx)(n.h3,{id:"disconnect",children:(0,s.jsx)(n.code,{children:"Disconnect()"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"void Disconnect()\n"})}),"\n",(0,s.jsx)(n.p,{children:"Disconnects from the currently connected wallet."}),"\n",(0,s.jsxs)(n.p,{children:["This method triggers the ",(0,s.jsx)(n.code,{children:"WalletDisconnected"})," event."]}),"\n",(0,s.jsx)(n.h3,{id:"getwalletaddress",children:(0,s.jsx)(n.code,{children:"GetWalletAddress()"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"void GetWalletAddress()\n"})}),"\n",(0,s.jsx)(n.p,{children:"Returns the address (public key hash) of the currently connected account, or NULL if no wallet is connected."}),"\n",(0,s.jsx)(n.h3,{id:"requestsignpayload",children:(0,s.jsx)(n.code,{children:"RequestSignPayload()"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"public void RequestSignPayload(\n  SignPayloadType signingType,\n  string payload)\n"})}),"\n",(0,s.jsx)(n.p,{children:"Sends a request to the connected wallet to sign a payload string."}),"\n",(0,s.jsx)(n.p,{children:"Parameters:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"signingType"}),": The type of payload, such as raw, operation or micheline."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"payload"}),": The payload to send to the wallet to sign."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Signing a message proves that it came from a specific user's wallet because the wallet encrypts the message with the user's account's key.\nFor example, this code prompts the user to sign the message \"This message came from my account.\""}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'string payload = "This message came from my account.";\n\nTezosManager.Instance.EventManager.PayloadSigned += OnPayloadSigned;\nTezosManager.Instance.Wallet.RequestSignPayload(SignPayloadType.micheline, payload);\n'})}),"\n",(0,s.jsx)(n.h3,{id:"verifysignedpayload",children:(0,s.jsx)(n.code,{children:"VerifySignedPayload()"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"bool VerifySignedPayload(SignPayloadType signingType, string payload)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Returns true if most recent response to ",(0,s.jsx)(n.code,{children:"RequestSignPayload"})," matches the specified payload and is properly signed."]}),"\n",(0,s.jsx)(n.h3,{id:"callcontract",children:(0,s.jsx)(n.code,{children:"CallContract()"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"void CallContract(\n    string contractAddress,\n    string entryPoint,\n    string input,\n    ulong amount = 0);\n"})}),"\n",(0,s.jsx)(n.p,{children:"Calls the specified entrypoint of the specified contract."}),"\n",(0,s.jsxs)(n.p,{children:["This method triggers the ",(0,s.jsx)(n.code,{children:"ContractCallInjected"})," event if the call is successfully sent to Tezos.\nThen it triggers ",(0,s.jsx)(n.code,{children:"ContractCallCompleted"})," or ",(0,s.jsx)(n.code,{children:"ContractCallFailed"})," events, depending on whether the call succeeded or failed."]}),"\n",(0,s.jsx)(n.h3,{id:"originatecontract",children:(0,s.jsx)(n.code,{children:"OriginateContract()"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"void OriginateContract(\n  string script,\n  string delegateAddress);\n"})}),"\n",(0,s.jsx)(n.p,{children:"Deploys (originates) the specified contract."}),"\n",(0,s.jsxs)(n.p,{children:["To use this method, you must compile a contract to Michelson in a JSON file.\nFor an example, see the code of the built-in contract in ",(0,s.jsx)(n.code,{children:"Resources/Contracts"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["The optional ",(0,s.jsx)(n.code,{children:"delegateAddress"})," parameter is the address of the account to delegate the contract's tez to.\nFor more information, see ",(0,s.jsx)(n.a,{href:"/smart-contracts/delegation",children:"Delegation"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["This method triggers the ",(0,s.jsx)(n.code,{children:"ContractCallInjected"})," event if the call is successfully sent to Tezos.\nThen it triggers ",(0,s.jsx)(n.code,{children:"ContractCallCompleted"})," or ",(0,s.jsx)(n.code,{children:"ContractCallFailed"})," events, depending on whether the origination operation succeeded or failed."]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var c=t(96540);const s={},o=c.createContext(s);function a(e){const n=c.useContext(o);return c.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),c.createElement(o.Provider,{value:n},e.children)}}}]);