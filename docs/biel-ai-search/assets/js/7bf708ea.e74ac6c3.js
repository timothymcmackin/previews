"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9107],{54692:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"tutorials/dapp/part-4","title":"Part 4: Smart contract upgrades","description":"Previously, you learned how to use tickets and don\'t mess up with it.","source":"@site/docs/tutorials/dapp/part-4.md","sourceDirName":"tutorials/dapp","slug":"/tutorials/dapp/part-4","permalink":"/previews/docs/biel-ai-search/tutorials/dapp/part-4","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1716350400000,"frontMatter":{"title":"Part 4: Smart contract upgrades","authors":"Benjamin Fuentes (Marigold)","last_update":{"date":"22 May 2024"}},"sidebar":"tutorialsSidebar","previous":{"title":"Part 3: Tickets","permalink":"/previews/docs/biel-ai-search/tutorials/dapp/part-3"},"next":{"title":"Build a simple web application","permalink":"/previews/docs/biel-ai-search/tutorials/build-your-first-app"}}');var s=t(74848),r=t(28453);const o={title:"Part 4: Smart contract upgrades",authors:"Benjamin Fuentes (Marigold)",last_update:{date:"22 May 2024"}},i="Upgradable Poke game",c={},d=[{value:"Naive approach",id:"naive-approach",level:2},{value:"Stored Lambda function",id:"stored-lambda-function",level:2},{value:"Pros/Cons",id:"proscons",level:3},{value:"Implementation",id:"implementation",level:3},{value:"Proxy pattern",id:"proxy-pattern",level:2},{value:"Pros/Cons",id:"proscons-1",level:3},{value:"Implementation",id:"implementation-1",level:3},{value:"Rewrite the smart contract to make it generic",id:"rewrite-the-smart-contract-to-make-it-generic",level:4},{value:"Write the unique proxy",id:"write-the-unique-proxy",level:4},{value:"Deployment",id:"deployment",level:4},{value:"Update the frontend",id:"update-the-frontend",level:4},{value:"Set the old smart contract as obsolete",id:"set-the-old-smart-contract-as-obsolete",level:4},{value:"Alternative: Composability",id:"alternative-composability",level:2},{value:"Summary",id:"summary",level:2}];function l(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"upgradable-poke-game",children:"Upgradable Poke game"})}),"\n",(0,s.jsx)(n.p,{children:"Previously, you learned how to use tickets and don't mess up with it.\nIn this third session, you will enhance your skills on:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Upgrading a smart contract with lambda function code."}),"\n",(0,s.jsx)(n.li,{children:"Upgrading a smart contract with proxy."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"As you may know, smart contracts are immutable but in real life, applications are not and evolve. During the past several years, bugs and vulnerabilities in smart contracts caused millions of dollars to get stolen or lost forever. Such cases may even require manual intervention in blockchain operation to recover the funds."}),"\n",(0,s.jsx)(n.p,{children:"Let's see some tricks that allow you to upgrade a contract."}),"\n",(0,s.jsx)(n.h1,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(n.p,{children:["There is nothing more than you need on the first session: ",(0,s.jsx)(n.a,{href:"https://github.com/marigold-dev/training-dapp-1#memo-prerequisites",children:"https://github.com/marigold-dev/training-dapp-1#memo-prerequisites"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Get the code from the session 3 or the solution ",(0,s.jsx)(n.a,{href:"https://github.com/marigold-dev/training-dapp-3/tree/main/solution",children:"here"}),"."]}),"\n",(0,s.jsx)(n.h1,{id:"upgrades",children:"Upgrades"}),"\n",(0,s.jsx)(n.p,{children:"As everyone knows, one feature of blockchain is to keep immutable code on a block. This allows transparency, traceability, and trustlessness."}),"\n",(0,s.jsx)(n.p,{children:"But the application lifecycle implies evolving and upgrading code to fix bugs or bring functionalities. So, how to do it?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://gitlab.com/tezos/tzip/-/blob/master/proposals/tzip-18/tzip-18.md",children:"https://gitlab.com/tezos/tzip/-/blob/master/proposals/tzip-18/tzip-18.md"})}),"\n"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["Note: All below solutions break in a wait the fact that a smart contract is immutable. ",(0,s.jsx)(n.strong,{children:"Trust"})," preservation can be safe enough if the upgrade process has some security and authenticity around it. Like the first time an admin deploys a smart contract, any user should be able to trust the code reading it with free read access, the same should apply to the upgrade process (notification of new code version, admin identification, whitelisted auditor reports, ...). To resume, if you really want to avoid DEVOPS centralization, you are about to create a DAO with a voting process among some selected users/administrators in order to deploy the new version of the smart contract ... but let's simplify and talk here only about classical centralized admin deployment."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"naive-approach",children:"Naive approach"}),"\n",(0,s.jsx)(n.p,{children:"One can deploy a new version of the smart contract and do a redirection to the new address on the front end side."}),"\n",(0,s.jsx)(n.p,{children:"Complete flow."}),"\n",(0,s.jsx)(n.mermaid,{value:"sequenceDiagram\n  Admin->>Tezos: originate smart contract A\n  Tezos--\x3e>Admin: contractAddress A\n  User->>frontend: click on %myfunction\n  frontend->>SmartContractA: transaction %myfunction\n  Note right of SmartContractA : executing logic of A\n  Admin->>Tezos: originate smart contract B with A storage as init\n  Tezos--\x3e>Admin: contractAddress B\n  Admin->>frontend: change smart contract address to B\n  User->>frontend: click on %myfunction\n  frontend->>SmartContractB: transaction %myfunction\n  Note right of SmartContractB : executing logic of B"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Pros"}),(0,s.jsx)(n.th,{children:"Cons"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Easiest to do"}),(0,s.jsx)(n.td,{children:"Old contract remains active, so do bugs. Need to really get rid off it"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"Need to migrate old storage, can cost a lot of money or even be too big to copy at init time"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"Need to sync/update frontend at each backend migration"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"Lose reference to previous contract address, can lead to issues with other dependent contracts"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"stored-lambda-function",children:"Stored Lambda function"}),"\n",(0,s.jsx)(n.p,{children:"This time, the code will be on the storage and being executed at runtime."}),"\n",(0,s.jsx)(n.p,{children:"Init."}),"\n",(0,s.jsx)(n.mermaid,{value:'sequenceDiagram\n  Admin->>Tezos: originate smart contract with a lambda Map on storage, initialized Map.literal(list([["myfunction","<SOME_CODE>"]]))\n  Tezos--\x3e>Admin: contractAddress'}),"\n",(0,s.jsx)(n.p,{children:"Interaction."}),"\n",(0,s.jsx)(n.mermaid,{value:"sequenceDiagram\n  User->>SmartContract: transaction %myfunction\n  Note right of SmartContract : Tezos.exec(lambaMap.find_opt(myfunction))"}),"\n",(0,s.jsx)(n.p,{children:"Administration."}),"\n",(0,s.jsx)(n.mermaid,{value:'sequenceDiagram\n  Admin->>SmartContract: transaction(["myfunction","<SOME_CODE>"],0,updateLambdaCode)\n  Note right of SmartContract : Check caller == admin\n  Note right of SmartContract : Map.add("myfunction","<SOME_CODE>",lambaMap)'}),"\n",(0,s.jsx)(n.h3,{id:"proscons",children:"Pros/Cons"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Pros"}),(0,s.jsx)(n.th,{children:"Cons"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"No more migration of code and storage. Update the lambda function code that is on existing storage"}),(0,s.jsx)(n.td,{children:"For the storage, all has to be stores as bytes PACKING/UNPACKING it so type checking is lost"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"keep same contract address"}),(0,s.jsx)(n.td,{children:"IDE or tools do not work anymore on lambda code. Michelson does not protect us from some kinds of mistakes anymore"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"Unexpected changes can cause other contract callers to fail, Interface benefits is lost"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"Harder to audit and trace, can lead to really big security nd Trust issues"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"Storing everything as bytes is limited to PACK-able types like nat, string, list, set, map"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"implementation",children:"Implementation"}),"\n",(0,s.jsxs)(n.p,{children:["Change the implementation of the function ",(0,s.jsx)(n.code,{children:"pokeAndGetFeedback"}),". The feedback is now a lambda function on the storage.\nIt is required to:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Add a new entrypoint to change the lambda code."}),"\n",(0,s.jsx)(n.li,{children:"Update the current entrypoint for calling the lambda."}),"\n"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Let's start with adding the lambda function definition of the storage."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsligo",children:"export type feedbackFunction = (oracleAddress: address) => string;\n\nexport type storage = {\n  pokeTraces: map<address, pokeMessage>,\n  feedback: string,\n  ticketOwnership: map<address, ticket<string>>, //ticket of claims\n  feedbackFunction: feedbackFunction\n};\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Let's make minor changes as you have 1 additional field ",(0,s.jsx)(n.code,{children:"feedbackFunction"})," on storage destructuring."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Edit the ",(0,s.jsx)(n.code,{children:"PokeAndGetFeedback"})," function where the lambda ",(0,s.jsx)(n.code,{children:"feedbackFunction(..)"})," is executed"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsligo",children:'@no_mutation\n@entry\nconst pokeAndGetFeedback = (oracleAddress: address, store: storage): return_ => {\n  const { pokeTraces, feedback, ticketOwnership, feedbackFunction } = store;\n  const [t, tom]: [option<ticket<string>>, map<address, ticket<string>>] =\n    Map.get_and_update(\n      Tezos.get_source(),\n      None() as option<ticket<string>>,\n      ticketOwnership\n    );\n  let feedbackMessage = {\n    receiver: oracleAddress,\n    feedback: feedbackFunction(oracleAddress)\n  };\n  return match(t) {\n    when (None()):\n      failwith("User does not have tickets => not allowed")\n    when (Some(_t)):\n      [\n        list([]) as list<operation>,\n        {\n          feedback,\n          pokeTraces: Map.add(Tezos.get_source(), feedbackMessage, pokeTraces),\n          ticketOwnership: tom,\n          feedbackFunction\n        }\n      ]\n  }\n};\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Notice the line with ",(0,s.jsx)(n.code,{children:"feedbackFunction(oracleAddress)"})," and call the lambda with the address parameter."]}),"\n",(0,s.jsx)(n.p,{children:"The first time, the current code is injected to check that it still works, and then, modify the lambda code on the storage."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["To modify the lambda function code, add an extra admin entrypoint ",(0,s.jsx)(n.code,{children:"updateFeedbackFunction"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsligo",children:"@entry\nconst updateFeedbackFunction = (newCode: feedbackFunction, store: storage): return_ => {\n  const { pokeTraces, feedback, ticketOwnership, feedbackFunction } = store;\n  ignore(feedbackFunction);\n  return [\n    list([]),\n    { pokeTraces, feedback, ticketOwnership, feedbackFunction: newCode }\n  ]\n};\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["The storage definition is broken, fix all storage missing field warnings on ",(0,s.jsx)(n.code,{children:"poke"})," and ",(0,s.jsx)(n.code,{children:"init"})," functions."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsligo",children:'@entry\nconst poke = (_: unit, store: storage): return_ => {\n  const { pokeTraces, feedback, ticketOwnership, feedbackFunction } = store;\n  const [t, tom]: [option<ticket<string>>, map<address, ticket<string>>] =\n    Map.get_and_update(\n      Tezos.get_source(),\n      None() as option<ticket<string>>,\n      ticketOwnership\n    );\n  return match(t) {\n    when (None()):\n      failwith("User does not have tickets => not allowed")\n    when (Some(_t)):\n      [\n        list([]) as list<operation>,\n        {\n          feedback,\n          pokeTraces: Map.add(\n            Tezos.get_source(),\n            { receiver: Tezos.get_self_address(), feedback: "" },\n            pokeTraces\n          ),\n          ticketOwnership: tom,\n          feedbackFunction\n        }\n      ]\n  }\n};\n\n@entry\nconst init = ([a, ticketCount]: [address, nat], store: storage): return_ => {\n  const { pokeTraces, feedback, ticketOwnership, feedbackFunction } = store;\n  if (ticketCount == (0 as nat)) {\n    return [\n      list([]) as list<operation>,\n      { pokeTraces, feedback, ticketOwnership, feedbackFunction }\n    ]\n  } else {\n    const t: ticket<string> =\n      Option.unopt(Tezos.create_ticket("can_poke", ticketCount));\n    return [\n      list([]) as list<operation>,\n      {\n        pokeTraces,\n        feedback,\n        ticketOwnership: Map.add(a, t, ticketOwnership),\n        feedbackFunction\n      }\n    ]\n  }\n};\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Change the initial storage with the old initial value of the lambda function (i.e. calling a view to get feedback)."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsligo",children:'#import "pokeGame.jsligo" "Contract"\n\nconst default_storage = {\n    pokeTraces: Map.empty as map<address, Contract.pokeMessage>,\n    feedback: "kiss",\n    ticketOwnership: Map.empty as map<address, ticket<string>>, //ticket of claims\n    feedbackFunction: (\n        (oracleAddress: address): string => {\n            return match(\n                Tezos.call_view("feedback", unit, oracleAddress) as\n                    option<string>\n            ) {\n                when (Some(feedback)):\n                    feedback\n                when (None()):\n                    failwith(\n                        "Cannot find view feedback on given oracle address"\n                    )\n            };\n        }\n    )\n};\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Compile and play with the CLI."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm i\nTAQ_LIGO_IMAGE=ligolang/ligo:1.6.0 taq compile pokeGame.jsligo\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Redeploy to testnet"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"taq deploy pokeGame.tz -e testing\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-logs",children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Contract    \u2502 Address                              \u2502 Alias    \u2502 Balance In Mutez \u2502 Destination                    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 pokeGame.tz \u2502 KT1VjFawYQ4JeEEAVchqaYK1NmXCENm2ufer \u2502 pokeGame \u2502 0                \u2502 https://ghostnet.ecadinfra.com \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Test the dApp frontend."}),"\n",(0,s.jsx)(n.p,{children:"Regenerate types and run the frontend."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"taq generate types ./app/src\ncd app\nyarn dev\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Run the user sequence on the web page:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Mint 1 ticket."}),"\n",(0,s.jsx)(n.li,{children:"wait for confirmation."}),"\n",(0,s.jsx)(n.li,{children:"poke a contract address."}),"\n",(0,s.jsx)(n.li,{children:"wait for confirmation."}),"\n",(0,s.jsx)(n.li,{children:"click on the button to refresh the contract list.\nSo far so good, you have the same result as the previous training."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Update the lambda function in the background with the CLI through the new admin entrypoint. Return a fixed string this time, just for demo purposes, and verify that the lambda executed is returning another output."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Edit the file ",(0,s.jsx)(n.code,{children:"pokeGame.parameterList.jsligo"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsligo",children:'#import "pokeGame.jsligo" "Contract"\nconst default_parameter : parameter_of Contract = UpdateFeedbackFunction((_oracleAddress : address) : string => "YEAH!!!");\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Compile all and call an init transaction."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"TAQ_LIGO_IMAGE=ligolang/ligo:1.6.0 taq compile pokeGame.jsligo\ntaq call pokeGame --param pokeGame.parameter.default_parameter.tz -e testing\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-logs",children:'\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Contract Alias \u2502 Contract Address                     \u2502 Parameter                               \u2502 Entrypoint \u2502 Mutez Transfer \u2502 Destination                    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 pokeGame       \u2502 KT1VjFawYQ4JeEEAVchqaYK1NmXCENm2ufer \u2502 (Left { DROP ; PUSH string "YEAH!!!" }) \u2502 default    \u2502 0              \u2502 https://ghostnet.ecadinfra.com \u2502\n\u2502                \u2502                                      \u2502                                         \u2502            \u2502                \u2502                                \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Run the user sequence on the web page:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Mint 1 ticket."}),"\n",(0,s.jsx)(n.li,{children:"Wait for confirmation."}),"\n",(0,s.jsx)(n.li,{children:"Poke a contract address."}),"\n",(0,s.jsx)(n.li,{children:"Wait for confirmation."}),"\n",(0,s.jsx)(n.li,{children:"Click on the button to refresh the contract list."}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["You see that the feedback has changed to ",(0,s.jsx)(n.code,{children:"YEAH!!!"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Optional: fix the unit tests."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"proxy-pattern",children:"Proxy pattern"}),"\n",(0,s.jsx)(n.p,{children:"The goal is to have a proxy contract maintaining the application lifecycle, it is an enhancement of the previous naive solution.\nDeploy a completely new smart contract, but this time, the end user is not interacting directly with this contract. Instead, the proxy becomes the default entrypoint and keeps the same facing address."}),"\n",(0,s.jsx)(n.p,{children:"Init"}),"\n",(0,s.jsx)(n.mermaid,{value:'sequenceDiagram\n  Admin->>Tezos: originate proxy(admin,[])\n  Tezos--\x3e>Admin: proxyAddress\n  Admin->>Tezos: originate smart contract(proxyAddress,v1)\n  Tezos--\x3e>Admin: contractV1Address\n  Admin->>Proxy: upgrade([["endpoint",contractV1Address]],{new:contractV1Address})'}),"\n",(0,s.jsx)(n.p,{children:"Interaction"}),"\n",(0,s.jsx)(n.mermaid,{value:'sequenceDiagram\n  User->>Proxy: call("endpoint",payloadBytes)\n  Proxy->>SmartContractV1: main("endpoint",payloadBytes)'}),"\n",(0,s.jsx)(n.p,{children:"Administration"}),"\n",(0,s.jsx)(n.mermaid,{value:'sequenceDiagram\n  Admin->>Proxy: upgrade([["endpoint",contractV2Address]],{old:contractV1Address,new:contractV2Address})\n  Note right of Proxy : Check caller == admin\n  Note right of Proxy : storage.entrypoints.set["endpoint",contractV2Address]\n  Proxy->>SmartContractV1: main(["changeVersion",{old:contractV1Address,new:contractV2Address}])\n  Note left of SmartContractV1 : storage.tzip18.contractNext = contractV2Address'}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"Note: 2 location choices for the smart contract storage:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"At proxy level: storage stays unique and immutable."}),"\n",(0,s.jsx)(n.li,{children:"At end-contract level: storage is new at each new version and need to be migrated."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"proscons-1",children:"Pros/Cons"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Pros"}),(0,s.jsx)(n.th,{children:"Cons"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Migration is transparent for frontend"}),(0,s.jsxs)(n.td,{children:["smart contract code ",(0,s.jsx)(n.code,{children:"Tezos.SENDER"})," always refers to the proxy, so you need to be careful"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"if the storage is unchanged, keep the storage at proxy level without cost"}),(0,s.jsx)(n.td,{children:"If storage changes, need to migrate storage from old contract to new contract and it costs money and having storage at proxy level is not more possible"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"keep same contract address"}),(0,s.jsx)(n.td,{children:"If a contract interface changed, then re-originate the proxy"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"No all of types are compatible with PACKING/UNPACKING, and type checking is lost"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"IDE or tools do not work anymore on lambda code. Michelson does not protect us from some kinds of mistakes anymore"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"Unexpected changes can cause other contract callers to fail, Interface benefits are lost"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"Harder to audit and trace, can lead to really big security nd Trust issues"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"Storing everything as bytes is limited to PACK-able types like nat, string, list, set, map"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"implementation-1",children:"Implementation"}),"\n",(0,s.jsx)(n.h4,{id:"rewrite-the-smart-contract-to-make-it-generic",children:"Rewrite the smart contract to make it generic"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Rename the file ",(0,s.jsx)(n.code,{children:"pokeGame.jsligo"})," to ",(0,s.jsx)(n.code,{children:"pokeGameLambda.jsligo"})," , as you can have a look on it later."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Remove pokeGame.parameterList.jsligo."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Get back the original version of ",(0,s.jsx)(n.code,{children:"pokeGame.jsligo"})," from previous training as it is easier to start from here."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Create a new file ",(0,s.jsx)(n.code,{children:"tzip18.jsligo"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"taq create contract tzip18.jsligo\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Edit the file."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsligo",children:"// Tzip 18 types\nexport type tzip18 = {\n  proxy: address,\n  version: nat,\n  contractPrevious: option<address>,\n  contractNext: option<address>\n};\n"})}),"\n",(0,s.jsx)(n.p,{children:"This type is included on all smart contract storages to track the proxy address and the last contract version. It is used to block old smart contract instances to be called and check who can call who."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Get back to ",(0,s.jsx)(n.code,{children:"pokeGame.jsligo"})," and import this file on the first line."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsligo",children:'#import "./tzip18.jsligo" "TZIP18"\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Add the type to the storage definition."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsligo",children:"export type storage = {\n  pokeTraces: map<address, pokeMessage>,\n  feedback: string,\n  ticketOwnership: map<address, ticket<string>>, //ticket of claims\n  tzip18: TZIP18.tzip18\n};\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Fix all missing tzip18 fields on the storage structure in the file."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsligo",children:'const poke = (\n  _: { entrypointName: string, payload: bytes },\n  [pokeTraces, feedback, ticketOwnership, tzip18]: [\n    map<address, pokeMessage>,\n    string,\n    map<address, ticket<string>>,\n    TZIP18.tzip18\n  ]\n): return_ => {\n  //extract opt ticket from map\n\n  const [t, tom]: [option<ticket<string>>, map<address, ticket<string>>] =\n    Map.get_and_update(\n      Tezos.get_source(),\n      None() as option<ticket<string>>,\n      ticketOwnership\n    );\n  return match(t) {\n    when (None()):\n      failwith("User does not have tickets => not allowed")\n    when (Some(_t)):\n      [\n        list([]) as list<operation>,\n        {\n          //let t burn\n\n          feedback,\n          pokeTraces: Map.add(\n            Tezos.get_source(),\n            { receiver: Tezos.get_self_address(), feedback: "" },\n            pokeTraces\n          ),\n          ticketOwnership: tom,\n          tzip18,\n        }\n      ]\n  };\n};\n\n@no_mutation\nconst pokeAndGetFeedback = (\n  oracleAddress: address,\n  [pokeTraces, feedback, ticketOwnership, tzip18]: [\n    map<address, pokeMessage>,\n    string,\n    map<address, ticket<string>>,\n    TZIP18.tzip18\n  ]\n): return_ => {\n  //extract opt ticket from map\n\n  const [t, tom]: [option<ticket<string>>, map<address, ticket<string>>] =\n    Map.get_and_update(\n      Tezos.get_source(),\n      None() as option<ticket<string>>,\n      ticketOwnership\n    );\n  //Read the feedback view\n\n  let feedbackOpt: option<bytes> =\n    Tezos.call_view("getView", "feedback", oracleAddress);\n  return match(t) {\n    when (None()):\n      failwith("User does not have tickets => not allowed")\n    when (Some(_t)):\n      match(feedbackOpt) {\n        when (Some(f)):\n          do {\n            let feedbackMessage = {\n              receiver: oracleAddress,\n              feedback: Option.unopt(Bytes.unpack(f) as option<string>),\n            };\n            return [\n              list([]) as list<operation>,\n              {\n                feedback,\n                pokeTraces: Map.add(\n                  Tezos.get_source(),\n                  feedbackMessage,\n                  pokeTraces\n                ),\n                ticketOwnership: tom,\n                tzip18,\n              }\n            ]\n          }\n        when (None()):\n          failwith("Cannot find view feedback on given oracle address")\n      }\n  };\n};\n\nconst init = (\n  [a, ticketCount]: [address, nat],\n  [pokeTraces, feedback, ticketOwnership, tzip18]: [\n    map<address, pokeMessage>,\n    string,\n    map<address, ticket<string>>,\n    TZIP18.tzip18\n  ]\n): return_ => {\n  return ticketCount == (0 as nat) ? [\n      list([]) as list<operation>,\n      { feedback, pokeTraces, ticketOwnership, tzip18 }\n    ] : [\n      list([]) as list<operation>,\n      {\n        feedback,\n        pokeTraces,\n        ticketOwnership: Map.add(\n          a,\n          Option.unopt(Tezos.create_ticket("can_poke", ticketCount)),\n          ticketOwnership\n        ),\n        tzip18,\n      }\n    ]\n};\n'})}),"\n",(0,s.jsx)(n.p,{children:"The view call signature is different:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"It returns optional bytes."}),"\n",(0,s.jsxs)(n.li,{children:["Calling ",(0,s.jsx)(n.strong,{children:"getView"})," generic view exposed by the proxy."]}),"\n",(0,s.jsxs)(n.li,{children:["Passing the view named ",(0,s.jsx)(n.strong,{children:"feedback"})," (to dispatch to the correct function once you reach the code that will be executed)."]}),"\n",(0,s.jsx)(n.li,{children:"Finally, unpack the bytes result and cast it to string."}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["With generic calls, a ",(0,s.jsx)(n.strong,{children:"unique"})," dispatch function has to be used and not multiple ",(0,s.jsx)(n.strong,{children:"@entry"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Write a main function annotated with @entry.\nThe parameter is a string representing the entrypoint name and some generic bytes that are required to be cast later on.\nIn a way, compiler checks are broken, so the code is to be well-written and well-cast as earliest as possible to mitigate risks."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsligo",children:'@entry\nexport const main = (action: { entrypointName: string, payload: bytes }, store: storage): return_ => {\n  //destructure the storage to avoid DUP\n\n  const { pokeTraces, feedback, ticketOwnership, tzip18 } = store;\n  const canBeCalled: bool =\n    match(tzip18.contractNext) {\n      when (None()):\n        false // I am the last version, but I cannot be called directly (or is my proxy, see later)\n\n      when (Some(contract)):\n        do {\n          if (Tezos.get_sender() == contract) {\n            return true;\n          } // I am not the last but a parent contract is calling me\n          else {\n            return false;\n          }\n        } // I am not the last version and a not-parent is trying to call me\n\n    };\n  if (Tezos.get_sender() != tzip18.proxy && ! canBeCalled) {\n    return failwith("Only the proxy or contractNext can call this contract");\n  };\n  if (action.entrypointName == "Poke") {\n    return poke(action, [pokeTraces, feedback, ticketOwnership, tzip18]);\n  } else {\n    if (action.entrypointName == "PokeAndGetFeedback") {\n      return match(Bytes.unpack(action.payload) as option<address>) {\n        when (None()):\n          failwith("Cannot find the address parameter for PokeAndGetFeedback")\n        when (Some(other)):\n          pokeAndGetFeedback(\n            other,\n            [pokeTraces, feedback, ticketOwnership, tzip18]\n          )\n      };\n    } else {\n      if (action.entrypointName == "Init") {\n        return match(Bytes.unpack(action.payload) as option<[address, nat]>) {\n          when (None()):\n            failwith("Cannot find the address parameter for changeVersion")\n          when (Some(initParam)):\n            init(\n              [initParam[0], initParam[1]],\n              [pokeTraces, feedback, ticketOwnership, tzip18]\n            )\n        };\n      } else {\n        if (action.entrypointName == "changeVersion") {\n          return match(Bytes.unpack(action.payload) as option<address>) {\n            when (None()):\n              failwith("Cannot find the address parameter for changeVersion")\n            when (Some(other)):\n              changeVersion(\n                other,\n                [pokeTraces, feedback, ticketOwnership, tzip18]\n              )\n          };\n        } else {\n          return failwith("Non-existant method");\n        }\n      }\n    }\n  }\n};\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Start checking that only the proxy contract or the parent of this contract can call the main function. Enable this feature in case the future contract wants to run a migration ",(0,s.jsx)(n.em,{children:"script"})," itself, reading from children's storage (looking at ",(0,s.jsx)(n.code,{children:"tzip18.contractPrevious"})," field )."]}),"\n",(0,s.jsxs)(n.li,{children:["With no more variants, the pattern matching is broken, and ",(0,s.jsx)(n.code,{children:"if...else"})," statement has to be used instead."]}),"\n",(0,s.jsxs)(n.li,{children:["When a payload is passed, unpack it and cast it with ",(0,s.jsx)(n.code,{children:"(Bytes.unpack(action.payload) as option<MY_TYPE_HERE>)"}),". It means the caller and callee agree on the payload structure for each endpoint."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Add the last missing function to change the version of this contract and make it obsolete (just before the main function)."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsligo",children:"/**\n* Function called by a parent contract or administrator to set the current version on an old contract\n**/\n\nconst changeVersion = (\n  newAddress: address,\n  [pokeTraces, feedback, ticketOwnership, tzip18]: [\n    map<address, pokeMessage>,\n    string,\n    map<address, ticket<string>>,\n    TZIP18.tzip18\n  ]\n): return_ => {\n  return [\n    list([]) as list<operation>,\n    {\n      pokeTraces,\n      feedback,\n      ticketOwnership,\n      tzip18: { ...tzip18, contractNext: Some(newAddress) },\n    }\n  ]\n};\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Change the view to a generic one and do an ",(0,s.jsx)(n.code,{children:"if...else"})," on ",(0,s.jsx)(n.code,{children:"viewName"})," argument."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsligo",children:'@view\nconst getView = (viewName: string, store: storage): bytes => {\n  if (viewName == "feedback") {\n    return Bytes.pack(store.feedback);\n  } else return failwith("View " + viewName + " not found on this contract");\n};\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Change the initial storage."}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"Note: for the moment, initialize the proxy address to a fake KT1 address because the proxy is not yet deployed."}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsligo",children:'#import "pokeGame.jsligo" "Contract"\n\nconst default_storage : Contract.storage = {\n    pokeTraces: Map.empty as map<address, Contract.pokeMessage>,\n    feedback: "kiss",\n    ticketOwnership: Map.empty as map<address, ticket<string>>, //ticket of claims\n    tzip18: {\n        proxy: "KT1LXkvAPGEtdFNfFrTyBEySJvQnKrsPn4vD" as address,\n        version: 1 as nat,\n        contractPrevious: None() as option<address>,\n        contractNext: None() as option<address>\n    }\n};\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Compile."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"TAQ_LIGO_IMAGE=ligolang/ligo:1.6.0 taq compile pokeGame.jsligo\n"})}),"\n",(0,s.jsx)(n.p,{children:"All good."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"write-the-unique-proxy",children:"Write the unique proxy"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Create a file ",(0,s.jsx)(n.code,{children:"proxy.jsligo"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"taq create contract proxy.jsligo\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Define the storage and entrypoints on it."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsligo",children:"export type storage = {\n  governance: address, //admins\n  entrypoints: big_map<string, entrypointType> //interface schema map\n};\n\ntype _return = [list<operation>, storage];\n"})}),"\n",(0,s.jsx)(n.p,{children:"The storage:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Holds a /or several admins."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Maintains the interface schema map for all underlying entrypoints."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"Note on parameters: use @entry syntax, parameters is 2 functions."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"call"}),": forward any request to the right underlying entrypoint."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"upgrade"}),": admin endpoint to update the interface schema map or change smart contract version."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Add our missing types just above."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsligo",children:"export type callContract = {\n  entrypointName: string,\n  payload: bytes\n};\n\nexport type entrypointType = {\n  method: string,\n  addr: address\n};\n\nexport type entrypointOperation = {\n  name: string,\n  isRemoved: bool,\n  entrypoint: option<entrypointType>\n};\n\nexport type changeVersion = {\n  oldAddr: address,\n  newAddr: address\n};\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"callContract"}),": payload from user executing an entrypoint (name+payloadBytes)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"entrypointType"}),": payload to be able to call an underlying contract (name+address)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"entrypointOperation"}),": change the entrypoint interface map (new state of the map)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"changeVersion"}),": change the smart contract version (old/new addresses)"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Add the ",(0,s.jsx)(n.code,{children:"Call"}),"entrypoint (simple forward). (Before the main function)."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsligo",children:'// the proxy function\n\n@entry\nconst callContract = (param: callContract, store: storage): _return => {\n  return match(Big_map.find_opt(param.entrypointName, store.entrypoints)) {\n    when (None):\n      failwith("No entrypoint found")\n    when (Some(entry)):\n      match(\n        Tezos.get_contract_opt(entry.addr) as option<contract<callContract>>\n      ) {\n        when (None):\n          failwith("No contract found at this address")\n        when (Some(contract)):\n          [\n            list(\n              [\n                Tezos.transaction(\n                  { entrypointName: entry.method, payload: param.payload },\n                  Tezos.get_amount(),\n                  contract\n                )\n              ]\n            ) as list<operation>,\n            store\n          ]\n      }\n  }\n};\n'})}),"\n",(0,s.jsx)(n.p,{children:"It gets the entrypoint to call and the payload in bytes and just forwards it to the right location."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Then, write the ",(0,s.jsx)(n.code,{children:"upgrade"})," entrypoint. (Before the main function)."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsligo",children:'/**\n* Function for administrators to update entrypoints and change current contract version\n**/\n\n@entry\nconst upgrade = (\n  param: [list<entrypointOperation>, option<changeVersion>],\n  store: storage\n): _return => {\n  if (Tezos.get_sender() != store.governance) {\n    return failwith("Permission denied")\n  };\n  let [upgraded_ep_list, changeVersionOpt] = param;\n  const update_storage = (\n    l: list<entrypointOperation>,\n    m: big_map<string, entrypointType>\n  ): big_map<string, entrypointType> => {\n    return match(l) {\n      when ([]):\n        m\n      when ([x, ...xs]):\n        do {\n          let b: big_map<string, entrypointType> =\n            match(x.entrypoint) {\n              when (None):\n                do {\n                  if (x.isRemoved == true) {\n                    return Big_map.remove(x.name, m)\n                  } else {\n                    return m\n                  }\n                } //mean to remove or unchanged\n\n              when (Some(_ep)):\n                do {\n                  //means to add new or unchanged\n\n                  if (x.isRemoved == false) {\n                    return match(x.entrypoint) {\n                      when (None):\n                        m\n                      when (Some(c)):\n                        Big_map.update(x.name, Some(c), m)\n                    }\n                  } else {\n                    return m\n                  }\n                }\n            };\n          return update_storage(xs, b)\n        }\n    }\n  };\n  //update the entrypoint interface map\n\n  const new_entrypoints: big_map<string, entrypointType> =\n    update_storage(upgraded_ep_list, store.entrypoints);\n  //check if version needs to be changed\n\n  return match(changeVersionOpt) {\n    when (None):\n      [list([]) as list<operation>, { ...store, entrypoints: new_entrypoints }]\n    when (Some(change)):\n      do {\n        let op_change: operation =\n          match(\n            Tezos.get_contract_opt(change.oldAddr) as\n              option<contract<callContract>>\n          ) {\n            when (None):\n              failwith("No contract found at this address")\n            when (Some(contract)):\n              do {\n                let amt = Tezos.get_amount();\n                let payload: address = change.newAddr;\n                return Tezos.transaction(\n                  {\n                    entrypointName: "changeVersion",\n                    payload: Bytes.pack(payload)\n                  },\n                  amt,\n                  contract\n                )\n              }\n          };\n        return [\n          list([op_change]) as list<operation>,\n          { ...store, entrypoints: new_entrypoints }\n        ]\n      }\n  }\n};\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"It loops over the new interface schema to update and do so."}),"\n",(0,s.jsxs)(n.li,{children:["If a ",(0,s.jsx)(n.strong,{children:"changeVersion"})," is required, it calls the old contract to take the new version configuration (and it disables itself)."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"The last change is to expose any view from the underlying contract and declare it at the end of the file."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsligo",children:'@view\nexport const getView = (viewName: string, store: storage): bytes => {\n  return match(Big_map.find_opt(viewName, store.entrypoints)) {\n    when (None):\n      failwith("View " + viewName + " not declared on this proxy")\n    when (Some(ep)):\n      Option.unopt(\n        Tezos.call_view("getView", viewName, ep.addr) as option<bytes>\n      )\n  }\n};\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Expose a generic view on the proxy and pass the name of the final function called on the underlying contract (as the smart contract view is not unreachable/hidden by the proxy contract)."}),"\n",(0,s.jsxs)(n.li,{children:["Search for an exposed view on the interface schema to retrieve the contract address, then call the view and return the result as an ",(0,s.jsx)(n.em,{children:"exposed"})," view."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Compile."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"TAQ_LIGO_IMAGE=ligolang/ligo:1.6.0 taq compile proxy.jsligo\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"deployment",children:"Deployment"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Edit ",(0,s.jsx)(n.code,{children:"proxy.storageList.jsligo"})," to this below ( ",(0,s.jsxs)(n.strong,{children:["!!! be careful to point the ",(0,s.jsx)(n.em,{children:"governance"})," address to your taq default user account !!!"]}),")."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsligo",children:'const default_storage: Contract.storage = {\n    governance: "tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb" as address, //admins\n    entrypoints: Big_map.empty as\n        big_map<\n            string,\n            Contract.entrypointType\n        > //interface schema map\n\n};\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Compile and deploy it."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"TAQ_LIGO_IMAGE=ligolang/ligo:1.6.0 taq compile proxy.jsligo\ntaq deploy proxy.tz -e testing\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-logs",children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Contract \u2502 Address                              \u2502 Alias \u2502 Balance In Mutez \u2502 Destination                    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 proxy.tz \u2502 KT1Ego8vYEa4tPwkJirZfwxgJrqfmTcd8KMU \u2502 proxy \u2502 0                \u2502 https://ghostnet.ecadinfra.com \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Keep this ",(0,s.jsx)(n.strong,{children:"proxy address"}),", as you need to report it below on ",(0,s.jsx)(n.code,{children:"tzip18.proxy"})," field."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Deploy a smart contract V1. ( ","\u26a0\ufe0f"," Change with the ",(0,s.jsx)(n.strong,{children:"proxy address"})," on the file ",(0,s.jsx)(n.code,{children:"pokeGame.storageList.jsligo"})," like here below )."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsligo",children:' #import "pokeGame.jsligo" "Contract"\n\n const default_storage: Contract.storage = {\n     pokeTraces: Map.empty as map<address, Contract.pokeMessage>,\n     feedback: "kiss",\n     ticketOwnership: Map.empty as map<address, ticket<string>>, //ticket of claims\n     tzip18: {\n         proxy: "KT1Ego8vYEa4tPwkJirZfwxgJrqfmTcd8KMU" as address,\n         version: 1 as nat,\n         contractPrevious: None() as option<address>,\n         contractNext: None() as option<address>\n     }\n };\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Deploy the underlying V1 contract."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"TAQ_LIGO_IMAGE=ligolang/ligo:1.6.0 taq compile pokeGame.jsligo\ntaq deploy pokeGame.tz -e testing\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-logs",children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Contract    \u2502 Address                              \u2502 Alias    \u2502 Balance In Mutez \u2502 Destination                    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 pokeGame.tz \u2502 KT1FqTZuuJCHz7Fe3J3AdpYgo2CGyhrJ6NAp \u2502 pokeGame \u2502 0                \u2502 https://ghostnet.ecadinfra.com \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Tell the proxy that there is a first contract deployed with some interface.\nEdit the parameter file ",(0,s.jsx)(n.code,{children:"proxy.parameterList.jsligo"})," (","\u26a0\ufe0f"," Change with the smart contract address on each command line on ",(0,s.jsx)(n.code,{children:"addr"})," fields below)."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsligo",children:'#import "proxy.jsligo" "Contract"\n\nconst initProxyWithV1: parameter_of Contract =\n    Upgrade(\n        [\n            list(\n                [\n                    {\n                        name: "Poke",\n                        isRemoved: false,\n                        entrypoint: Some(\n                            {\n                                method: "Poke",\n                                addr: "KT1FqTZuuJCHz7Fe3J3AdpYgo2CGyhrJ6NAp" as\n                                    address\n                            }\n                        )\n                    },\n                    {\n                        name: "PokeAndGetFeedback",\n                        isRemoved: false,\n                        entrypoint: Some(\n                            {\n                                method: "PokeAndGetFeedback",\n                                addr: "KT1FqTZuuJCHz7Fe3J3AdpYgo2CGyhrJ6NAp" as\n                                    address\n                            }\n                        )\n                    },\n                    {\n                        name: "Init",\n                        isRemoved: false,\n                        entrypoint: Some(\n                            {\n                                method: "Init",\n                                addr: "KT1FqTZuuJCHz7Fe3J3AdpYgo2CGyhrJ6NAp" as\n                                    address\n                            }\n                        )\n                    },\n                    {\n                        name: "changeVersion",\n                        isRemoved: false,\n                        entrypoint: Some(\n                            {\n                                method: "changeVersion",\n                                addr: "KT1FqTZuuJCHz7Fe3J3AdpYgo2CGyhrJ6NAp" as\n                                    address\n                            }\n                        )\n                    },\n                    {\n                        name: "feedback",\n                        isRemoved: false,\n                        entrypoint: Some(\n                            {\n                                method: "feedback",\n                                addr: "KT1FqTZuuJCHz7Fe3J3AdpYgo2CGyhrJ6NAp" as\n                                    address\n                            }\n                        )\n                    }\n                ]\n            ) as list<Contract.entrypointOperation>,\n            None() as option<Contract.changeVersion>\n        ]\n    );\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Compile & Call it."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"TAQ_LIGO_IMAGE=ligolang/ligo:1.6.0 taq compile proxy.jsligo\ntaq call proxy --param proxy.parameter.initProxyWithV1.tz -e testing\n"})}),"\n",(0,s.jsx)(n.p,{children:"Output:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-logs",children:'\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Contract Alias \u2502 Contract Address                     \u2502 Parameter                                                                                             \u2502 Entrypoint \u2502 Mutez Transfer \u2502 Destination                    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 proxy          \u2502 KT1Ego8vYEa4tPwkJirZfwxgJrqfmTcd8KMU \u2502 (Left (Pair { Pair "Poke" False (Some (Pair "Poke" "KT1FqTZuuJCHz7Fe3J3AdpYgo2CGyhrJ6NAp")) ;         \u2502 default    \u2502 0              \u2502 https://ghostnet.ecadinfra.com \u2502\n\u2502                \u2502                                      \u2502               Pair "PokeAndGetFeedback"                                                               \u2502            \u2502                \u2502                                \u2502\n\u2502                \u2502                                      \u2502                    False                                                                              \u2502            \u2502                \u2502                                \u2502\n\u2502                \u2502                                      \u2502                    (Some (Pair "PokeAndGetFeedback" "KT1FqTZuuJCHz7Fe3J3AdpYgo2CGyhrJ6NAp")) ;        \u2502            \u2502                \u2502                                \u2502\n\u2502                \u2502                                      \u2502               Pair "Init" False (Some (Pair "Init" "KT1FqTZuuJCHz7Fe3J3AdpYgo2CGyhrJ6NAp")) ;         \u2502            \u2502                \u2502                                \u2502\n\u2502                \u2502                                      \u2502               Pair "changeVersion"                                                                    \u2502            \u2502                \u2502                                \u2502\n\u2502                \u2502                                      \u2502                    False                                                                              \u2502            \u2502                \u2502                                \u2502\n\u2502                \u2502                                      \u2502                    (Some (Pair "changeVersion" "KT1FqTZuuJCHz7Fe3J3AdpYgo2CGyhrJ6NAp")) ;             \u2502            \u2502                \u2502                                \u2502\n\u2502                \u2502                                      \u2502               Pair "feedback" False (Some (Pair "feedback" "KT1FqTZuuJCHz7Fe3J3AdpYgo2CGyhrJ6NAp")) } \u2502            \u2502                \u2502                                \u2502\n\u2502                \u2502                                      \u2502             None))                                                                                    \u2502            \u2502                \u2502                                \u2502\n\u2502                \u2502                                      \u2502                                                                                                       \u2502            \u2502                \u2502                                \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n'})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"update-the-frontend",children:"Update the frontend"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Go on the frontend side, recompile all, and generate typescript classes."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"TAQ_LIGO_IMAGE=ligolang/ligo:1.6.0 taq compile pokeGame.jsligo\nTAQ_LIGO_IMAGE=ligolang/ligo:1.6.0 taq compile proxy.jsligo\ntaq generate types ./app/src\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Change the script to extract the proxy address instead of the contract one, edit ",(0,s.jsx)(n.code,{children:"./app/package.json"}),", and replace the line of script with:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'    "dev": "jq -r -f filter.jq ../.taq/testing-state.json > .env && vite",\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Where you created a new file ",(0,s.jsx)(n.code,{children:"filter.jq"})," with the below content."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'echo \'"VITE_CONTRACT_ADDRESS=" + last(.tasks[] | select(.task == "deploy" and .output[0].contract == "proxy.tz").output[0].address)\' > ./app/filter.jq\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Edit ",(0,s.jsx)(n.code,{children:"./app/src/App.tsx"})," and change the contract address, display, etc ..."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import { NetworkType } from '@airgap/beacon-types';\nimport { BeaconWallet } from '@taquito/beacon-wallet';\nimport { PackDataResponse } from '@taquito/rpc';\nimport { MichelCodecPacker, TezosToolkit } from '@taquito/taquito';\nimport * as api from '@tzkt/sdk-api';\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport ConnectButton from './ConnectWallet';\nimport DisconnectButton from './DisconnectWallet';\nimport {\n  Storage as ContractStorage,\n  PokeGameWalletType,\n} from './pokeGame.types';\nimport { Storage as ProxyStorage, ProxyWalletType } from './proxy.types';\nimport { address, bytes } from './type-aliases';\n\nfunction App() {\n  api.defaults.baseUrl = 'https://api.ghostnet.tzkt.io';\n\n  const [Tezos, setTezos] = useState<TezosToolkit>(\n    new TezosToolkit('https://ghostnet.ecadinfra.com')\n  );\n  const [wallet, setWallet] = useState<BeaconWallet>(\n    new BeaconWallet({\n      name: 'Training',\n      preferredNetwork: NetworkType.GHOSTNET,\n    })\n  );\n\n  const [contracts, setContracts] = useState<Array<api.Contract>>([]);\n  const [contractStorages, setContractStorages] = useState<\n    Map<string, ProxyStorage & ContractStorage>\n  >(new Map());\n\n  const fetchContracts = () => {\n    (async () => {\n      const tzktcontracts: Array<api.Contract> =\n        await api.contractsGetSimilar(\n          import.meta.env.VITE_CONTRACT_ADDRESS,\n          {\n            includeStorage: true,\n            sort: { desc: 'id' },\n          }\n        );\n      setContracts(tzktcontracts);\n      const taquitoContracts: Array<ProxyWalletType> = await Promise.all(\n        tzktcontracts.map(\n          async (tzktcontract) =>\n            (await Tezos.wallet.at(tzktcontract.address!)) as ProxyWalletType\n        )\n      );\n      const map = new Map<string, ProxyStorage & ContractStorage>();\n      for (const c of taquitoContracts) {\n        const s: ProxyStorage = await c.storage();\n        try {\n          let firstEp: { addr: address; method: string } | undefined =\n            await s.entrypoints.get('Poke');\n\n          if (firstEp) {\n            let underlyingContract: PokeGameWalletType =\n              await Tezos.wallet.at('' + firstEp!.addr);\n            map.set(c.address, {\n              ...s,\n              ...(await underlyingContract.storage()),\n            });\n          } else {\n            console.log(\n              'proxy is not well configured ... for contract ' + c.address\n            );\n            continue;\n          }\n        } catch (error) {\n          console.log(error);\n          console.log(\n            'final contract is not well configured ... for contract ' +\n              c.address\n          );\n        }\n      }\n      console.log('map', map);\n      setContractStorages(map);\n    })();\n  };\n\n  useEffect(() => {\n    (async () => {\n      const activeAccount = await wallet.client.getActiveAccount();\n      if (activeAccount) {\n        setUserAddress(activeAccount.address);\n        const balance = await Tezos.tz.getBalance(activeAccount.address);\n        setUserBalance(balance.toNumber());\n      }\n    })();\n  }, []);\n\n  const [userAddress, setUserAddress] = useState<string>('');\n  const [userBalance, setUserBalance] = useState<number>(0);\n  const [contractToPoke, setContractToPoke] = useState<string>('');\n  //poke\n  const poke = async (\n    e: React.MouseEvent<HTMLButtonElement>,\n    contract: api.Contract\n  ) => {\n    e.preventDefault();\n    let c: ProxyWalletType = await Tezos.wallet.at('' + contract.address);\n    try {\n      console.log('contractToPoke', contractToPoke);\n\n      const p = new MichelCodecPacker();\n      let contractToPokeBytes: PackDataResponse = await p.packData({\n        data: { string: contractToPoke },\n        type: { prim: 'address' },\n      });\n      console.log('packed', contractToPokeBytes.packed);\n\n      const op = await c.methods\n        .callContract(\n          'PokeAndGetFeedback',\n          contractToPokeBytes.packed as bytes\n        )\n        .send();\n      await op.confirmation();\n      alert('Tx done');\n    } catch (error: any) {\n      console.log(error);\n      console.table(`Error: ${JSON.stringify(error, null, 2)}`);\n    }\n  };\n\n  //mint\n  const mint = async (\n    e: React.MouseEvent<HTMLButtonElement>,\n    contract: api.Contract\n  ) => {\n    e.preventDefault();\n    let c: ProxyWalletType = await Tezos.wallet.at('' + contract.address);\n    try {\n      console.log('contractToPoke', contractToPoke);\n      const p = new MichelCodecPacker();\n      let initBytes: PackDataResponse = await p.packData({\n        data: {\n          prim: 'Pair',\n          args: [{ string: userAddress }, { int: '1' }],\n        },\n        type: { prim: 'Pair', args: [{ prim: 'address' }, { prim: 'nat' }] },\n      });\n      const op = await c.methods\n        .callContract('Init', initBytes.packed as bytes)\n        .send();\n      await op.confirmation();\n      alert('Tx done');\n    } catch (error: any) {\n      console.log(error);\n      console.table(`Error: ${JSON.stringify(error, null, 2)}`);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <ConnectButton\n          Tezos={Tezos}\n          setTezos={setTezos}\n          setUserAddress={setUserAddress}\n          setUserBalance={setUserBalance}\n          wallet={wallet}\n        />\n\n        <DisconnectButton\n          wallet={wallet}\n          setUserAddress={setUserAddress}\n          setUserBalance={setUserBalance}\n        />\n\n        <div>\n          I am {userAddress} with {userBalance} mutez\n        </div>\n\n        <br />\n        <div>\n          <button onClick={fetchContracts}>Fetch contracts</button>\n          <table>\n            <thead>\n              <tr>\n                <th>address</th>\n                <th>trace \"contract - feedback - user\"</th>\n                <th>action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {contracts.map((contract) => (\n                <tr>\n                  <td style={{ borderStyle: 'dotted' }}>\n                    {contract.address}\n                  </td>\n                  <td style={{ borderStyle: 'dotted' }}>\n                    {contractStorages.get(contract.address!) !== undefined &&\n                    contractStorages.get(contract.address!)!.pokeTraces\n                      ? Array.from(\n                          contractStorages\n                            .get(contract.address!)!\n                            .pokeTraces.entries()\n                        ).map(\n                          (e) =>\n                            e[1].receiver +\n                            ' ' +\n                            e[1].feedback +\n                            ' ' +\n                            e[0] +\n                            ','\n                        )\n                      : ''}\n                  </td>\n                  <td style={{ borderStyle: 'dotted' }}>\n                    <input\n                      type=\"text\"\n                      onChange={(e) => {\n                        console.log('e', e.currentTarget.value);\n                        setContractToPoke(e.currentTarget.value);\n                      }}\n                      placeholder=\"enter contract address here\"\n                    />\n                    <button onClick={(e) => poke(e, contract)}>Poke</button>\n                    <button onClick={(e) => mint(e, contract)}>\n                      Mint 1 ticket\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </header>\n    </div>\n  );\n}\nexport default App;\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The contract address now is pointing to the new ",(0,s.jsx)(n.strong,{children:"proxy"})," address."]}),"\n",(0,s.jsxs)(n.li,{children:["Merge the proxy and contract storage into ",(0,s.jsx)(n.code,{children:"ProxyStorage&ContractStorage"})," type definition. Fetching the contracts is appending the storage of the underlying contract to the proxy storage."]}),"\n",(0,s.jsxs)(n.li,{children:["The call to expose the entrypoint is altered. As all are generic, now on the proxy side, there are only ",(0,s.jsx)(n.code,{children:'await c.methods.callContract("my_entrypoint_name",my_packed_payload_bytes).send()'})," calls."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Run the frontend locally."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cd app\nyarn dev\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Do all the same actions as before through the proxy."}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Login."}),"\n",(0,s.jsx)(n.li,{children:"Refresh the contract list."}),"\n",(0,s.jsx)(n.li,{children:"Mint 1 ticket."}),"\n",(0,s.jsx)(n.li,{children:"Wait for the confirmation popup."}),"\n",(0,s.jsx)(n.li,{children:"Poke."}),"\n",(0,s.jsx)(n.li,{children:"Wait for the confirmation popup."}),"\n",(0,s.jsx)(n.li,{children:"Refresh the contract list."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Deploy a new contract V2 and test it again."}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["Note: Remember that the ",(0,s.jsx)(n.code,{children:"storage.feedback"})," field cannot change on any deployed smart contract because there is no exposed method to update it.\nLet's change this value for the new contract instance, and call it ",(0,s.jsx)(n.code,{children:"hello"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Edit ",(0,s.jsx)(n.code,{children:"pokeGame.storageList.jsligo"})," and add a new variable to it. Don't forget again to change ",(0,s.jsx)(n.code,{children:"proxy"})," and ",(0,s.jsx)(n.code,{children:"contractPrevious"})," by our values!"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsligo",children:'const storageV2: Contract.storage = {\n  pokeTraces: Map.empty as map<address, Contract.pokeMessage>,\n  feedback: "hello",\n  ticketOwnership: Map.empty as map<address, ticket<string>>,\n  tzip18: {\n    proxy: "KT1Ego8vYEa4tPwkJirZfwxgJrqfmTcd8KMU" as address,\n    version: 2 as nat,\n    contractPrevious: Some(\n      "KT1FqTZuuJCHz7Fe3J3AdpYgo2CGyhrJ6NAp" as address\n    ) as option<address>,\n    contractNext: None() as option<address>,\n  },\n};\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"TAQ_LIGO_IMAGE=ligolang/ligo:1.6.0 taq compile pokeGame.jsligo\ntaq deploy pokeGame.tz -e testing --storage pokeGame.storage.storageV2.tz\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-logs",children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Contract    \u2502 Address                              \u2502 Alias    \u2502 Balance In Mutez \u2502 Destination                    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 pokeGame.tz \u2502 KT1GFn9rRsMGp1JFthymxCDxQLd2xrWoXXPw \u2502 pokeGame \u2502 0                \u2502 https://ghostnet.ecadinfra.com \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Tell the proxy that there are new V2 entrypoints and remove the V1 ones.\nAdd a new parameter variable on ",(0,s.jsx)(n.code,{children:"proxy.parameterList.jsligo"}),". Don't forget to change the ",(0,s.jsx)(n.code,{children:"addr"})," values with the new contract address just above."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsligo",children:'const initProxyWithV2: parameter_of Contract =\n    Upgrade(\n        [\n            list(\n                [\n                    {\n                        name: "Poke",\n                        isRemoved: false,\n                        entrypoint: Some(\n                            {\n                                method: "Poke",\n                                addr: "KT1GFn9rRsMGp1JFthymxCDxQLd2xrWoXXPw" as\n                                    address\n                            }\n                        )\n                    },\n                    {\n                        name: "PokeAndGetFeedback",\n                        isRemoved: false,\n                        entrypoint: Some(\n                            {\n                                method: "PokeAndGetFeedback",\n                                addr: "KT1GFn9rRsMGp1JFthymxCDxQLd2xrWoXXPw" as\n                                    address\n                            }\n                        )\n                    },\n                    {\n                        name: "Init",\n                        isRemoved: false,\n                        entrypoint: Some(\n                            {\n                                method: "Init",\n                                addr: "KT1GFn9rRsMGp1JFthymxCDxQLd2xrWoXXPw" as\n                                    address\n                            }\n                        )\n                    },\n                    {\n                        name: "changeVersion",\n                        isRemoved: false,\n                        entrypoint: Some(\n                            {\n                                method: "changeVersion",\n                                addr: "KT1GFn9rRsMGp1JFthymxCDxQLd2xrWoXXPw" as\n                                    address\n                            }\n                        )\n                    },\n                    {\n                        name: "feedback",\n                        isRemoved: false,\n                        entrypoint: Some(\n                            {\n                                method: "feedback",\n                                addr: "KT1GFn9rRsMGp1JFthymxCDxQLd2xrWoXXPw" as\n                                    address\n                            }\n                        )\n                    }\n                ]\n            ) as list<Contract.entrypointOperation>,\n            None() as option<Contract.changeVersion>\n        ]\n    );\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Call the proxy to make the changes."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"TAQ_LIGO_IMAGE=ligolang/ligo:1.6.0 taq compile proxy.jsligo\ntaq call proxy --param proxy.parameter.initProxyWithV2.tz -e testing\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Check the logs."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-logs",children:'\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Contract Alias \u2502 Contract Address                     \u2502 Parameter                                                                                             \u2502 Entrypoint \u2502 Mutez Transfer \u2502 Destination                    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 proxy          \u2502 KT1Ego8vYEa4tPwkJirZfwxgJrqfmTcd8KMU \u2502 (Left (Pair { Pair "Poke" False (Some (Pair "Poke" "KT1GFn9rRsMGp1JFthymxCDxQLd2xrWoXXPw")) ;         \u2502 default    \u2502 0              \u2502 https://ghostnet.ecadinfra.com \u2502\n\u2502                \u2502                                      \u2502               Pair "PokeAndGetFeedback"                                                               \u2502            \u2502                \u2502                                \u2502\n\u2502                \u2502                                      \u2502                    False                                                                              \u2502            \u2502                \u2502                                \u2502\n\u2502                \u2502                                      \u2502                    (Some (Pair "PokeAndGetFeedback" "KT1GFn9rRsMGp1JFthymxCDxQLd2xrWoXXPw")) ;        \u2502            \u2502                \u2502                                \u2502\n\u2502                \u2502                                      \u2502               Pair "Init" False (Some (Pair "Init" "KT1GFn9rRsMGp1JFthymxCDxQLd2xrWoXXPw")) ;         \u2502            \u2502                \u2502                                \u2502\n\u2502                \u2502                                      \u2502               Pair "changeVersion"                                                                    \u2502            \u2502                \u2502                                \u2502\n\u2502                \u2502                                      \u2502                    False                                                                              \u2502            \u2502                \u2502                                \u2502\n\u2502                \u2502                                      \u2502                    (Some (Pair "changeVersion" "KT1GFn9rRsMGp1JFthymxCDxQLd2xrWoXXPw")) ;             \u2502            \u2502                \u2502                                \u2502\n\u2502                \u2502                                      \u2502               Pair "feedback" False (Some (Pair "feedback" "KT1GFn9rRsMGp1JFthymxCDxQLd2xrWoXXPw")) } \u2502            \u2502                \u2502                                \u2502\n\u2502                \u2502                                      \u2502             None))                                                                                    \u2502            \u2502                \u2502                                \u2502\n\u2502                \u2502                                      \u2502                                                                                                       \u2502            \u2502                \u2502                                \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Back to the web app, test the flow again:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Refresh the contract list."}),"\n",(0,s.jsx)(n.li,{children:"Mint 1 ticket."}),"\n",(0,s.jsx)(n.li,{children:"Wait for the confirmation popup."}),"\n",(0,s.jsx)(n.li,{children:"Poke."}),"\n",(0,s.jsx)(n.li,{children:"Wait for the confirmation popup."}),"\n",(0,s.jsx)(n.li,{children:"Refresh the contract list."}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Now, the proxy is calling the contract V2 and should return ",(0,s.jsx)(n.code,{children:"hello"})," on the traces and no more ",(0,s.jsx)(n.code,{children:"kiss"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"set-the-old-smart-contract-as-obsolete",children:"Set the old smart contract as obsolete"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Add a new parameter on ",(0,s.jsx)(n.code,{children:"proxy.parameterList.jsligo"})," to force the change of version of the old contract (","\u26a0\ufe0f"," replace below with your addresses for V1 and V2)."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsligo",children:'const changeVersionV1ToV2: parameter_of Contract =\n    Upgrade(\n        [\n            list([]) as list<Contract.entrypointOperation>,\n            Some(\n                {\n                    oldAddr: "KT1FqTZuuJCHz7Fe3J3AdpYgo2CGyhrJ6NAp" as address,\n                    newAddr: "KT1GFn9rRsMGp1JFthymxCDxQLd2xrWoXXPw" as address\n                }\n            ) as option<Contract.changeVersion>\n        ]\n    );\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Compile."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"TAQ_LIGO_IMAGE=ligolang/ligo:1.6.0 taq compile proxy.jsligo\ntaq call proxy --param proxy.parameter.changeVersionV1ToV2.tz -e testing\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Check logs."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-logs",children:'\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Contract Alias \u2502 Contract Address                     \u2502 Parameter                                                                                                 \u2502 Entrypoint \u2502 Mutez Transfer \u2502 Destination                    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 proxy          \u2502 KT1Ego8vYEa4tPwkJirZfwxgJrqfmTcd8KMU \u2502 (Left (Pair {}                                                                                            \u2502 default    \u2502 0              \u2502 https://ghostnet.ecadinfra.com \u2502\n\u2502                \u2502                                      \u2502             (Some (Pair "KT1FqTZuuJCHz7Fe3J3AdpYgo2CGyhrJ6NAp" "KT1GFn9rRsMGp1JFthymxCDxQLd2xrWoXXPw")))) \u2502            \u2502                \u2502                                \u2502\n\u2502                \u2502                                      \u2502                                                                                                           \u2502            \u2502                \u2502                                \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Check on an indexer that the V1 ",(0,s.jsx)(n.code,{children:"storage.tzip18.contractNext"})," is pointing to the next version address V2: ",(0,s.jsx)(n.a,{href:"https://ghostnet.tzkt.io/KT18ceGtUsNtQTk9smxQcaxAswRVkHDDKDgK/storage/",children:"old V1 contract storage"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["This ends the proxy pattern implementation. The old contract is no longer ",(0,s.jsx)(n.strong,{children:"runnable"})," and the proxy is pointing to the last version."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"alternative-composability",children:"Alternative: Composability"}),"\n",(0,s.jsx)(n.p,{children:"Managing a monolithic smart contract like a microservice can reduce the problem, on the other side it increases complexity and application lifecycle on the OPS side."}),"\n",(0,s.jsx)(n.p,{children:"That's your tradeoff."}),"\n",(0,s.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,s.jsx)(n.p,{children:"Now, you can upgrade deployed contracts."})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>i});var a=t(96540);const s={},r=a.createContext(s);function o(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);