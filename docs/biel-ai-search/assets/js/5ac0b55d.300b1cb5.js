"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4064],{56009:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>d,frontMatter:()=>c,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"smart-contracts/data-types/crypto-data-types","title":"Cryptographic data types","description":"Tezos provides hash functions for cryptographic purposes.","source":"@site/docs/smart-contracts/data-types/crypto-data-types.md","sourceDirName":"smart-contracts/data-types","slug":"/smart-contracts/data-types/crypto-data-types","permalink":"/previews/docs/biel-ai-search/smart-contracts/data-types/crypto-data-types","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1712635200000,"frontMatter":{"title":"Cryptographic data types","authors":"Mathias Hiron (Nomadic Labs), Sasha Aldrick (TriliTech), Tim McMackin (TriliTech)","last_update":{"date":"9 April 2024"}},"sidebar":"documentationSidebar","previous":{"title":"Complex data types","permalink":"/previews/docs/biel-ai-search/smart-contracts/data-types/complex-data-types"},"next":{"title":"Comparing values","permalink":"/previews/docs/biel-ai-search/smart-contracts/logic/comparing"}}');var a=i(74848),n=i(28453);const c={title:"Cryptographic data types",authors:"Mathias Hiron (Nomadic Labs), Sasha Aldrick (TriliTech), Tim McMackin (TriliTech)",last_update:{date:"9 April 2024"}},r=void 0,o={},l=[{value:"Checking signatures",id:"checking-signatures",level:2},{value:"BLS12-381 primitives",id:"bls12-381-primitives",level:2},{value:"Implementation details",id:"implementation-details",level:2},{value:"Time-locks",id:"time-locks",level:2},{value:"Implementation details",id:"implementation-details-1",level:2}];function h(e){const t={a:"a",code:"code",h2:"h2",li:"li",p:"p",ul:"ul",...(0,n.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:"Tezos provides hash functions for cryptographic purposes."}),"\n",(0,a.jsxs)(t.p,{children:["By default, use ",(0,a.jsx)(t.code,{children:"BLAKE2B"}),", which computes a cryptographic hash of the value contents using the Blake2b-256 cryptographic hash function."]}),"\n",(0,a.jsx)(t.p,{children:"These other hash functions are available:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"KECCAK"}),": Compute a cryptographic hash of the value contents using the Keccak-256 cryptographic hash function."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"SHA256"}),": Compute a cryptographic hash of the value contents using the Sha256 cryptographic hash function."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"SHA512"}),": Compute a cryptographic hash of the value contents using the Sha512 cryptographic hash function."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"SHA3"}),": Compute a cryptographic hash of the value contents using the SHA3-256 cryptographic hash function."]}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"checking-signatures",children:"Checking signatures"}),"\n",(0,a.jsxs)(t.p,{children:["Tezos lets you check that a given piece of data, a sequence of bytes in a ",(0,a.jsx)(t.code,{children:"bytes"})," data type, has been signed by the holder of the private key corresponding to a given public key."]}),"\n",(0,a.jsxs)(t.p,{children:["The primitive ",(0,a.jsx)(t.code,{children:"CHECK_SIGNATURE"})," takes as parameters the sequence of bytes, the ",(0,a.jsx)(t.code,{children:"signature"})," and the ",(0,a.jsx)(t.code,{children:"public key"}),", and returns a Boolean that indicates if the ",(0,a.jsx)(t.code,{children:"signature"})," is indeed a ",(0,a.jsx)(t.code,{children:"signature"})," of that sequence of bytes, by the holder of ths key."]}),"\n",(0,a.jsx)(t.h2,{id:"bls12-381-primitives",children:"BLS12-381 primitives"}),"\n",(0,a.jsxs)(t.p,{children:["BLS12-381 is the name of an elliptic curve, a cryptographic primitive that can be used for digital ",(0,a.jsx)(t.code,{children:"signatures"})," and zero-knowledge proofs."]}),"\n",(0,a.jsxs)(t.p,{children:["It has the particularity of being pairing-friendly, which makes it possible to create short digital ",(0,a.jsx)(t.code,{children:"signatures"})," that can be efficiently aggregated.\nIt can also be used for identity-based cryptography, single-round multi-party key exchanges, or and efficient polynomial commitment schemes such as KZG commitments."]}),"\n",(0,a.jsx)(t.h2,{id:"implementation-details",children:"Implementation details"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["Michelson: ",(0,a.jsx)(t.a,{href:"https://octez.tezos.com/docs/active/randomness_generation.html#cryptographic-primitives",children:"Cryptographic primitives"})]}),"\n",(0,a.jsxs)(t.li,{children:["LIGO: ",(0,a.jsx)(t.a,{href:"https://ligolang.org/docs/reference/crypto-reference",children:"Crypto"})]}),"\n",(0,a.jsxs)(t.li,{children:["Archetype: ",(0,a.jsx)(t.a,{href:"https://archetype-lang.org/docs/reference/expressions/builtins#blake2b%28b%20:%20bytes%29",children:"Blake2b and related"}),", ",(0,a.jsx)(t.a,{href:"https://archetype-lang.org/docs/language-basics/crypto#elliptic-curves",children:"Elliptic curves"})]}),"\n",(0,a.jsxs)(t.li,{children:["SmartPy: ",(0,a.jsx)(t.a,{href:"https://smartpy.io/manual/data-types/bls12-381",children:"BLS12-381 "})]}),"\n",(0,a.jsxs)(t.li,{children:["Taquito: ",(0,a.jsx)(t.a,{href:"https://tezostaquito.io/docs/signing/",children:"Signing data"})]}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"time-locks",children:"Time-locks"}),"\n",(0,a.jsxs)(t.p,{children:["A ",(0,a.jsx)(t.code,{children:"timelock"})," is a cryptographic primitive that can be used as part of a commit-and-reveal scheme, to provide a guarantee that the information associated to the commit is eventually revealed."]}),"\n",(0,a.jsxs)(t.p,{children:["For information about using time-locks, see ",(0,a.jsx)(t.a,{href:"/smart-contracts/timelocks",children:"Timelocks"}),"."]}),"\n",(0,a.jsx)(t.h2,{id:"implementation-details-1",children:"Implementation details"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["Michelson: ",(0,a.jsx)(t.a,{href:"https://octez.tezos.com/docs/active/timelock.html",children:"Time-lock"})]}),"\n",(0,a.jsxs)(t.li,{children:["Archetype: ",(0,a.jsx)(t.a,{href:"https://archetype-lang.org/docs/language-basics/crypto#timelock",children:"Timelock"})]}),"\n",(0,a.jsxs)(t.li,{children:["LIGO: ",(0,a.jsx)(t.a,{href:"https://ligolang.org/docs/reference/current-reference/?lang=jsligo#timelock",children:"Timelock"})]}),"\n"]})]})}function d(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},28453:(e,t,i)=>{i.d(t,{R:()=>c,x:()=>r});var s=i(96540);const a={},n=s.createContext(a);function c(e){const t=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),s.createElement(n.Provider,{value:t},e.children)}}}]);