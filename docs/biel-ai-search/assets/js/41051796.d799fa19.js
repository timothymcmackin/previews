"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1278],{97771:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"tutorials/dapp/part-1","title":"Part 1: Create your minimum dApp on Tezos","description":"To start working with the application, you create a Taqueria project and use it to deploy the Poke contract.","source":"@site/docs/tutorials/dapp/part-1.md","sourceDirName":"tutorials/dapp","slug":"/tutorials/dapp/part-1","permalink":"/previews/docs/biel-ai-search/tutorials/dapp/part-1","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1716350400000,"frontMatter":{"title":"Part 1: Create your minimum dApp on Tezos","authors":"Benjamin Fuentes (Marigold)","last_update":{"date":"22 May 2024"}},"sidebar":"tutorialsSidebar","previous":{"title":"Create your minimum dapp on Tezos","permalink":"/previews/docs/biel-ai-search/tutorials/dapp"},"next":{"title":"Part 2: Inter-contract calls and testing","permalink":"/previews/docs/biel-ai-search/tutorials/dapp/part-2"}}');var a=t(74848),r=t(28453);const o={title:"Part 1: Create your minimum dApp on Tezos",authors:"Benjamin Fuentes (Marigold)",last_update:{date:"22 May 2024"}},i=void 0,c={},l=[{value:"Creating a Taqueria project",id:"creating-a-taqueria-project",level:2},{value:"Write the smart contract",id:"write-the-smart-contract",level:2},{value:"Simulate a call on your smart contract",id:"simulate-a-call-on-your-smart-contract",level:2},{value:"Configure your wallet and deploy",id:"configure-your-wallet-and-deploy",level:3},{value:"Create the frontend",id:"create-the-frontend",level:2},{value:"Create a React app",id:"create-a-react-app",level:3},{value:"Generate the Typescript classes from Michelson code and run the server",id:"generate-the-typescript-classes-from-michelson-code-and-run-the-server",level:3},{value:"Connect / disconnect the wallet",id:"connect--disconnect-the-wallet",level:3},{value:"List other poke contracts via an indexer",id:"list-other-poke-contracts-via-an-indexer",level:3},{value:"Poke your contract",id:"poke-your-contract",level:3},{value:"Summary",id:"summary",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"To start working with the application, you create a Taqueria project and use it to deploy the Poke contract.\nThen you set up a web application to connect with a wallet, and then interact with your smart contract."}),"\n",(0,a.jsxs)(n.p,{children:["Before you begin, make sure that you have installed the tools in the ",(0,a.jsx)(n.a,{href:"/tutorials/dapp#prerequisites",children:"Prerequisites"})," section."]}),"\n",(0,a.jsx)(n.h2,{id:"creating-a-taqueria-project",children:"Creating a Taqueria project"}),"\n",(0,a.jsx)(n.p,{children:"Taqueria manages the project structure and keeps it up to date.\nFor example, when you deploy a new smart contract, Taqueria automatically updates the web app to send transactions to that new smart contract.\nFollow these steps to set up a Taqueria project:"}),"\n",(0,a.jsx)(n.p,{children:"On the command-line terminal, run these commands to set up a Taqueria project and install the LIGO and Taquito plugins:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"taq init training\ncd training\ntaq install @taqueria/plugin-ligo\ntaq install @taqueria/plugin-taquito\ntaq create contract pokeGame.jsligo\n"})}),"\n",(0,a.jsx)(n.h2,{id:"write-the-smart-contract",children:"Write the smart contract"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Edit the ",(0,a.jsx)(n.strong,{children:"pokeGame.jsligo"})," file. Remove the default code and paste this code instead."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsligo",children:"export type storage = unit;\n\ntype return_ = [list<operation>, storage];\n\n@entry\nconst poke = (_: unit, store: storage): return_ => {\n  return [list([]), store];\n};\n"})}),"\n",(0,a.jsx)(n.p,{children:"Every contract has to follow these rules :"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["At least one entrypoint, annotated with ",(0,a.jsx)(n.strong,{children:"@entry"})," , with a mandatory signature taking 2 arguments ",(0,a.jsx)(n.strong,{children:"*(parameter, storage)"})," and a return type. An entrypoint is a function that is exposed as an external API.","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"parameter"}),": the entrypoint parameter. Mandatory and can be of any type. For example: an (ignored) variable starting with",(0,a.jsx)(n.code,{children:"_"})," here, and of type ",(0,a.jsx)(n.code,{children:"unit"})," (the type void on LIGO)."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"storage"}),": the on-chain storage. Mandatory and can be of any type. For example, here we use the type ",(0,a.jsx)(n.code,{children:"unit"}),". It is recommended to add an ",(0,a.jsx)(n.code,{children:"export"})," keyword before the type definition as it is a good practice to export it when you are required to write unit tests from another LIGO file."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"return_"}),": a mandatory pair of list of ",(0,a.jsx)(n.code,{children:"operation"})," and the storage type (defined earlier). Return type naming is free but don't use an existing keyword like ",(0,a.jsx)(n.strong,{children:"return"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"/smart-contracts/entrypoints",children:"Have a look at the Entrypoints contracts documentation"}),">"]}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Note: Previous versions of LIGO used a single main function instead of a function for each entrypoint. This syntax is still valid, but it is harder to read and deprecated in LIGO V1."}),"\n",(0,a.jsxs)(n.p,{children:["A ",(0,a.jsx)(n.code,{children:"Poke"})," variant parameter is generated from the ",(0,a.jsx)(n.code,{children:"poke"})," entrypoint function under the hood. A variant is more or less equivalent of the Enum type in Javascript. A default main function is generated and act like as a dispatcher for each of your entrypoints. It means that this painful boilerplate is no more needed on the new syntax."]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"/smart-contracts/data-types/complex-data-types#variants",children:"Have a look at the Variant type documentation"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Write the poke function.\nThe objective is to store every user/caller addresses poking the contract.\nRewrite the storage, and add the caller address to the set of traces."}),"\n",(0,a.jsx)(n.p,{children:"At line 1, replace the line with:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsligo",children:"export type storage = set<address>;\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Replace the ",(0,a.jsx)(n.code,{children:"poke"})," function with:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsligo",children:"@entry\nconst poke = (_: unit, store: storage): return_ => {\n  return [list([]), Set.add(Tezos.get_source(), store)]\n};\n"})}),"\n",(0,a.jsx)(n.p,{children:"Explanation:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["The LIGO Set library has a function ",(0,a.jsx)(n.strong,{children:"add"})," to add one element to the Set of items. There is no concept of Class in LIGO, you use a library to apply functions on objects."]}),"\n",(0,a.jsx)(n.li,{children:"A list of operations is required to return. An empty list is returned here as there is no other contract to call."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://ligolang.org/docs/data-types/sets",children:"Have a look at the Set library documentation"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://ligolang.org/docs/data-types/lists",children:"Have a look at the List library documentation"})}),"\n",(0,a.jsxs)(n.p,{children:["Here, get the caller address using ",(0,a.jsx)(n.code,{children:"Tezos.get_source()"}),". Tezos library provides useful functions for manipulating blockchain objects."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://ligolang.org/docs/reference/tezos-reference?lang=jsligo",children:"Have a look at the Tezos library documentation"})}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"simulate-a-call-on-your-smart-contract",children:"Simulate a call on your smart contract"}),"\n",(0,a.jsx)(n.p,{children:"The LIGO command-line provides sub-commands to test your LIGO code."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://ligolang.org/docs/testing",children:"Have a look at the Testing Framework documentation"})}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Compile the contract with Taqueria (Force to use a specific LIGO version with ",(0,a.jsx)(n.code,{children:"TAQ_LIGO_IMAGE"})," Taqueria environment variable)."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"TAQ_LIGO_IMAGE=ligolang/ligo:1.6.0 taq compile pokeGame.jsligo\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Taqueria is generating the ",(0,a.jsx)(n.code,{children:".tz"})," Michelson file in the ",(0,a.jsx)(n.code,{children:"artifacts"})," folder. The Michelson language is the default stack language used by the Michelson VM to run your code on a node. It is something similar to WASM."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://octez.tezos.com/docs/active/michelson.html",children:"Have a look on the Michelson documentation"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Taqueria is generating two additional files, edit the first file ",(0,a.jsx)(n.code,{children:"pokeGame.storageList.jsligo"})," replacing the current code with:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsligo",children:'#import "pokeGame.jsligo" "Contract"\n\nconst default_storage = Set.empty as set<address>;\n'})}),"\n",(0,a.jsx)(n.p,{children:"When you deploy a contract, you are required to initialize the default state of your smart contract. Taqueria allows you to declare different variables on this file, it is useful to use different initialized states per environment."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://taqueria.io/docs/plugins/plugin-ligo/#the-taq-compile-task",children:"Have a look at the Taqueria documentation"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Compile all (contract + initial storage)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"TAQ_LIGO_IMAGE=ligolang/ligo:1.6.0 taq compile pokeGame.jsligo\n"})}),"\n",(0,a.jsx)(n.p,{children:"It compiles both source code and storage."}),"\n",(0,a.jsxs)(n.p,{children:["Before deployment, to simulate a call to our entrypoint ",(0,a.jsx)(n.strong,{children:"poke"}),", Taq has a ",(0,a.jsx)(n.strong,{children:"taq simulate"})," command.\nThe contract parameter ",(0,a.jsx)(n.code,{children:"Poke()"})," and the initial storage with the default empty set are passed to the execution."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Edit the second file ",(0,a.jsx)(n.strong,{children:"pokeGame.parameterList.jsligo"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsligo",children:'#import "pokeGame.jsligo" "Contract"\nconst default_parameter: parameter_of Contract = Poke();\n'})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Run the simulation. First, install the Tezos client plugin, recompile it all, and then run the simulation."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"taq install @taqueria/plugin-octez-client\nTAQ_LIGO_IMAGE=ligolang/ligo:1.6.0 taq compile pokeGame.jsligo\ntaq simulate pokeGame.tz --param pokeGame.parameter.default_parameter.tz\n"})}),"\n",(0,a.jsx)(n.p,{children:"Output logs:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-logs",children:'\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Contract    \u2502 Result                                       \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 pokeGame.tz \u2502 storage                                      \u2502\n\u2502             \u2502   { "tz1Ke2h7sDdakHJQh8WX4Z372du1KChsksyU" } \u2502\n\u2502             \u2502 emitted operations                           \u2502\n\u2502             \u2502                                              \u2502\n\u2502             \u2502 big_map diff                                 \u2502\n\u2502             \u2502                                              \u2502\n\u2502             \u2502                                              \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n'})}),"\n",(0,a.jsx)(n.p,{children:"You can notice that the instruction is storing the address of the caller in the storage set."}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"configure-your-wallet-and-deploy",children:"Configure your wallet and deploy"}),"\n",(0,a.jsxs)(n.p,{children:["The default Tezos testing testnet is called ",(0,a.jsx)(n.strong,{children:"Ghostnet"}),"."]}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["\u26a0\ufe0f"," You need an account to deploy a contract with some ",(0,a.jsx)(n.code,{children:"tez"})," (the Tezos native currency). The first time you deploy a contract with Taqueria, it is generating a new user account with ",(0,a.jsx)(n.code,{children:"0 tez"}),"."]}),"\n"]}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Deploy your contract to the ",(0,a.jsx)(n.code,{children:"testing"})," environment. Ut forces Taqueria to generate a default account on a testing config file."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'taq deploy pokeGame.tz -e "testing"\n'})}),"\n",(0,a.jsx)(n.p,{children:"You should get this kind of log."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-log",children:'Warning: the faucet field in network configs has been deprecated and will be ignored.\nA keypair with public key hash tz1XXXXXXXXXXXXXXXXXXXXXX was generated for you.\nTo fund this account:\n1. Go to https://teztnets.com and click "Faucet" of the target testnet.\n2. Copy and paste the above key into the \'wallet address field.\n3. Request some Tez (Note that you might need to wait for a few seconds for the network to register the funds).\nNo operations performed.\n'})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Choice N\xb01 (Recommended): Use Alice wallet instead of the generated account. A common usage is to use ",(0,a.jsx)(n.strong,{children:"alice"})," account as Taqueria operator. ",(0,a.jsx)(n.strong,{children:"alice"})," is a commonly known address used on Tezos and she has always some ",(0,a.jsx)(n.strong,{children:"tez"}),". Replace the Taqueria config file for ",(0,a.jsx)(n.strong,{children:"testing"})," env ",(0,a.jsx)(n.strong,{children:".taq/config.local.testing.json"})," with ",(0,a.jsx)(n.strong,{children:"alice"})," settings:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "networkName": "ghostnet",\n  "accounts": {\n    "taqOperatorAccount": {\n      "publicKey": "edpkvGfYw3LyB1UcCahKQk4rF2tvbMUk8GFiTuMjL75uGXrpvKXhjn",\n      "publicKeyHash": "tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb",\n      "privateKey": "edsk3QoqBuvdamxouPhin7swCvkQNgq4jP5KZPbwWNnwdZpSpJiEbq"\n    }\n  }\n}\n'})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Choice N\xb02: use the Taqueria-generated account. Copy the account ",(0,a.jsx)(n.strong,{children:"privateKey"})," from the ",(0,a.jsx)(n.strong,{children:".taq/config.local.testing.json"})," config file. Open your Temple browser extension on your computer or on your mobile phone and do the ",(0,a.jsx)(n.a,{href:"https://www.youtube.com/watch?v=S8_tL8PfCts",children:"initial setup"}),". Once you are done, go to Settings (click on the avatar icon, or display Temple in full page) and click on ",(0,a.jsx)(n.strong,{children:"Import account > Private key"})," tab. Paste the ",(0,a.jsx)(n.strong,{children:"privateKey"})," to Temple text input and confirm. Send free Tez to your new account via this web faucet ",(0,a.jsx)(n.a,{href:"https://teztnets.com/",children:"here"}),". Connect your wallet on ",(0,a.jsx)(n.strong,{children:"Ghostnet"})," and ask for free tez."]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Now you have some money to play with."}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Deploy to Ghostnet testnet."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'taq deploy pokeGame.tz -e "testing"\n'})}),"\n",(0,a.jsx)(n.p,{children:"Your smart contract is deployed on the Ghostnet."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-logs",children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Contract    \u2502 Address                              \u2502 Alias    \u2502 Balance In Mutez \u2502 Destination                    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 pokeGame.tz \u2502 KT1G8tx4qSeJmKRY1p2oxA6eYoCGc9Qi3Fky \u2502 pokeGame \u2502 0                \u2502 https://ghostnet.ecadinfra.com \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"create-the-frontend",children:"Create the frontend"}),"\n",(0,a.jsx)(n.h3,{id:"create-a-react-app",children:"Create a React app"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"yarn create vite\n"})}),"\n",(0,a.jsx)(n.p,{children:"Then follow the prompts. Choose React and then Typescript+SWC:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"? Project name: \u203a app #Enter your project name\n\n? Select a framework: \u203a - Use arrow-keys. Return to submit. # Select React as framework\n    Vanilla\n    Vue\n\u276f   React\n    Preact\n    Lit\n    Svelte\n    Others\n\n? Select a variant: \u203a - Use arrow-keys. Return to submit. #Both TypeScript variants are fine. Select TypeScript only.\n    TypeScript\n\u276f   TypeScript + SWC\n    JavaScript\n    JavaScript + SWC\n"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"https://swc.rs/",children:"More information about SWC here"}),"."]}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Add taquito and tzkt indexer libraries."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"cd app\nyarn add @taquito/taquito @taquito/beacon-wallet @airgap/beacon-sdk  @tzkt/sdk-api\nyarn add -D @airgap/beacon-types\n"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["\u26a0\ufe0f"," Before starting, add the following dependencies in order to resolve polyfill issues. Some dependencies are from NodeJs, thus not included in browsers."]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"For example, in my case, I installed this:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"yarn add --dev process buffer crypto-browserify stream-browserify assert stream-http https-browserify os-browserify url path-browserify\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Create a new file ",(0,a.jsx)(n.code,{children:"nodeSpecific.ts"})," in the src folder of your project and edit with this content:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"touch src/nodeSpecific.ts\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"import { Buffer } from 'buffer';\n\nglobalThis.Buffer = Buffer;\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Open the ",(0,a.jsx)(n.code,{children:"index.html"})," file and replace the ",(0,a.jsx)(n.code,{children:"body"})," with this one:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-html",children:'<body>\n  <div id="root"></div>\n  <script type="module" src="/src/nodeSpecific.ts"><\/script>\n  <script type="module" src="/src/main.tsx"><\/script>\n</body>\n'})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Open the ",(0,a.jsx)(n.code,{children:"vite.config.ts"})," file and replace it with:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"import react from '@vitejs/plugin-react-swc';\nimport path from 'path';\nimport { defineConfig } from 'vite';\n// https://vitejs.dev/config/\nexport default ({ command }) => {\n  const isBuild = command === 'build';\n\n  return defineConfig({\n    define: {},\n    plugins: [react()],\n    build: {\n      commonjsOptions: {\n        transformMixedEsModules: true,\n      },\n    },\n    resolve: {\n      alias: {\n        // dedupe @airgap/beacon-sdk\n        // I almost have no idea why it needs `cjs` on dev and `esm` on build, but this is how it works \ud83e\udd37\u200d\u2642\ufe0f\n        '@airgap/beacon-sdk': path.resolve(\n          path.resolve(),\n          `./node_modules/@airgap/beacon-sdk/dist/${\n            isBuild ? 'esm' : 'cjs'\n          }/index.js`\n        ),\n        stream: 'stream-browserify',\n        os: 'os-browserify/browser',\n        util: 'util',\n        process: 'process/browser',\n        buffer: 'buffer',\n        crypto: 'crypto-browserify',\n        assert: 'assert',\n        http: 'stream-http',\n        https: 'https-browserify',\n        url: 'url',\n        path: 'path-browserify',\n      },\n    },\n  });\n};\n"})}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"generate-the-typescript-classes-from-michelson-code-and-run-the-server",children:"Generate the Typescript classes from Michelson code and run the server"}),"\n",(0,a.jsx)(n.p,{children:"Taqueria is able to generate Typescript classes for any frontend application. It takes the definition of your smart contract and generates the contract entrypoint functions, type definitions, etc ..."}),"\n",(0,a.jsx)(n.p,{children:"To get typescript classes from Taqueria plugin, on your project root folder run:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"taq install @taqueria/plugin-contract-types\ntaq generate types ./app/src\n"})}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Go back to your frontend app and run the dev server."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"cd app\nyarn dev\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Open your browser at: ",(0,a.jsx)(n.a,{href:"http://localhost:5173/",children:"http://localhost:5173/"}),"\nYour app should be running."]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"connect--disconnect-the-wallet",children:"Connect / disconnect the wallet"}),"\n",(0,a.jsx)(n.p,{children:"Declare two React Button components and display the user's address and balance."}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Edit ",(0,a.jsx)(n.strong,{children:"src/App.tsx"})," file:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"import { NetworkType } from '@airgap/beacon-types';\nimport { BeaconWallet } from '@taquito/beacon-wallet';\nimport { TezosToolkit } from '@taquito/taquito';\nimport * as api from '@tzkt/sdk-api';\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport ConnectButton from './ConnectWallet';\nimport DisconnectButton from './DisconnectWallet';\n\nfunction App() {\n  api.defaults.baseUrl = 'https://api.ghostnet.tzkt.io';\n\n  const [Tezos, setTezos] = useState<TezosToolkit>(\n    new TezosToolkit('https://ghostnet.ecadinfra.com')\n  );\n  const [wallet, setWallet] = useState<BeaconWallet>(\n    new BeaconWallet({\n      name: 'Training',\n      preferredNetwork: NetworkType.GHOSTNET,\n    })\n  );\n\n  useEffect(() => {\n    (async () => {\n      const activeAccount = await wallet.client.getActiveAccount();\n      if (activeAccount) {\n        setUserAddress(activeAccount.address);\n        const balance = await Tezos.tz.getBalance(activeAccount.address);\n        setUserBalance(balance.toNumber());\n      }\n    })();\n  }, []);\n\n  const [userAddress, setUserAddress] = useState<string>('');\n  const [userBalance, setUserBalance] = useState<number>(0);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <ConnectButton\n          Tezos={Tezos}\n          setTezos={setTezos}\n          setUserAddress={setUserAddress}\n          setUserBalance={setUserBalance}\n          wallet={wallet}\n        />\n\n        <DisconnectButton\n          wallet={wallet}\n          setUserAddress={setUserAddress}\n          setUserBalance={setUserBalance}\n        />\n\n        <div>\n          I am {userAddress} with {userBalance} mutez\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Let's create the 2 missing src component files:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"touch src/ConnectWallet.tsx\ntouch src/DisconnectWallet.tsx\n"})}),"\n",(0,a.jsx)(n.p,{children:"ConnectWallet button creates an instance wallet, gets user permissions via a popup, and then retrieves the current account information."}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Edit ",(0,a.jsx)(n.strong,{children:"ConnectWallet.tsx"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"import { NetworkType } from '@airgap/beacon-sdk';\nimport { BeaconWallet } from '@taquito/beacon-wallet';\nimport { TezosToolkit } from '@taquito/taquito';\nimport { Dispatch, SetStateAction } from 'react';\ntype ButtonProps = {\n  Tezos: TezosToolkit;\n  setUserAddress: Dispatch<SetStateAction<string>>;\n  setUserBalance: Dispatch<SetStateAction<number>>;\n  wallet: BeaconWallet;\n  setTezos: Dispatch<SetStateAction<TezosToolkit>>;\n};\nconst ConnectButton = ({\n  Tezos,\n  setTezos,\n  setUserAddress,\n  setUserBalance,\n  wallet,\n}: ButtonProps): JSX.Element => {\n  const connectWallet = async (): Promise<void> => {\n    try {\n      await wallet.requestPermissions({\n        network: {\n          type: NetworkType.GHOSTNET,\n          rpcUrl: 'https://ghostnet.ecadinfra.com',\n        },\n      });\n      // gets user's address\n      const userAddress = await wallet.getPKH();\n      const balance = await Tezos.tz.getBalance(userAddress);\n      setUserBalance(balance.toNumber());\n      setUserAddress(userAddress);\n\n      Tezos.setWalletProvider(wallet);\n      setTezos(Tezos);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return (\n    <div className=\"buttons\">\n      <button className=\"button\" onClick={connectWallet}>\n        <span>\n          <i className=\"fas fa-wallet\"></i>&nbsp; Connect with wallet\n        </span>\n      </button>\n    </div>\n  );\n};\nexport default ConnectButton;\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Edit ",(0,a.jsx)(n.strong,{children:"DisconnectWallet.tsx"})]}),"\n",(0,a.jsx)(n.p,{children:"The button cleans the wallet instance and all linked objects."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"import { BeaconWallet } from '@taquito/beacon-wallet';\nimport { Dispatch, SetStateAction } from 'react';\n\ninterface ButtonProps {\n  wallet: BeaconWallet;\n  setUserAddress: Dispatch<SetStateAction<string>>;\n  setUserBalance: Dispatch<SetStateAction<number>>;\n}\n\nconst DisconnectButton = ({\n  wallet,\n  setUserAddress,\n  setUserBalance,\n}: ButtonProps): JSX.Element => {\n  const disconnectWallet = async (): Promise<void> => {\n    setUserAddress('');\n    setUserBalance(0);\n    console.log('disconnecting wallet');\n    await wallet.clearActiveAccount();\n  };\n\n  return (\n    <div className=\"buttons\">\n      <button className=\"button\" onClick={disconnectWallet}>\n        <i className=\"fas fa-times\"></i>&nbsp; Disconnect wallet\n      </button>\n    </div>\n  );\n};\n\nexport default DisconnectButton;\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Save both files, the dev server should refresh the page."}),"\n",(0,a.jsx)(n.p,{children:"As Temple is configured, click on Connect button."}),"\n",(0,a.jsx)(n.p,{children:"On the popup, select your Temple wallet, then your account, and connect."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"The app after you have connected, showing your address and tex balance",src:t(92737).A+"",width:"1097",height:"142"})}),"\n",(0,a.jsxs)(n.p,{children:["Your are ",(0,a.jsx)(n.em,{children:"logged"}),"."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Click on the Disconnect button to test the disconnection, and then reconnect."}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"list-other-poke-contracts-via-an-indexer",children:"List other poke contracts via an indexer"}),"\n",(0,a.jsx)(n.p,{children:"Instead of querying heavily the RPC node to search where are located all other similar contracts and retrieve each address, use an indexer. an indexer is a kind of enriched cache API on top of an RPC node. In this example, the TZKT indexer is used to find other similar contracts."}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["You need to install jq to parse the Taqueria JSON configuration file.\n",(0,a.jsx)(n.a,{href:"https://github.com/stedolan/jq",children:"Install jq"})]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["On ",(0,a.jsx)(n.code,{children:"package.json"}),", change the ",(0,a.jsx)(n.code,{children:"dev"})," command on ",(0,a.jsx)(n.code,{children:"scripts"})," configuration. Prefix it with a ",(0,a.jsx)(n.code,{children:"jq"})," command to create an new environment variable pointing to your last smart contract address on testing env:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'    "dev": "jq -r \'\\"VITE_CONTRACT_ADDRESS=\\" + last(.tasks[]).output[0].address\' ../.taq/testing-state.json > .env && vite",\n'})}),"\n",(0,a.jsx)(n.p,{children:"The last deployed contract address on Ghostnet is set now on our frontend."}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Add a button to fetch all similar contracts like yours, then display the list.\nEdit ",(0,a.jsx)(n.strong,{children:"App.tsx"})," and before the ",(0,a.jsx)(n.code,{children:"return"})," of App function, add this section for the fetch function."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"const [contracts, setContracts] = useState<Array<api.Contract>>([]);\n\nconst fetchContracts = () => {\n  (async () => {\n    setContracts(\n      await api.contractsGetSimilar(import.meta.env.VITE_CONTRACT_ADDRESS, {\n        includeStorage: true,\n        sort: { desc: 'id' },\n      })\n    );\n  })();\n};\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["On the returned ",(0,a.jsx)(n.strong,{children:"html template"})," section, after the display of the user balance div ",(0,a.jsx)(n.code,{children:"I am {userAddress} with {userBalance} mutez"}),", append this:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"<br />\n<div>\n  <button onClick={fetchContracts}>Fetch contracts</button>\n  {contracts.map((contract) =>\n  <div>{contract.address}</div>\n  )}\n</div>\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Save your file and restart your server.\nNow, the start script generates the .env file containing the last deployed contract address."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"yarn dev\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Go to your web browser and click on ",(0,a.jsx)(n.strong,{children:"Fetch contracts"})," button."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{src:t(34872).A+"",width:"1067",height:"287"})}),"\n",(0,a.jsx)(n.p,{children:"Congratulations, you are able to list all similar deployed contracts."}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"poke-your-contract",children:"Poke your contract"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Import the Taqueria-generated types on ",(0,a.jsx)(n.strong,{children:"app/src/App.tsx"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"import { PokeGameWalletType } from './pokeGame.types';\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Add this new function after the previous fetch function, it calls the entrypoint for poking."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"const poke = async (contract: api.Contract) => {\n  let c: PokeGameWalletType = await Tezos.wallet.at<PokeGameWalletType>(\n    '' + contract.address\n  );\n  try {\n    const op = await c.methodsObject.default().send();\n    await op.confirmation();\n    alert('Tx done');\n  } catch (error: any) {\n    console.table(`Error: ${JSON.stringify(error, null, 2)}`);\n  }\n};\n"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["\u26a0\ufe0f"," Normally, a call to ",(0,a.jsx)(n.code,{children:"c.methods.poke()"})," function is expected by convention, but with an unique entrypoint, Michelson generates a unique ",(0,a.jsx)(n.code,{children:"default"})," entrypoint name instead of having the name of the entrypoint function. Also, be careful because all entrypoints function names are in lowercase, and all parameter types are in uppercase."]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Replace the line displaying the contract address ",(0,a.jsx)(n.code,{children:"{contracts.map((contract) => <div>{contract.address}</div>)}"})," with the one below, it adds a Poke button."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-html",children:"    {contracts.map((contract) => <div>{contract.address} <button onClick={() =>poke(contract)}>Poke</button></div>)}\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Save and see the page refreshed, then click on the Poke button."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{src:t(85939).A+"",width:"1071",height:"327"})}),"\n",(0,a.jsx)(n.p,{children:"It calls the contract and adds your public address tz1... to the set of traces."}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Display poke guys"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"To verify that on the page, we can display the list of poke people directly on the page"}),"\n",(0,a.jsxs)(n.p,{children:["Replace again the html previous line ",(0,a.jsx)(n.code,{children:"{contracts ...}"})," with this one"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-html",children:'<table><thead><tr><th>address</th><th>people</th><th>action</th></tr></thead><tbody>\n    {contracts.map((contract) => <tr><td style={{borderStyle: "dotted"}}>{contract.address}</td><td style={{borderStyle: "dotted"}}>{contract.storage.join(", ")}</td><td style={{borderStyle: "dotted"}}><button onClick={() =>poke(contract)}>Poke</button></td></tr>)}\n    </tbody></table>\n'})}),"\n",(0,a.jsx)(n.p,{children:"Contracts are displaying their people now"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{src:t(19823).A+"",width:"1422",height:"876"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["\u2139\ufe0f"," Wait around few second for blockchain confirmation and click on ",(0,a.jsx)(n.code,{children:"fetch contracts"})," to refresh the list"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["\ud83c\udf8a"," Congratulations, you have completed this first dapp training"]}),"\n",(0,a.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,a.jsx)(n.p,{children:"Now, you can create any smart contract using LIGO and create a complete Dapp via Taqueria/Taquito."}),"\n",(0,a.jsx)(n.p,{children:"In the next section, you will learn how to call a Smart contract from a smart contract using callbacks and also write unit and mutation tests."}),"\n",(0,a.jsxs)(n.p,{children:["When you are ready, continue to ",(0,a.jsx)(n.a,{href:"/tutorials/dapp/part-2",children:"Part 2: Inter-contract calls and testing"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},34872:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/dapp-deployedcontracts-6e039e6fb797a0146393a9ec5e86157e.png"},92737:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/dapp-logged-4bb02dbb83afcf36c22fbccf1a9d78f7.png"},85939:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/dapp-pokecontracts-f355cd808eac9212ae8253a254a2503b.png"},19823:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/dapp-table-fca64676ee699ea794b5a7b4d86c4297.png"},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>i});var s=t(96540);const a={},r=s.createContext(a);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);