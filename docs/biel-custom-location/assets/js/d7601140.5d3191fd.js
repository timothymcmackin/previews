"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3852],{30262:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"tutorials/mobile/part-2","title":"Part 2: Create an Ionic mobile application","description":"A web3 mobile application is not different from a web2 one in terms of its basic functionality and user interface. Both types of applications can run on smartphones, tablets, and other mobile devices, and both can access the internet and provide various services to users. However, a web3 mobile application differs from a web2 one in terms of its underlying architecture and design principles. A web3 mobile application is built on decentralized technologies, such as blockchain, smart contracts, and peer-to-peer networks, that enable more transparency, security, and autonomy for users and developers.","source":"@site/docs/tutorials/mobile/part-2.md","sourceDirName":"tutorials/mobile","slug":"/tutorials/mobile/part-2","permalink":"/previews/docs/biel-custom-location/tutorials/mobile/part-2","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1702357200000,"frontMatter":{"title":"Part 2: Create an Ionic mobile application","authors":"Benjamin Fuentes (Marigold)","last_update":{"date":"12 December 2023"}},"sidebar":"tutorialsSidebar","previous":{"title":"Part 1: Create the smart contract","permalink":"/previews/docs/biel-custom-location/tutorials/mobile/part-1"},"next":{"title":"Part 3: Create the game pages","permalink":"/previews/docs/biel-custom-location/tutorials/mobile/part-3"}}');var o=t(74848),r=t(28453);const a={title:"Part 2: Create an Ionic mobile application",authors:"Benjamin Fuentes (Marigold)",last_update:{date:"12 December 2023"}},i=void 0,l={},c=[{value:"Create the Mobile app",id:"create-the-mobile-app",level:2},{value:"Summary",id:"summary",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"A web3 mobile application is not different from a web2 one in terms of its basic functionality and user interface. Both types of applications can run on smartphones, tablets, and other mobile devices, and both can access the internet and provide various services to users. However, a web3 mobile application differs from a web2 one in terms of its underlying architecture and design principles. A web3 mobile application is built on decentralized technologies, such as blockchain, smart contracts, and peer-to-peer networks, that enable more transparency, security, and autonomy for users and developers."}),"\n",(0,o.jsx)(n.h2,{id:"create-the-mobile-app",children:"Create the Mobile app"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"https://ionicframework.com/docs/react",children:"Ionic React"})," is a good hybrid solution for creating mobile applications and compatible with the Typescript version of the ",(0,o.jsx)(n.a,{href:"https://github.com/airgap-it/beacon-sdk",children:"BeaconSDK"}),". The behavior is equivalent to a classical web development, so for a web developer the ramp up is easy."]}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"Beacon: the protocol of communication between the dapp and the wallet."}),"\n"]}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"Note: As of today, it is not recommended to develop a native dApp in Flutter, React Native or native tools as it requires additional UI works (ex: missing wallet popup mechanism to confirm transactions)."}),"\n"]}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Install Ionic:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npm install -g @ionic/cli\nionic start app blank --type react\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Generate smart contract types from the Taqueria plugin:"}),"\n",(0,o.jsx)(n.p,{children:"This command generates Typescript classes from the smart contract interface definition that is used on the frontend."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"taq install @taqueria/plugin-contract-types\ntaq generate types ./app/src\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Uninstall the conflicting old jest libraries/react-scripts and install the required Tezos web3 dependencies and Vite framework:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"cd app\nnpm uninstall -S @testing-library/jest-dom @testing-library/react @testing-library/user-event @types/jest\nrm -rf src/components src/pages/Home.tsx src/pages/Home.css\nrm src/setupTests.ts src/App.test.tsx\necho '/// <reference types=\"vite/client\" />' > src/vite-env.d.ts\n\nnpm install -S  @taquito/taquito @taquito/beacon-wallet @airgap/beacon-sdk  @tzkt/sdk-api\nnpm install -S -D @airgap/beacon-types vite @vitejs/plugin-react-swc @types/react @types/node  @types/react@18.2.42\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Polyfill issues fix:"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:["\u26a0\ufe0f"," Polyfill issues fix: Add the following dependencies in order to avoid polyfill issues. The reason is that some dependencies are Node APIs and are not included in browsers."]}),"\n"]}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Install the missing libraries:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npm i -D process buffer crypto-browserify stream-browserify assert stream-http https-browserify os-browserify url path-browserify\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Create a new file ",(0,o.jsx)(n.code,{children:"nodeSpecific.ts"})," in the ",(0,o.jsx)(n.code,{children:"src"})," folder of your project:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"touch src/nodeSpecific.ts\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Edit it to look like this:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"import { Buffer } from 'buffer';\nglobalThis.Buffer = Buffer;\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Edit the ",(0,o.jsx)(n.code,{children:"vite.config.ts"})," file:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"import react from '@vitejs/plugin-react-swc';\nimport path from 'path';\nimport { defineConfig } from 'vite';\n// https://vitejs.dev/config/\nexport default ({ command }) => {\n  const isBuild = command === 'build';\n\n  return defineConfig({\n    define: { 'process.env': process.env, global: {} },\n    plugins: [react()],\n    build: {\n      commonjsOptions: {\n        transformMixedEsModules: true,\n      },\n    },\n    resolve: {\n      alias: {\n        // dedupe @airgap/beacon-sdk\n        // I almost have no idea why it needs `cjs` on dev and `esm` on build, but this is how it works \ud83e\udd37\u200d\u2642\ufe0f\n        '@airgap/beacon-sdk': path.resolve(\n          path.resolve(),\n          `./node_modules/@airgap/beacon-sdk/dist/${\n            isBuild ? 'esm' : 'cjs'\n          }/index.js`\n        ),\n        stream: 'stream-browserify',\n        os: 'os-browserify/browser',\n        util: 'util',\n        process: 'process/browser',\n        buffer: 'buffer',\n        crypto: 'crypto-browserify',\n        assert: 'assert',\n        http: 'stream-http',\n        https: 'https-browserify',\n        url: 'url',\n        path: 'path-browserify',\n      },\n    },\n  });\n};\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Adapt Ionic for Vite:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Edit ",(0,o.jsx)(n.code,{children:"index.html"})," to fix the Node buffer issue with ",(0,o.jsx)(n.code,{children:"nodeSpecific.ts"})," file and point to the CSS file:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <meta charset="utf-8" />\n    <title>Ionic App</title>\n\n    <base href="/" />\n\n    <meta name="color-scheme" content="light dark" />\n    <meta\n      name="viewport"\n      content="viewport-fit=cover, width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no"\n    />\n    <meta name="format-detection" content="telephone=no" />\n    <meta name="msapplication-tap-highlight" content="no" />\n\n    <link rel="manifest" href="/manifest.json" />\n    <link href="assets/styles.css" rel="stylesheet" />\n\n    <link rel="shortcut icon" type="image/png" href="/favicon.png" />\n\n    \x3c!-- add to homescreen for ios --\x3e\n    <meta name="apple-mobile-web-app-capable" content="yes" />\n    <meta name="apple-mobile-web-app-title" content="Ionic App" />\n    <meta name="apple-mobile-web-app-status-bar-style" content="black" />\n  </head>\n  <body>\n    <div id="root"></div>\n    <script type="module" src="/src/nodeSpecific.ts"><\/script>\n    <script type="module" src="/src/main.tsx"><\/script>\n  </body>\n</html>\n'})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Edit ",(0,o.jsx)(n.strong,{children:"src/main.tsx"})," to force dark mode and remove React strict mode:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { createRoot } from 'react-dom/client';\nimport App from './App';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container!);\n\n// Add or remove the \"dark\" class based on if the media query matches\ndocument.body.classList.add('dark');\n\nroot.render(<App />);\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Modify the default ",(0,o.jsx)(n.strong,{children:"package.json"})," default scripts to use Vite instead of the default React scripts:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'  "scripts": {\n    "dev": "jq -r \'\\"VITE_CONTRACT_ADDRESS=\\" + last(.tasks[]).output[0].address\' ../.taq/testing-state.json > .env && vite --host",\n    "ionic:build": "tsc -v && tsc && vite build",\n    "build": " tsc -v && tsc && vite build",\n    "lint": "eslint src --ext ts,tsx --report-unused-disable-directives --max-warnings 0",\n    "preview": "vite preview",\n    "ionic:serve": "vite dev --host",\n    "sync": "npm run build && ionic cap sync --no-build"\n  },\n'})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Edit the default application file ",(0,o.jsx)(n.code,{children:"src/App.tsx"})," to configure page routing and add the style:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import {\n  IonApp,\n  IonRouterOutlet,\n  RefresherEventDetail,\n  setupIonicReact,\n} from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\nimport { Redirect, Route } from 'react-router-dom';\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/display.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\n\n/* Theme variables */\nimport './theme/variables.css';\n\nimport { NetworkType } from '@airgap/beacon-types';\nimport { BeaconWallet } from '@taquito/beacon-wallet';\nimport { InternalOperationResult } from '@taquito/rpc';\nimport {\n  PollingSubscribeProvider,\n  Subscription,\n  TezosToolkit,\n} from '@taquito/taquito';\nimport React, { Dispatch, SetStateAction, useEffect, useState } from 'react';\nimport { MainWalletType, Storage } from './main.types';\nimport { HomeScreen } from './pages/HomeScreen';\nimport { RulesScreen } from './pages/Rules';\nimport { SessionScreen } from './pages/SessionScreen';\nimport { TopPlayersScreen } from './pages/TopPlayersScreen';\nimport {\n  MMap,\n  address,\n  bytes,\n  mutez,\n  nat,\n  timestamp,\n  unit,\n} from './type-aliases';\n\nsetupIonicReact();\n\nexport class Action implements ActionCisor, ActionPaper, ActionStone {\n  cisor?: unit;\n  paper?: unit;\n  stone?: unit;\n  constructor(cisor?: unit, paper?: unit, stone?: unit) {\n    this.cisor = cisor;\n    this.paper = paper;\n    this.stone = stone;\n  }\n}\nexport type ActionCisor = { cisor?: unit };\nexport type ActionPaper = { paper?: unit };\nexport type ActionStone = { stone?: unit };\n\nexport type Session = {\n  asleep: timestamp;\n  board: MMap<nat, { Some: address } | null>;\n  current_round: nat;\n  decoded_rounds: MMap<\n    nat,\n    Array<{\n      action: { cisor: unit } | { paper: unit } | { stone: unit };\n      player: address;\n    }>\n  >;\n  players: Array<address>;\n  pool: mutez;\n  result: { draw: unit } | { inplay: unit } | { winner: address };\n  rounds: MMap<\n    nat,\n    Array<{\n      action: bytes;\n      player: address;\n    }>\n  >;\n  total_rounds: nat;\n};\n\nexport type UserContextType = {\n  storage: Storage | null;\n  setStorage: Dispatch<SetStateAction<Storage | null>>;\n  userAddress: string;\n  setUserAddress: Dispatch<SetStateAction<string>>;\n  userBalance: number;\n  setUserBalance: Dispatch<SetStateAction<number>>;\n  Tezos: TezosToolkit;\n  wallet: BeaconWallet;\n  mainWalletType: MainWalletType | null;\n  loading: boolean;\n  setLoading: Dispatch<SetStateAction<boolean>>;\n  refreshStorage: (\n    event?: CustomEvent<RefresherEventDetail>\n  ) => Promise<void>;\n  subReveal: Subscription<InternalOperationResult> | undefined;\n  subNewRound: Subscription<InternalOperationResult> | undefined;\n};\nexport const UserContext = React.createContext<UserContextType | null>(null);\n\nconst App: React.FC = () => {\n  const Tezos = new TezosToolkit('https://ghostnet.tezos.marigold.dev');\n\n  const wallet = new BeaconWallet({\n    name: 'Training',\n    preferredNetwork: NetworkType.GHOSTNET,\n  });\n\n  Tezos.setWalletProvider(wallet);\n  Tezos.setStreamProvider(\n    Tezos.getFactory(PollingSubscribeProvider)({\n      shouldObservableSubscriptionRetry: true,\n      pollingIntervalMilliseconds: 1500,\n    })\n  );\n\n  const [userAddress, setUserAddress] = useState<string>('');\n  const [userBalance, setUserBalance] = useState<number>(0);\n  const [storage, setStorage] = useState<Storage | null>(null);\n  const [mainWalletType, setMainWalletType] =\n    useState<MainWalletType | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const [subscriptionsDone, setSubscriptionsDone] = useState<boolean>(false);\n  const [subReveal, setSubReveal] =\n    useState<Subscription<InternalOperationResult>>();\n  const [subNewRound, setSubNewRound] =\n    useState<Subscription<InternalOperationResult>>();\n\n  const refreshStorage = async (\n    event?: CustomEvent<RefresherEventDetail>\n  ): Promise<void> => {\n    try {\n      if (!userAddress) {\n        const activeAccount = await wallet.client.getActiveAccount();\n        let userAddress: string;\n        if (activeAccount) {\n          userAddress = activeAccount.address;\n          setUserAddress(userAddress);\n          const balance = await Tezos.tz.getBalance(userAddress);\n          setUserBalance(balance.toNumber());\n        }\n      }\n\n      console.log(\n        'VITE_CONTRACT_ADDRESS:',\n        import.meta.env.VITE_CONTRACT_ADDRESS\n      );\n      const mainWalletType: MainWalletType =\n        await Tezos.wallet.at<MainWalletType>(\n          import.meta.env.VITE_CONTRACT_ADDRESS\n        );\n      const storage: Storage = await mainWalletType.storage();\n      setMainWalletType(mainWalletType);\n      setStorage(storage);\n      console.log('Storage refreshed');\n\n      event?.detail.complete();\n    } catch (error) {\n      console.log('error refreshing storage', error);\n    }\n  };\n\n  useEffect(() => {\n    try {\n      if (!subscriptionsDone) {\n        const sub = Tezos.stream.subscribeEvent({\n          tag: 'gameStatus',\n          address: import.meta.env.VITE_CONTRACT_ADDRESS!,\n        });\n\n        sub.on('data', (e) => {\n          console.log('on gameStatus event :', e);\n          refreshStorage();\n        });\n\n        setSubReveal(\n          Tezos.stream.subscribeEvent({\n            tag: 'reveal',\n            address: import.meta.env.VITE_CONTRACT_ADDRESS,\n          })\n        );\n\n        setSubNewRound(\n          Tezos.stream.subscribeEvent({\n            tag: 'newRound',\n            address: import.meta.env.VITE_CONTRACT_ADDRESS,\n          })\n        );\n      } else {\n        console.warn(\n          'Tezos.stream.subscribeEvent already done ... ignoring'\n        );\n      }\n    } catch (e) {\n      console.log('Error with Smart contract event pooling', e);\n    }\n\n    console.log('Tezos.stream.subscribeEvent DONE');\n    setSubscriptionsDone(true);\n  }, []);\n\n  useEffect(() => {\n    if (userAddress) {\n      console.warn('userAddress changed', wallet);\n      (async () => await refreshStorage())();\n    }\n  }, [userAddress]);\n\n  return (\n    <IonApp>\n      <UserContext.Provider\n        value={{\n          userAddress,\n          userBalance,\n          Tezos,\n          wallet,\n          storage,\n          mainWalletType,\n          setUserAddress,\n          setUserBalance,\n          setStorage,\n          loading,\n          setLoading,\n          refreshStorage,\n          subReveal,\n          subNewRound,\n        }}\n      >\n        <IonReactRouter>\n          <IonRouterOutlet>\n            <Route path={PAGES.HOME} component={HomeScreen} />\n            <Route path={`${PAGES.SESSION}/:id`} component={SessionScreen} />\n            <Route path={PAGES.TOPPLAYERS} component={TopPlayersScreen} />\n            <Route path={PAGES.RULES} component={RulesScreen} />\n            <Redirect exact from=\"/\" to={PAGES.HOME} />\n          </IonRouterOutlet>\n        </IonReactRouter>\n      </UserContext.Provider>\n    </IonApp>\n  );\n};\n\nexport enum PAGES {\n  HOME = '/home',\n  SESSION = '/session',\n  TOPPLAYERS = '/topplayers',\n  RULES = '/rules',\n}\n\nexport default App;\n"})}),"\n",(0,o.jsx)(n.p,{children:"Explanations:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:'import "@ionic..."'}),": Default standard Ionic imports."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:'import ... from "@airgap/beacon-types" ... from "@taquito/beacon-wallet" ... from "@taquito/taquito"'}),": Require libraries to interact with the Tezos node and the wallet."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"export class Action implements ActionCisor, ActionPaper, ActionStone {...}"}),": Representation of the LIGO variant ",(0,o.jsx)(n.code,{children:"Action"})," in Typescript, which is needed when passing arguments on ",(0,o.jsx)(n.code,{children:"Play"})," function."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"export type Session = {...}"}),": Taqueria exports the global storage type but not this sub-type from the storage type; it is needed for later, so extract a copy."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"export const UserContext = React.createContext<UserContextType | null>(null)"}),": Global React context that is passed along pages. More info on React context ",(0,o.jsx)(n.a,{href:"https://beta.reactjs.org/learn/passing-data-deeply-with-context",children:"here"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"const refreshStorage = async (event?: CustomEvent<RefresherEventDetail>): Promise<void> => {..."}),": A useful function to force the smart contract storage to refresh on React state changes (user balance, state of the game)."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"useEffect(() => { ... Tezos.setStreamProvider(...) ... Tezos.stream.subscribeEvent({..."}),": During application initialization, it configures the wallet, the websocket listening to smart contract events."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"<IonApp><UserContext.Provider ... ><IonReactRouter><IonRouterOutlet><Route path={PAGES.HOME} component={HomeScreen} /> ... "}),": Injects the React context to all pages and declares the global routing of the application."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:'export enum PAGES {  HOME = "/home", ...'}),": Declaration of the global routes."]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Add the default theming (CSS, pictures, etc.) via copying the content of the git repository folder named ",(0,o.jsx)(n.strong,{children:"assets"})," folder to your local project (considering you cloned the repo and assets folder is on root folder)."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"cp -r ../../assets/* .\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Create two React Button components to connect and disconnect the wallet and add code to fetch the user public hash key and balanceL"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Create the 2 missing component files in the ",(0,o.jsx)(n.code,{children:"app"})," folder:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"touch src/ConnectWallet.tsx\ntouch src/DisconnectWallet.tsx\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["In the ",(0,o.jsx)(n.code,{children:"ConnectWallet.tsx"})," file, create a button that creates an instance of the wallet, gets user permissions via a popup, and retrieves account information."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { NetworkType } from '@airgap/beacon-types';\nimport { IonButton } from '@ionic/react';\nimport { BeaconWallet } from '@taquito/beacon-wallet';\nimport { TezosToolkit } from '@taquito/taquito';\nimport { Dispatch, SetStateAction } from 'react';\n\ntype ButtonProps = {\n  Tezos: TezosToolkit;\n  setUserAddress: Dispatch<SetStateAction<string>>;\n  setUserBalance: Dispatch<SetStateAction<number>>;\n  wallet: BeaconWallet;\n};\n\nconst ConnectButton = ({\n  Tezos,\n  setUserAddress,\n  setUserBalance,\n  wallet,\n}: ButtonProps): JSX.Element => {\n  const connectWallet = async (): Promise<void> => {\n    try {\n      console.log('before requestPermissions');\n\n      await wallet.requestPermissions({\n        network: {\n          type: NetworkType.GHOSTNET,\n          rpcUrl: 'https://ghostnet.tezos.marigold.dev',\n        },\n      });\n      console.log('after requestPermissions');\n\n      // gets user's address\n      const userAddress = await wallet.getPKH();\n      const balance = await Tezos.tz.getBalance(userAddress);\n      setUserBalance(balance.toNumber());\n      setUserAddress(userAddress);\n    } catch (error) {\n      console.log('error connectWallet', error);\n    }\n  };\n\n  return (\n    <IonButton expand=\"full\" onClick={connectWallet}>\n      Connect Wallet\n    </IonButton>\n  );\n};\n\nexport default ConnectButton;\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["In the ",(0,o.jsx)(n.code,{children:"DisconnectWallet.tsx"})," file, create a button that cleans the wallet instance and all linked objects:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { IonFab, IonFabButton, IonIcon } from '@ionic/react';\nimport { BeaconWallet } from '@taquito/beacon-wallet';\nimport { power } from 'ionicons/icons';\nimport { Dispatch, SetStateAction } from 'react';\n\ninterface ButtonProps {\n  wallet: BeaconWallet;\n  setUserAddress: Dispatch<SetStateAction<string>>;\n  setUserBalance: Dispatch<SetStateAction<number>>;\n}\n\nconst DisconnectButton = ({\n  wallet,\n  setUserAddress,\n  setUserBalance,\n}: ButtonProps): JSX.Element => {\n  const disconnectWallet = async (): Promise<void> => {\n    setUserAddress('');\n    setUserBalance(0);\n    console.log('disconnecting wallet');\n    await wallet.clearActiveAccount();\n  };\n\n  return (\n    <IonFab slot=\"fixed\" vertical=\"top\" horizontal=\"end\">\n      <IonFabButton>\n        <IonIcon icon={power} onClick={disconnectWallet} />\n      </IonFabButton>\n    </IonFab>\n  );\n};\n\nexport default DisconnectButton;\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Save both files."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Create the missing pages and the error utility class:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"touch src/pages/HomeScreen.tsx\ntouch src/pages/SessionScreen.tsx\ntouch src/pages/Rules.tsx\ntouch src/pages/TopPlayersScreen.tsx\ntouch src/TransactionInvalidBeaconError.ts\n"})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"TransactionInvalidBeaconError.ts"})," utility class is used to display human readable message from Beacon errors."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Make these updates to the files:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"HomeScreen.tsx: the home page where you can access all other pages."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import {\n  IonButton,\n  IonButtons,\n  IonContent,\n  IonFooter,\n  IonHeader,\n  IonIcon,\n  IonImg,\n  IonInput,\n  IonItem,\n  IonLabel,\n  IonList,\n  IonModal,\n  IonPage,\n  IonRefresher,\n  IonRefresherContent,\n  IonSpinner,\n  IonTitle,\n  IonToolbar,\n  useIonAlert,\n} from '@ionic/react';\nimport { BigNumber } from 'bignumber.js';\nimport { person } from 'ionicons/icons';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { PAGES, Session, UserContext, UserContextType } from '../App';\nimport ConnectButton from '../ConnectWallet';\nimport DisconnectButton from '../DisconnectWallet';\nimport { TransactionInvalidBeaconError } from '../TransactionInvalidBeaconError';\nimport Paper from '../assets/paper-logo.webp';\nimport Scissor from '../assets/scissor-logo.webp';\nimport Stone from '../assets/stone-logo.webp';\nimport XTZLogo from '../assets/xtz.webp';\nimport { SelectMembers } from '../components/TzCommunitySelectMembers';\nimport { address, nat } from '../type-aliases';\n\nexport const HomeScreen: React.FC = () => {\n  const [presentAlert] = useIonAlert();\n  const { push } = useHistory();\n\n  const createGameModal = useRef<HTMLIonModalElement>(null);\n  const selectGameModal = useRef<HTMLIonModalElement>(null);\n  function dismissCreateGameModal() {\n    console.log('dismissCreateGameModal');\n    createGameModal.current?.dismiss();\n  }\n  function dismissSelectGameModal() {\n    selectGameModal.current?.dismiss();\n    const element = document.getElementById('home');\n    setTimeout(() => {\n      return element && element.remove();\n    }, 1000); // Give a little time to properly unmount your previous page before removing the old one\n  }\n\n  const {\n    Tezos,\n    wallet,\n    userAddress,\n    userBalance,\n    storage,\n    mainWalletType,\n    setStorage,\n    setUserAddress,\n    setUserBalance,\n    setLoading,\n    loading,\n    refreshStorage,\n  } = React.useContext(UserContext) as UserContextType;\n\n  const [newPlayer, setNewPlayer] = useState<address>('' as address);\n  const [total_rounds, setTotal_rounds] = useState<nat>(\n    new BigNumber(1) as nat\n  );\n  const [myGames, setMyGames] = useState<Map<nat, Session>>();\n\n  useEffect(() => {\n    (async () => {\n      if (storage) {\n        const myGames = new Map(); //filtering our games\n        Array.from(storage.sessions.keys()).forEach((key) => {\n          const session = storage.sessions.get(key);\n\n          if (\n            session.players.indexOf(userAddress as address) >= 0 &&\n            'inplay' in session.result\n          ) {\n            myGames.set(key, session);\n          }\n        });\n        setMyGames(myGames);\n      } else {\n        console.log('storage is not ready yet');\n      }\n    })();\n  }, [storage]);\n\n  const createSession = async (\n    e: React.MouseEvent<HTMLIonButtonElement, MouseEvent>\n  ) => {\n    console.log('createSession');\n    e.preventDefault();\n\n    try {\n      setLoading(true);\n      const op = await mainWalletType?.methods\n        .createSession(total_rounds, [userAddress as address, newPlayer])\n        .send();\n      await op?.confirmation();\n      const newStorage = await mainWalletType?.storage();\n      setStorage(newStorage!);\n      setLoading(false);\n      dismissCreateGameModal();\n      setTimeout(\n        () => push(PAGES.SESSION + '/' + storage?.next_session.toString()),\n        500\n      );\n      //it was the id created\n      console.log('newStorage', newStorage);\n    } catch (error) {\n      console.table(`Error: ${JSON.stringify(error, null, 2)}`);\n      const tibe: TransactionInvalidBeaconError =\n        new TransactionInvalidBeaconError(error);\n      presentAlert({\n        header: 'Error',\n        message: tibe.data_message,\n        buttons: ['Close'],\n      });\n      setLoading(false);\n    }\n    setLoading(false);\n  };\n\n  return (\n    <IonPage className=\"container\">\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>Shifumi</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent fullscreen>\n        <IonRefresher slot=\"fixed\" onIonRefresh={refreshStorage}>\n          <IonRefresherContent></IonRefresherContent>\n        </IonRefresher>\n\n        {loading ? (\n          <div className=\"loading\">\n            <IonItem>\n              <IonLabel>Refreshing ...</IonLabel>\n              <IonSpinner className=\"spinner\"></IonSpinner>\n            </IonItem>\n          </div>\n        ) : (\n          <IonList inset={true}>\n            {!userAddress ? (\n              <>\n                <div\n                  style={{\n                    display: 'flex',\n                    flexDirection: 'row',\n                    padding: '4em',\n                    justifyContent: 'space-around',\n                  }}\n                >\n                  <IonImg src={Stone} className=\"logo\" />\n                  <IonImg src={Paper} className=\"logo\" />\n                  <IonImg src={Scissor} className=\"logo\" />\n                </div>\n                <IonList inset={true}>\n                  <ConnectButton\n                    Tezos={Tezos}\n                    setUserAddress={setUserAddress}\n                    setUserBalance={setUserBalance}\n                    wallet={wallet}\n                  />\n                </IonList>\n              </>\n            ) : (\n              <IonList>\n                <IonItem style={{ padding: 0, margin: 0 }}>\n                  <IonIcon icon={person} />\n                  <IonLabel\n                    style={{ fontSize: '0.8em', direction: 'rtl' }}\n                  >\n                    {userAddress}\n                  </IonLabel>\n                </IonItem>\n                <IonItem style={{ padding: 0, margin: 0 }}>\n                  <IonImg\n                    style={{ height: 24, width: 24 }}\n                    src={XTZLogo}\n                  />\n                  <IonLabel style={{ direction: 'rtl' }}>\n                    {userBalance / 1000000}\n                  </IonLabel>\n                </IonItem>\n\n                <div\n                  style={{\n                    display: 'flex',\n                    flexDirection: 'row',\n                    paddingTop: '10vh',\n                    paddingBottom: '10vh',\n                    justifyContent: 'space-around',\n                    width: '100%',\n                  }}\n                >\n                  <IonImg src={Stone} className=\"logo\" />\n                  <IonImg src={Paper} className=\"logo\" />\n                  <IonImg src={Scissor} className=\"logo\" />\n                </div>\n\n                <IonButton id=\"createGameModalVisible\" expand=\"full\">\n                  New game\n                </IonButton>\n                <IonModal\n                  ref={createGameModal}\n                  trigger=\"createGameModalVisible\"\n                >\n                  <IonHeader>\n                    <IonToolbar>\n                      <IonButtons slot=\"start\">\n                        <IonButton\n                          onClick={() => dismissCreateGameModal()}\n                        >\n                          Cancel\n                        </IonButton>\n                      </IonButtons>\n                      <IonTitle>New Game</IonTitle>\n                      <IonButtons slot=\"end\">\n                        <IonButton\n                          strong={true}\n                          onClick={(e) => createSession(e)}\n                          id=\"createGameModal\"\n                        >\n                          Create\n                        </IonButton>\n                      </IonButtons>\n                    </IonToolbar>\n                  </IonHeader>\n                  <IonContent className=\"ion-padding\">\n                    <h2>How many total rounds ?</h2>\n\n                    <IonItem key=\"total_rounds\">\n                      <IonLabel\n                        position=\"stacked\"\n                        className=\"text\"\n                      ></IonLabel>\n                      <IonInput\n                        onIonChange={(str: any) => {\n                          if (str.detail.value === undefined) return;\n                          setTotal_rounds(\n                            new BigNumber(str.target.value) as nat\n                          );\n                        }}\n                        value={total_rounds.toString()}\n                        placeholder=\"total_rounds\"\n                        type=\"number\"\n                        label=\"Total Rounds\"\n                      />\n                    </IonItem>\n\n                    <h2>Choose your opponent player</h2>\n\n                    <SelectMembers\n                      Tezos={Tezos}\n                      member={newPlayer}\n                      setMember={setNewPlayer}\n                    />\n\n                    <IonItem key=\"newPlayer\">\n                      <IonInput\n                        onIonChange={(str: any) => {\n                          if (str.detail.value === undefined) return;\n                          setNewPlayer(str.detail.value as address);\n                        }}\n                        labelPlacement=\"floating\"\n                        class=\"address\"\n                        value={newPlayer}\n                        placeholder=\"...tz1\"\n                        type=\"text\"\n                        label=\"Tezos Address \"\n                      />\n                    </IonItem>\n                  </IonContent>\n                </IonModal>\n\n                <IonButton id=\"selectGameModalVisible\" expand=\"full\">\n                  Join game\n                </IonButton>\n                <IonModal\n                  ref={selectGameModal}\n                  trigger=\"selectGameModalVisible\"\n                >\n                  <IonHeader>\n                    <IonToolbar>\n                      <IonButtons slot=\"start\">\n                        <IonButton\n                          onClick={() => dismissSelectGameModal()}\n                        >\n                          Cancel\n                        </IonButton>\n                      </IonButtons>\n                      <IonTitle>Select Game</IonTitle>\n                    </IonToolbar>\n                  </IonHeader>\n                  <IonContent>\n                    <IonList inset={true}>\n                      {myGames\n                        ? Array.from(myGames.entries()).map(([key, _]) => (\n                            <IonButton\n                              key={'Game-' + key.toString()}\n                              expand=\"full\"\n                              routerLink={\n                                PAGES.SESSION + '/' + key.toString()\n                              }\n                              onClick={dismissSelectGameModal}\n                            >\n                              {'Game n\xb0' + key.toString()}\n                            </IonButton>\n                          ))\n                        : []}\n                    </IonList>\n                  </IonContent>\n                </IonModal>\n\n                <IonButton routerLink={PAGES.TOPPLAYERS} expand=\"full\">\n                  Top Players\n                </IonButton>\n              </IonList>\n            )}\n          </IonList>\n        )}\n      </IonContent>\n      <IonFooter>\n        <IonToolbar>\n          <IonTitle>\n            <IonButton\n              color=\"primary\"\n              routerLink={PAGES.RULES}\n              expand=\"full\"\n            >\n              Rules\n            </IonButton>\n          </IonTitle>\n        </IonToolbar>\n      </IonFooter>\n\n      {userAddress ? (\n        <DisconnectButton\n          wallet={wallet}\n          setUserAddress={setUserAddress}\n          setUserBalance={setUserBalance}\n        />\n      ) : (\n        <></>\n      )}\n    </IonPage>\n  );\n};\n"})}),"\n",(0,o.jsx)(n.p,{children:"Explanation:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"const createGameModal"}),": The popup to create a new game."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"const selectGameModal"}),": The popup to select a game to join."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:'const [newPlayer, setNewPlayer] = useState<address>("" as address)'}),": Used on the ",(0,o.jsx)(n.code,{children:"New Game"})," popup form to add an opponent."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"const [total_rounds, setTotal_rounds] = useState<nat>(new BigNumber(1) as nat)"}),": Used on the ",(0,o.jsx)(n.code,{children:"New Game"})," popup form to set number of round for one game."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"const [myGames, setMyGames] = useState<Map<nat, Session>>()"}),": Used on the ",(0,o.jsx)(n.code,{children:"Join Game"})," popup window to display the games created or with invitation."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:'Array.from(storage.sessions.keys()).forEach((key) => { ... if (session.players.indexOf(userAddress as address) >= 0 && "inplay" in session.result ...'}),": On storage change event, fetch and filter only games which the user can join and play (that is, with ",(0,o.jsx)(n.code,{children:"inplay"})," status and where user appears on the player list)."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"const createSession = async (...) => { ...  const op = await mainWalletType!.methods.createSession([userAddress as address, newPlayer], total_rounds).send(); ... "}),": This function calls the smart contract entrypoint passing these arguments: current user address, opponent address, and total rounds. Then it redirects to the newly created game page."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:'{...<IonButton ... routerLink={PAGES.SESSION + "/" + key.toString()}'}),": If you click on a game button from the list it redirects you to the game to play."]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"SessionScreen.tsx"}),": This page lets you play on limited rounds and shows the result of the game."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { IonPage } from '@ionic/react';\nimport React from 'react';\n\nexport const SessionScreen: React.FC = () => {\n  return <IonPage className=\"container\"></IonPage>;\n};\n"})}),"\n",(0,o.jsx)(n.p,{children:"You will add more to this file later."}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"TopPlayersScreen.tsx: The player ranking page."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { IonPage } from '@ionic/react';\nimport React from 'react';\n\nexport const TopPlayersScreen: React.FC = () => {\n  return <IonPage className=\"container\"></IonPage>;\n};\n"})}),"\n",(0,o.jsx)(n.p,{children:"You will add more to this file later."}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Rules.tsx: Just some information about game rules."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'import {\n  IonButton,\n  IonButtons,\n  IonContent,\n  IonHeader,\n  IonImg,\n  IonItem,\n  IonList,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n} from \'@ionic/react\';\nimport React from \'react\';\nimport { useHistory } from \'react-router-dom\';\nimport Clock from \'../assets/clock.webp\';\nimport Legend from \'../assets/legend.webp\';\nimport Paper from \'../assets/paper-logo.webp\';\nimport Scissor from \'../assets/scissor-logo.webp\';\nimport Stone from \'../assets/stone-logo.webp\';\n\nexport const RulesScreen: React.FC = () => {\n  const { goBack } = useHistory();\n\n  /* 2. Get the param */\n  return (\n    <IonPage className="container">\n      <IonHeader>\n        <IonToolbar>\n          <IonButtons slot="start">\n            <IonButton onClick={goBack}>Back</IonButton>\n          </IonButtons>\n          <IonTitle>Rules</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent fullscreen>\n        <div style={{ textAlign: \'left\' }}>\n          <IonList>\n            <IonItem className="nopm">\n              <IonImg src={Stone} className="logo" />\n              Stone (Clenched Fist). Rock beats the scissors by hitting it\n            </IonItem>\n            <IonItem className="nopm">\n              <IonImg src={Paper} className="logo" />\n              Paper (open and extended hand) . Paper wins over stone by enveloping\n              it\n            </IonItem>\n            <IonItem className="nopm">\n              <IonImg src={Scissor} className="logo" />\n              Scissors (closed hand with the two fingers) . Scissors wins paper\n              cutting it\n            </IonItem>\n\n            <IonItem className="nopm">\n              <IonImg src={Clock} className="logo" />\n              If you are inactive for more than 10 minutes your opponent can\n              claim the victory\n            </IonItem>\n\n            <IonItem className="nopm">\n              <IonImg src={Legend} className="logo" />\n              <ul style={{ listStyle: \'none\' }}>\n                <li className="win">Won round</li>\n                <li className="lose">Lost round</li>\n                <li className="draw">Draw</li>\n                <li className="current">Current Round</li>\n                <li className="missing">Missing Rounds</li>\n              </ul>\n            </IonItem>\n          </IonList>\n        </div>\n      </IonContent>\n    </IonPage>\n  );\n};\n'})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"TransactionInvalidBeaconError.ts: The utility class that formats Beacon errors."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"export class TransactionInvalidBeaconError {\n  name: string;\n  title: string;\n  message: string;\n  description: string;\n  data_contract_handle: string;\n  data_expected_form: string;\n  data_message: string;\n\n  /**\n      *\n      * @param transactionInvalidBeaconError  {\n      \"name\": \"UnknownBeaconError\",\n      \"title\": \"Aborted\",\n      \"message\": \"[ABORTED_ERROR]:The action was aborted by the user.\",\n      \"description\": \"The action was aborted by the user.\"\n  }\n  */\n\n  constructor(transactionInvalidBeaconError: any) {\n    this.name = transactionInvalidBeaconError.name;\n    this.title = transactionInvalidBeaconError.title;\n    this.message = transactionInvalidBeaconError.message;\n    this.description = transactionInvalidBeaconError.description;\n    this.data_contract_handle = '';\n    this.data_expected_form = '';\n    this.data_message = this.message;\n    if (transactionInvalidBeaconError.data !== undefined) {\n      let dataArray = Array.from<any>(\n        new Map(\n          Object.entries<any>(transactionInvalidBeaconError.data)\n        ).values()\n      );\n      let contract_handle = dataArray.find(\n        (obj) => obj.contract_handle !== undefined\n      );\n      this.data_contract_handle =\n        contract_handle !== undefined\n          ? contract_handle.contract_handle\n          : '';\n      let expected_form = dataArray.find(\n        (obj) => obj.expected_form !== undefined\n      );\n      this.data_expected_form =\n        expected_form !== undefined\n          ? expected_form.expected_form +\n            ':' +\n            expected_form.wrong_expression.string\n          : '';\n      this.data_message =\n        (this.data_contract_handle\n          ? 'Error on contract: ' + this.data_contract_handle + ' '\n          : '') +\n        (this.data_expected_form\n          ? 'error: ' + this.data_expected_form + ' '\n          : '');\n    }\n  }\n}\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Test the application:"}),"\n",(0,o.jsx)(n.p,{children:"To test in web mode, run this command:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npm run dev\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Make sure that your wallet is has some tez on Ghostnet and click on the ",(0,o.jsx)(n.strong,{children:"Connect"})," button."]}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:["Note: If you don't have tokens, to get some free XTZ on Ghostnet, follow this link to the ",(0,o.jsx)(n.a,{href:"https://faucet.ghostnet.teztnets.com/",children:"faucet"}),"."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"On the popup, select your wallet, then your account and connect."}),"\n",(0,o.jsxs)(n.p,{children:["You are ",(0,o.jsx)(n.em,{children:"logged"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"Optional: Click the Disconnect button to test the logout."}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,o.jsx)(n.p,{children:"You have a mobile application where you can connect and disconnect a wallet, some default UI components and styles but not yet an interaction with your smart contract.\nThe next step is to be able to create a game, join a game and play a session."}),"\n",(0,o.jsxs)(n.p,{children:["When you are ready, continue to ",(0,o.jsx)(n.a,{href:"/tutorials/mobile/part-3",children:"Part 3: Create the game pages"}),"."]})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>i});var s=t(96540);const o={},r=s.createContext(o);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);