"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9139],{62912:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"smart-contracts/events","title":"Events","description":"Events are a type of internal operation on Tezos.","source":"@site/docs/smart-contracts/events.md","sourceDirName":"smart-contracts","slug":"/smart-contracts/events","permalink":"/previews/docs/biel-chatbot/smart-contracts/events","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1704862800000,"frontMatter":{"title":"Events","authors":"Tim McMackin","last_update":{"date":"10 January 2024"},"dependencies":{"taquito":"21.0.1","smartpy":"0.20.0","ligo":"1.9.2"}},"sidebar":"documentationSidebar","previous":{"title":"Views","permalink":"/previews/docs/biel-chatbot/smart-contracts/views"},"next":{"title":"Delegation","permalink":"/previews/docs/biel-chatbot/smart-contracts/delegation"}}');var a=t(74848),o=t(28453);const i={title:"Events",authors:"Tim McMackin",last_update:{date:"10 January 2024"},dependencies:{taquito:"21.0.1",smartpy:"0.20.0",ligo:"1.9.2"}},r=void 0,c={},d=[{value:"Event data",id:"event-data",level:2},{value:"Emitting events",id:"emitting-events",level:2},{value:"Responding to events",id:"responding-to-events",level:2},{value:"Implementation details",id:"implementation-details",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"Events are a type of internal operation on Tezos.\nSmart contracts emit events and off-chain applications can listen for events to know when things happen on the chain."}),"\n",(0,a.jsx)(n.h2,{id:"event-data",children:"Event data"}),"\n",(0,a.jsx)(n.p,{children:"An event includes data about the call to the smart contract that triggered the event, including the hash of that operation and the level of the block that included the operation."}),"\n",(0,a.jsx)(n.p,{children:"The event can also include these optional fields:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"A tag that can identify the type of event or help clients filter the stream of events."}),"\n",(0,a.jsx)(n.li,{children:"A payload of data in Michelson format"}),"\n",(0,a.jsx)(n.li,{children:"The Michelson data type of the payload"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"emitting-events",children:"Emitting events"}),"\n",(0,a.jsxs)(n.p,{children:["Each high-level language has its own way of creating events.\nThe compiled Michelson code uses the ",(0,a.jsx)(n.code,{children:"EMIT"})," command to emit the event."]}),"\n",(0,a.jsx)(n.p,{children:"For example, this contract stores a number and emits events when that amount changes:"}),"\n",(0,a.jsx)(n.p,{children:"JsLIGO"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsligo",children:'type storage = int;\n\n@entry\nconst add = (addAmount: int, s: storage): [list<operation>, storage] =>\n    [list([Tezos.emit("%add",{ source: Tezos.get_source(), addAmount: addAmount })]),\n     s + addAmount\n    ];\n\n@entry\nconst reset = (_: unit, s: storage): [list<operation>, storage] =>\n    [list([Tezos.emit("%reset",{ source: Tezos.get_source(), previousValue: s })]),\n     0\n    ];\n'})}),"\n",(0,a.jsx)(n.p,{children:"SmartPy"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'import smartpy as sp\n\n@sp.module\ndef main():\n    class Events(sp.Contract):\n        def __init__(self, value):\n            self.data.storedValue = value\n\n        @sp.entrypoint\n        def add(self, addAmount):\n            sp.emit(sp.record(\n                source=sp.source,\n                addAmount=addAmount\n            ), tag="add", with_type=True)\n            self.data.storedValue += addAmount\n\n        @sp.entrypoint\n        def reset(self):\n            sp.emit(sp.record(\n                source=sp.source,\n                previousValue=self.data.storedValue\n            ), tag="reset", with_type=True)\n            self.data.storedValue = 0\n\nif "templates" not in __name__:\n\n    @sp.add_test()\n    def test():\n        c1 = main.Events(12)\n        scenario = sp.test_scenario("Events", main)\n        scenario.h1("Add")\n        scenario += c1\n        c1.add(2).run(\n            sender = sp.test_account("Alice")\n        )\n        scenario.verify(c1.data.storedValue == 14)\n'})}),"\n",(0,a.jsxs)(n.p,{children:["When a client calls the ",(0,a.jsx)(n.code,{children:"reset"}),' entrypoint, it emits an event that is tagged with "reset" and includes the address that called the entrypoint and the amount that the storage was before it was reset to 0.']}),"\n",(0,a.jsx)(n.h2,{id:"responding-to-events",children:"Responding to events"}),"\n",(0,a.jsx)(n.p,{children:"Smart contracts cannot respond to events."}),"\n",(0,a.jsx)(n.p,{children:"Off-chain applications can listen for and respond to events by monitoring the event operations in blocks."}),"\n",(0,a.jsxs)(n.p,{children:["For example, Taquito includes tools to listen for and respond to events.\nFor example, this code listens for events from the contract with the address ",(0,a.jsx)(n.code,{children:"contractAddress"})," and the tag ",(0,a.jsx)(n.code,{children:"tagName"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"const Tezos = new TezosToolkit(rpcUrl);\n\nTezos.setStreamProvider(\n  Tezos.getFactory(PollingSubscribeProvider)({\n    shouldObservableSubscriptionRetry: true,\n    pollingIntervalMilliseconds: 1500,\n  })\n);\n\ntry {\n  const sub = Tezos.stream.subscribeEvent({\n    tag: tagName,\n    address: contractAddress,\n  });\n\n  sub.on('data', console.log);\n} catch (e) {\n  console.log(e);\n}\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Both the ",(0,a.jsx)(n.code,{children:"tag"})," and ",(0,a.jsx)(n.code,{children:"address"})," parameters are optional in the ",(0,a.jsx)(n.code,{children:"subscribeEvent"})," function, but most clients are interested in events from a specific contract address or tag."]}),"\n",(0,a.jsxs)(n.p,{children:["The event data is in Michelson format, so an event from the ",(0,a.jsx)(n.code,{children:"reset"})," entrypoint of the previous example contract might look like this:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "opHash": "onw8EwWVnZbx2yBHhL72ECRdCPBbw7z1d5hVCJxp7vzihVELM2m",\n  "blockHash": "BM1avumf2rXSFYKf4JS7YJePAL3gutRJwmazvqcSAoaqVBPAmTf",\n  "level": 4908983,\n  "kind": "event",\n  "source": "KT1AJ6EjaJHmH6WiExCGc3PgHo3JB5hBMhEx",\n  "nonce": 0,\n  "type": {\n    "prim": "pair",\n    "args": [\n      {\n        "prim": "int",\n        "annots": ["%previousValue"]\n      },\n      {\n        "prim": "address",\n        "annots": ["%source"]\n      }\n    ]\n  },\n  "tag": "reset",\n  "payload": {\n    "prim": "Pair",\n    "args": [\n      {\n        "int": "17"\n      },\n      {\n        "bytes": "000032041dca76bac940b478aae673e362bd15847ed8"\n      }\n    ]\n  },\n  "result": {\n    "status": "applied",\n    "consumed_milligas": "100000"\n  }\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Note that the address field is returned as a byte value.\nTo convert the bytes to an address, use the ",(0,a.jsx)(n.code,{children:"encodePubKey"})," function in ",(0,a.jsx)(n.code,{children:"@taquito/utils"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["You can see the complete content of the event operation by looking up the operation hash in a block explorer.\nFor example, to see the operation in the previous example, look up the operation ",(0,a.jsx)(n.code,{children:"onw8EwWVnZbx2yBHhL72ECRdCPBbw7z1d5hVCJxp7vzihVELM2m"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"implementation-details",children:"Implementation details"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Michelson: ",(0,a.jsx)(n.a,{href:"https://octez.tezos.com/docs/active/event.html",children:"Contract events"})]}),"\n",(0,a.jsxs)(n.li,{children:["LIGO: ",(0,a.jsx)(n.a,{href:"https://ligolang.org/docs/contract/events",children:"Events"})]}),"\n",(0,a.jsxs)(n.li,{children:["SmartPy: ",(0,a.jsx)(n.a,{href:"https://smartpy.io/manual/syntax/operations",children:(0,a.jsx)(n.code,{children:"sp.emit"})})]}),"\n",(0,a.jsxs)(n.li,{children:["Archetype: ",(0,a.jsx)(n.a,{href:"https://archetype-lang.org/blog/events/#event",children:"Events"})]}),"\n",(0,a.jsxs)(n.li,{children:["Taquito: ",(0,a.jsx)(n.a,{href:"https://tezostaquito.io/docs/subscribe_event",children:"Contract Events"})]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>r});var s=t(96540);const a={},o=s.createContext(a);function i(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);