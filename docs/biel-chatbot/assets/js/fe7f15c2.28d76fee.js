"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2418],{67345:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"documentationSidebar":[{"type":"category","label":"Overview","items":[{"type":"link","label":"Glossary","href":"/previews/docs/biel-chatbot/overview/glossary","docId":"overview/glossary","unlisted":false},{"type":"link","label":"Using the chatbot","href":"/previews/docs/biel-chatbot/overview/chatbot","docId":"overview/chatbot","unlisted":false},{"type":"link","label":"Other resources and technical support","href":"/previews/docs/biel-chatbot/overview/resources","docId":"overview/resources","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/previews/docs/biel-chatbot/overview/"},{"type":"category","label":"Using Tezos","items":[{"type":"link","label":"Accounts","href":"/previews/docs/biel-chatbot/using/user-accounts","docId":"using/user-accounts","unlisted":false},{"type":"link","label":"Wallets","href":"/previews/docs/biel-chatbot/using/wallets","docId":"using/wallets","unlisted":false},{"type":"link","label":"Applications","href":"/previews/docs/biel-chatbot/using/dapps","docId":"using/dapps","unlisted":false},{"type":"link","label":"Staking","href":"/previews/docs/biel-chatbot/using/staking","docId":"using/staking","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/previews/docs/biel-chatbot/using"},{"type":"category","label":"Architecture","items":[{"type":"link","label":"Nodes","href":"/previews/docs/biel-chatbot/architecture/nodes","docId":"architecture/nodes","unlisted":false},{"type":"link","label":"Bakers","href":"/previews/docs/biel-chatbot/architecture/bakers","docId":"architecture/bakers","unlisted":false},{"type":"link","label":"Accusers","href":"/previews/docs/biel-chatbot/architecture/accusers","docId":"architecture/accusers","unlisted":false},{"type":"link","label":"Accounts and addresses","href":"/previews/docs/biel-chatbot/architecture/accounts","docId":"architecture/accounts","unlisted":false},{"type":"category","label":"Tokens","items":[{"type":"link","label":"FA1.2 tokens","href":"/previews/docs/biel-chatbot/architecture/tokens/FA1.2","docId":"architecture/tokens/FA1.2","unlisted":false},{"type":"link","label":"FA2 tokens","href":"/previews/docs/biel-chatbot/architecture/tokens/FA2","docId":"architecture/tokens/FA2","unlisted":false},{"type":"link","label":"FA2.1 tokens","href":"/previews/docs/biel-chatbot/architecture/tokens/FA2.1","docId":"architecture/tokens/FA2.1","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/previews/docs/biel-chatbot/architecture/tokens"},{"type":"link","label":"Smart Rollups","href":"/previews/docs/biel-chatbot/architecture/smart-rollups","docId":"architecture/smart-rollups","unlisted":false},{"type":"link","label":"The Data Availability Layer","href":"/previews/docs/biel-chatbot/architecture/data-availability-layer","docId":"architecture/data-availability-layer","unlisted":false},{"type":"category","label":"Governance","items":[{"type":"link","label":"History of amendments","href":"/previews/docs/biel-chatbot/architecture/governance/amendment-history","docId":"architecture/governance/amendment-history","unlisted":false},{"type":"link","label":"Tezos Improvement Process (TZIP)","href":"/previews/docs/biel-chatbot/architecture/governance/improvement-process","docId":"architecture/governance/improvement-process","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/previews/docs/biel-chatbot/architecture/governance"}],"collapsed":true,"collapsible":true,"href":"/previews/docs/biel-chatbot/architecture"},{"type":"category","label":"Developing on Tezos","items":[{"type":"link","label":"Installing and funding a wallet","href":"/previews/docs/biel-chatbot/developing/wallet-setup","docId":"developing/wallet-setup","unlisted":false},{"type":"link","label":"Testing locally","href":"/previews/docs/biel-chatbot/developing/testing","docId":"developing/testing","unlisted":false},{"type":"link","label":"Testing on testnets","href":"/previews/docs/biel-chatbot/developing/testnets","docId":"developing/testnets","unlisted":false},{"type":"link","label":"Using a local sandbox","href":"/previews/docs/biel-chatbot/developing/sandbox","docId":"developing/sandbox","unlisted":false},{"type":"link","label":"Storing data and files with IPFS","href":"/previews/docs/biel-chatbot/developing/ipfs","docId":"developing/ipfs","unlisted":false},{"type":"category","label":"The Octez client","items":[{"type":"link","label":"Installing the Octez client","href":"/previews/docs/biel-chatbot/developing/octez-client/installing","docId":"developing/octez-client/installing","unlisted":false},{"type":"link","label":"Creating accounts","href":"/previews/docs/biel-chatbot/developing/octez-client/accounts","docId":"developing/octez-client/accounts","unlisted":false},{"type":"link","label":"Interacting with contracts","href":"/previews/docs/biel-chatbot/developing/octez-client/transactions","docId":"developing/octez-client/transactions","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/previews/docs/biel-chatbot/developing/octez-client"},{"type":"category","label":"Getting information about the blockchain","items":[{"type":"link","label":"Block explorers","href":"/previews/docs/biel-chatbot/developing/information/block-explorers","docId":"developing/information/block-explorers","unlisted":false},{"type":"link","label":"Indexers","href":"/previews/docs/biel-chatbot/developing/information/indexers","docId":"developing/information/indexers","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/previews/docs/biel-chatbot/developing/information"}],"collapsed":true,"collapsible":true,"href":"/previews/docs/biel-chatbot/developing"},{"type":"category","label":"Smart contracts","items":[{"type":"link","label":"Sample smart contracts","href":"/previews/docs/biel-chatbot/smart-contracts/samples","docId":"smart-contracts/samples","unlisted":false},{"type":"category","label":"Languages","items":[{"type":"link","label":"LIGO","href":"/previews/docs/biel-chatbot/smart-contracts/languages/ligo","docId":"smart-contracts/languages/ligo","unlisted":false},{"type":"link","label":"SmartPy","href":"/previews/docs/biel-chatbot/smart-contracts/languages/smartpy","docId":"smart-contracts/languages/smartpy","unlisted":false},{"type":"link","label":"Archetype","href":"/previews/docs/biel-chatbot/smart-contracts/languages/archetype","docId":"smart-contracts/languages/archetype","unlisted":false},{"type":"link","label":"Michelson","href":"/previews/docs/biel-chatbot/smart-contracts/languages/michelson","docId":"smart-contracts/languages/michelson","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/previews/docs/biel-chatbot/smart-contracts/languages"},{"type":"category","label":"Data types","items":[{"type":"link","label":"Primitive data types","href":"/previews/docs/biel-chatbot/smart-contracts/data-types/primitive-data-types","docId":"smart-contracts/data-types/primitive-data-types","unlisted":false},{"type":"link","label":"Complex data types","href":"/previews/docs/biel-chatbot/smart-contracts/data-types/complex-data-types","docId":"smart-contracts/data-types/complex-data-types","unlisted":false},{"type":"link","label":"Cryptographic data types","href":"/previews/docs/biel-chatbot/smart-contracts/data-types/crypto-data-types","docId":"smart-contracts/data-types/crypto-data-types","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/previews/docs/biel-chatbot/smart-contracts/data-types"},{"type":"category","label":"Logic","items":[{"type":"link","label":"Comparing values","href":"/previews/docs/biel-chatbot/smart-contracts/logic/comparing","docId":"smart-contracts/logic/comparing","unlisted":false},{"type":"link","label":"Loops and iterations","href":"/previews/docs/biel-chatbot/smart-contracts/logic/loops","docId":"smart-contracts/logic/loops","unlisted":false},{"type":"link","label":"Operations","href":"/previews/docs/biel-chatbot/smart-contracts/logic/operations","docId":"smart-contracts/logic/operations","unlisted":false},{"type":"link","label":"Handling errors","href":"/previews/docs/biel-chatbot/smart-contracts/logic/errors","docId":"smart-contracts/logic/errors","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"link","label":"Creating smart contracts","href":"/previews/docs/biel-chatbot/smart-contracts/creating","docId":"smart-contracts/creating","unlisted":false},{"type":"link","label":"Deploying smart contracts","href":"/previews/docs/biel-chatbot/smart-contracts/deploying","docId":"smart-contracts/deploying","unlisted":false},{"type":"link","label":"Entrypoints","href":"/previews/docs/biel-chatbot/smart-contracts/entrypoints","docId":"smart-contracts/entrypoints","unlisted":false},{"type":"link","label":"Storage","href":"/previews/docs/biel-chatbot/smart-contracts/storage","docId":"smart-contracts/storage","unlisted":false},{"type":"link","label":"Special values","href":"/previews/docs/biel-chatbot/smart-contracts/special-values","docId":"smart-contracts/special-values","unlisted":false},{"type":"link","label":"Global table of constants","href":"/previews/docs/biel-chatbot/smart-contracts/constants","docId":"smart-contracts/constants","unlisted":false},{"type":"link","label":"Serialization","href":"/previews/docs/biel-chatbot/smart-contracts/serialization","docId":"smart-contracts/serialization","unlisted":false},{"type":"link","label":"Private transactions (Sapling)","href":"/previews/docs/biel-chatbot/smart-contracts/sapling","docId":"smart-contracts/sapling","unlisted":false},{"type":"link","label":"Views","href":"/previews/docs/biel-chatbot/smart-contracts/views","docId":"smart-contracts/views","unlisted":false},{"type":"link","label":"Events","href":"/previews/docs/biel-chatbot/smart-contracts/events","docId":"smart-contracts/events","unlisted":false},{"type":"link","label":"Delegation","href":"/previews/docs/biel-chatbot/smart-contracts/delegation","docId":"smart-contracts/delegation","unlisted":false},{"type":"link","label":"Multi-signature contracts","href":"/previews/docs/biel-chatbot/smart-contracts/multisig","docId":"smart-contracts/multisig","unlisted":false},{"type":"link","label":"Timelocks","href":"/previews/docs/biel-chatbot/smart-contracts/timelocks","docId":"smart-contracts/timelocks","unlisted":false},{"type":"link","label":"Oracles","href":"/previews/docs/biel-chatbot/smart-contracts/oracles","docId":"smart-contracts/oracles","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/previews/docs/biel-chatbot/smart-contracts"},{"type":"category","label":"Decentralized applications (dApps)","items":[{"type":"link","label":"Sample dApps","href":"/previews/docs/biel-chatbot/dApps/samples","docId":"dApps/samples","unlisted":false},{"type":"link","label":"Connecting to wallets","href":"/previews/docs/biel-chatbot/dApps/wallets","docId":"dApps/wallets","unlisted":false},{"type":"link","label":"Sending transactions","href":"/previews/docs/biel-chatbot/dApps/sending-transactions","docId":"dApps/sending-transactions","unlisted":false},{"type":"link","label":"Taquito dApp SDK for TypeScript","href":"/previews/docs/biel-chatbot/dApps/taquito","docId":"dApps/taquito","unlisted":false},{"type":"link","label":"Best practices and avoiding flaws","href":"/previews/docs/biel-chatbot/dApps/best-practices","docId":"dApps/best-practices","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/previews/docs/biel-chatbot/dApps"},{"type":"category","label":"Tezos Unity SDK","items":[{"type":"link","label":"Quickstart","href":"/previews/docs/biel-chatbot/unity/quickstart","docId":"unity/quickstart","unlisted":false},{"type":"link","label":"Connecting accounts","href":"/previews/docs/biel-chatbot/unity/connecting-accounts","docId":"unity/connecting-accounts","unlisted":false},{"type":"link","label":"Calling contracts","href":"/previews/docs/biel-chatbot/unity/calling-contracts","docId":"unity/calling-contracts","unlisted":false},{"type":"link","label":"Managing tokens","href":"/previews/docs/biel-chatbot/unity/managing-tokens","docId":"unity/managing-tokens","unlisted":false},{"type":"link","label":"Upgrading","href":"/previews/docs/biel-chatbot/unity/upgrading","docId":"unity/upgrading","unlisted":false},{"type":"category","label":"Reference","items":[{"type":"link","label":"TezosAPI object","href":"/previews/docs/biel-chatbot/unity/reference/API","docId":"unity/reference/API","unlisted":false},{"type":"link","label":"Events","href":"/previews/docs/biel-chatbot/unity/reference/events","docId":"unity/reference/events","unlisted":false},{"type":"link","label":"DataProviderConfigSO scriptable object","href":"/previews/docs/biel-chatbot/unity/reference/DataProviderConfigSO","docId":"unity/reference/DataProviderConfigSO","unlisted":false},{"type":"link","label":"TezosConfig scriptable object","href":"/previews/docs/biel-chatbot/unity/reference/TezosConfigSO","docId":"unity/reference/TezosConfigSO","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/previews/docs/biel-chatbot/unity/reference"}],"collapsed":true,"collapsible":true,"href":"/previews/docs/biel-chatbot/unity"},{"type":"category","label":"Reference","items":[{"type":"link","label":"Documentation style guide","href":"/previews/docs/biel-chatbot/reference/style-guide","docId":"reference/style-guide","unlisted":false},{"type":"link","label":"Text files","href":"/previews/docs/biel-chatbot/reference/textfiles","docId":"reference/textfiles","unlisted":false},{"type":"link","label":"Whitepaper","href":"https://tezos.com/whitepaper.pdf"},{"type":"link","label":"Position paper","href":"https://tezos.com/position-paper.pdf"}],"collapsed":true,"collapsible":true}],"tutorialsSidebar":[{"type":"link","label":"Tutorials home","href":"/previews/docs/biel-chatbot/tutorials","docId":"tutorials","unlisted":false},{"type":"html","value":"<div>Beginner</div>","className":"menu__divider"},{"type":"category","label":"Deploy a smart contract","items":[{"type":"link","label":"Deploy a smart contract with JsLIGO","href":"/previews/docs/biel-chatbot/tutorials/smart-contract/jsligo","docId":"tutorials/smart-contract/jsligo","unlisted":false},{"type":"link","label":"Deploy a smart contract with CameLIGO","href":"/previews/docs/biel-chatbot/tutorials/smart-contract/cameligo","docId":"tutorials/smart-contract/cameligo","unlisted":false},{"type":"link","label":"Deploy a smart contract with SmartPy","href":"/previews/docs/biel-chatbot/tutorials/smart-contract/smartpy","docId":"tutorials/smart-contract/smartpy","unlisted":false},{"type":"link","label":"Deploy a smart contract with Archetype","href":"/previews/docs/biel-chatbot/tutorials/smart-contract/archetype","docId":"tutorials/smart-contract/archetype","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/previews/docs/biel-chatbot/tutorials/smart-contract"},{"type":"category","label":"Start with a minimum dApp and add new features","items":[{"type":"link","label":"Part 1: Create your minimum dApp on Tezos","href":"/previews/docs/biel-chatbot/tutorials/dapp/part-1","docId":"tutorials/dapp/part-1","unlisted":false},{"type":"link","label":"Part 2: Inter-contract calls and testing","href":"/previews/docs/biel-chatbot/tutorials/dapp/part-2","docId":"tutorials/dapp/part-2","unlisted":false},{"type":"link","label":"Part 3: Tickets","href":"/previews/docs/biel-chatbot/tutorials/dapp/part-3","docId":"tutorials/dapp/part-3","unlisted":false},{"type":"link","label":"Part 4: Smart contract upgrades","href":"/previews/docs/biel-chatbot/tutorials/dapp/part-4","docId":"tutorials/dapp/part-4","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/previews/docs/biel-chatbot/tutorials/dapp"},{"type":"html","value":"<div>Intermediate</div>","className":"menu__divider"},{"type":"category","label":"Build a simple web application","items":[{"type":"link","label":"Part 1: Setting up the application","href":"/previews/docs/biel-chatbot/tutorials/build-your-first-app/setting-up-app","docId":"tutorials/build-your-first-app/setting-up-app","unlisted":false},{"type":"link","label":"Part 2: Accessing wallets","href":"/previews/docs/biel-chatbot/tutorials/build-your-first-app/wallets-tokens","docId":"tutorials/build-your-first-app/wallets-tokens","unlisted":false},{"type":"link","label":"Part 3: Sending transactions","href":"/previews/docs/biel-chatbot/tutorials/build-your-first-app/sending-transactions","docId":"tutorials/build-your-first-app/sending-transactions","unlisted":false},{"type":"link","label":"Part 4: Getting information","href":"/previews/docs/biel-chatbot/tutorials/build-your-first-app/getting-information","docId":"tutorials/build-your-first-app/getting-information","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/previews/docs/biel-chatbot/tutorials/build-your-first-app"},{"type":"category","label":"Create a fungible token with the SmartPy FA2 library","items":[{"type":"link","label":"Part 1: Setting up a simple FA2 token","href":"/previews/docs/biel-chatbot/tutorials/smartpy-fa2-fungible/basic-fa2-token","docId":"tutorials/smartpy-fa2-fungible/basic-fa2-token","unlisted":false},{"type":"link","label":"Part 2: Adding minting and burning entrypoints","href":"/previews/docs/biel-chatbot/tutorials/smartpy-fa2-fungible/minting-and-burning","docId":"tutorials/smartpy-fa2-fungible/minting-and-burning","unlisted":false},{"type":"link","label":"Part 3: Adding metadata","href":"/previews/docs/biel-chatbot/tutorials/smartpy-fa2-fungible/adding-metadata","docId":"tutorials/smartpy-fa2-fungible/adding-metadata","unlisted":false},{"type":"link","label":"Part 4: Customizing operations","href":"/previews/docs/biel-chatbot/tutorials/smartpy-fa2-fungible/customizing-operations","docId":"tutorials/smartpy-fa2-fungible/customizing-operations","unlisted":false},{"type":"link","label":"Part 5: Deploying the contract","href":"/previews/docs/biel-chatbot/tutorials/smartpy-fa2-fungible/deploying-contract","docId":"tutorials/smartpy-fa2-fungible/deploying-contract","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/previews/docs/biel-chatbot/tutorials/smartpy-fa2-fungible"},{"type":"category","label":"Create NFTs","items":[{"type":"link","label":"Part 1: Setting up the application","href":"/previews/docs/biel-chatbot/tutorials/create-nfts/setting-up-app","docId":"tutorials/create-nfts/setting-up-app","unlisted":false},{"type":"link","label":"Part 2: Connecting to wallets","href":"/previews/docs/biel-chatbot/tutorials/create-nfts/connect-wallet","docId":"tutorials/create-nfts/connect-wallet","unlisted":false},{"type":"link","label":"Part 3: Sending transactions","href":"/previews/docs/biel-chatbot/tutorials/create-nfts/send-transactions","docId":"tutorials/create-nfts/send-transactions","unlisted":false},{"type":"link","label":"Part 4: Creating the contract","href":"/previews/docs/biel-chatbot/tutorials/create-nfts/create-contract","docId":"tutorials/create-nfts/create-contract","unlisted":false},{"type":"link","label":"Part 5: Showing token information","href":"/previews/docs/biel-chatbot/tutorials/create-nfts/show-info","docId":"tutorials/create-nfts/show-info","unlisted":false},{"type":"link","label":"Summary","href":"/previews/docs/biel-chatbot/tutorials/create-nfts/summary","docId":"tutorials/create-nfts/summary","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/previews/docs/biel-chatbot/tutorials/create-nfts"},{"type":"category","label":"Run a Tezos node in 5 steps","items":[{"type":"link","label":"Step 1: Run an Octez node","href":"/previews/docs/biel-chatbot/tutorials/join-dal-baker/run-node","docId":"tutorials/join-dal-baker/run-node","unlisted":false},{"type":"link","label":"Step 2: Set up baker accounts","href":"/previews/docs/biel-chatbot/tutorials/join-dal-baker/prepare-account","docId":"tutorials/join-dal-baker/prepare-account","unlisted":false},{"type":"link","label":"Step 3: Run an Octez DAL node","href":"/previews/docs/biel-chatbot/tutorials/join-dal-baker/run-dal-node","docId":"tutorials/join-dal-baker/run-dal-node","unlisted":false},{"type":"link","label":"Step 4: Run an Octez baking daemon","href":"/previews/docs/biel-chatbot/tutorials/join-dal-baker/run-baker","docId":"tutorials/join-dal-baker/run-baker","unlisted":false},{"type":"link","label":"Step 5: Verifications","href":"/previews/docs/biel-chatbot/tutorials/join-dal-baker/verify-rights","docId":"tutorials/join-dal-baker/verify-rights","unlisted":false},{"type":"link","label":"Conclusion","href":"/previews/docs/biel-chatbot/tutorials/join-dal-baker/conclusion","docId":"tutorials/join-dal-baker/conclusion","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/previews/docs/biel-chatbot/tutorials/join-dal-baker"},{"type":"category","label":"Bake using a Ledger device","items":[{"type":"link","label":"Install the Ledger baking application of Tezos","href":"/previews/docs/biel-chatbot/tutorials/bake-with-ledger/install-app","docId":"tutorials/bake-with-ledger/install-app","unlisted":false},{"type":"link","label":"Set up your ledger","href":"/previews/docs/biel-chatbot/tutorials/bake-with-ledger/setup-ledger","docId":"tutorials/bake-with-ledger/setup-ledger","unlisted":false},{"type":"link","label":"Set up your Ledger baking key with octez-signer","href":"/previews/docs/biel-chatbot/tutorials/bake-with-ledger/setup-baker","docId":"tutorials/bake-with-ledger/setup-baker","unlisted":false},{"type":"link","label":"Running a baker signing using a Ledger baking key","href":"/previews/docs/biel-chatbot/tutorials/bake-with-ledger/run-baker","docId":"tutorials/bake-with-ledger/run-baker","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/previews/docs/biel-chatbot/tutorials/bake-with-ledger"},{"type":"html","value":"<div>Advanced</div>","className":"menu__divider"},{"type":"category","label":"Deploy a Smart Rollup","items":[{"type":"link","label":"Part 1: Setting up the application","href":"/previews/docs/biel-chatbot/tutorials/smart-rollup/set-up","docId":"tutorials/smart-rollup/set-up","unlisted":false},{"type":"link","label":"Part 2: Running the kernel in debug mode","href":"/previews/docs/biel-chatbot/tutorials/smart-rollup/debug","docId":"tutorials/smart-rollup/debug","unlisted":false},{"type":"link","label":"Part 3: Optimizing the kernel","href":"/previews/docs/biel-chatbot/tutorials/smart-rollup/optimize","docId":"tutorials/smart-rollup/optimize","unlisted":false},{"type":"link","label":"Part 4: Deploying (originating) the rollup","href":"/previews/docs/biel-chatbot/tutorials/smart-rollup/deploy","docId":"tutorials/smart-rollup/deploy","unlisted":false},{"type":"link","label":"Part 5: Running and interacting with the rollup node","href":"/previews/docs/biel-chatbot/tutorials/smart-rollup/run","docId":"tutorials/smart-rollup/run","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/previews/docs/biel-chatbot/tutorials/smart-rollup"},{"type":"category","label":"Build an NFT marketplace","items":[{"type":"link","label":"Part 1: Minting tokens","href":"/previews/docs/biel-chatbot/tutorials/build-an-nft-marketplace/part-1","docId":"tutorials/build-an-nft-marketplace/part-1","unlisted":false},{"type":"link","label":"Part 2: Buying and selling tokens","href":"/previews/docs/biel-chatbot/tutorials/build-an-nft-marketplace/part-2","docId":"tutorials/build-an-nft-marketplace/part-2","unlisted":false},{"type":"link","label":"Part 3: Managing tokens with quantities","href":"/previews/docs/biel-chatbot/tutorials/build-an-nft-marketplace/part-3","docId":"tutorials/build-an-nft-marketplace/part-3","unlisted":false},{"type":"link","label":"Part 4: Handling multi-asset tokens","href":"/previews/docs/biel-chatbot/tutorials/build-an-nft-marketplace/part-4","docId":"tutorials/build-an-nft-marketplace/part-4","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/previews/docs/biel-chatbot/tutorials/build-an-nft-marketplace"},{"type":"category","label":"Learn and play with security","items":[{"type":"link","label":"Part 1: Programming errors","href":"/previews/docs/biel-chatbot/tutorials/security/part-1","docId":"tutorials/security/part-1","unlisted":false},{"type":"link","label":"Part 2: Leaks","href":"/previews/docs/biel-chatbot/tutorials/security/part-2","docId":"tutorials/security/part-2","unlisted":false},{"type":"link","label":"Part 3: User trust & management","href":"/previews/docs/biel-chatbot/tutorials/security/part-3","docId":"tutorials/security/part-3","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/previews/docs/biel-chatbot/tutorials/security"},{"type":"category","label":"Create a mobile game","items":[{"type":"link","label":"Part 1: Create the smart contract","href":"/previews/docs/biel-chatbot/tutorials/mobile/part-1","docId":"tutorials/mobile/part-1","unlisted":false},{"type":"link","label":"Part 2: Create an Ionic mobile application","href":"/previews/docs/biel-chatbot/tutorials/mobile/part-2","docId":"tutorials/mobile/part-2","unlisted":false},{"type":"link","label":"Part 3: Create the game pages","href":"/previews/docs/biel-chatbot/tutorials/mobile/part-3","docId":"tutorials/mobile/part-3","unlisted":false},{"type":"link","label":"Part 4: Publish on the Android store","href":"/previews/docs/biel-chatbot/tutorials/mobile/part-4","docId":"tutorials/mobile/part-4","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/previews/docs/biel-chatbot/tutorials/mobile"},{"type":"category","label":"Implement a file archive with the DAL","items":[{"type":"link","label":"Part 1: Setting up an environment","href":"/previews/docs/biel-chatbot/tutorials/build-files-archive-with-dal/set-up-environment","docId":"tutorials/build-files-archive-with-dal/set-up-environment","unlisted":false},{"type":"link","label":"Part 2: Getting the DAL parameters","href":"/previews/docs/biel-chatbot/tutorials/build-files-archive-with-dal/get-dal-params","docId":"tutorials/build-files-archive-with-dal/get-dal-params","unlisted":false},{"type":"link","label":"Part 3: Getting slot information","href":"/previews/docs/biel-chatbot/tutorials/build-files-archive-with-dal/get-slot-info","docId":"tutorials/build-files-archive-with-dal/get-slot-info","unlisted":false},{"type":"link","label":"Part 4: Publishing on the DAL","href":"/previews/docs/biel-chatbot/tutorials/build-files-archive-with-dal/publishing-on-the-dal","docId":"tutorials/build-files-archive-with-dal/publishing-on-the-dal","unlisted":false},{"type":"link","label":"Part 5: Using the entire slot","href":"/previews/docs/biel-chatbot/tutorials/build-files-archive-with-dal/using-full-slot","docId":"tutorials/build-files-archive-with-dal/using-full-slot","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/previews/docs/biel-chatbot/tutorials/build-files-archive-with-dal"}]},"docs":{"architecture":{"id":"architecture","title":"Architecture","description":"The Tezos blockchain is composed of many Tezos nodes running around the world, complemented by other programs such as bakers and accusers.","sidebar":"documentationSidebar"},"architecture/accounts":{"id":"architecture/accounts","title":"Accounts and addresses","description":"Accounts","sidebar":"documentationSidebar"},"architecture/accusers":{"id":"architecture/accusers","title":"Accusers","description":"Accusers are programs that monitor new blocks, look for problems, and denounce bakers that introduce blocks with problems.","sidebar":"documentationSidebar"},"architecture/bakers":{"id":"architecture/bakers","title":"Bakers","description":"Baking is the process of creating new blocks in the Tezos blockchain.","sidebar":"documentationSidebar"},"architecture/data-availability-layer":{"id":"architecture/data-availability-layer","title":"The Data Availability Layer","description":"The Data Availability Layer (DAL) is a companion peer-to-peer network for the Tezos blockchain, designed to provide additional data bandwidth to Smart Rollups.","sidebar":"documentationSidebar"},"architecture/governance":{"id":"architecture/governance","title":"Governance and self-amendment","description":"Tezos incorporates a built-in, on-chain mechanism for proposing, selecting, testing, and activating protocol upgrades without the need to hard fork.","sidebar":"documentationSidebar"},"architecture/governance/amendment-history":{"id":"architecture/governance/amendment-history","title":"History of amendments","description":"As presented in Governance, the Tezos blockchain is constantly evolving through new amendments.","sidebar":"documentationSidebar"},"architecture/governance/improvement-process":{"id":"architecture/governance/improvement-process","title":"Tezos Improvement Process (TZIP)","description":"Because Tezos is a large decentralized project that is constantly evolving, its members need to have a mechanism for proposing improvements to the ecosystem.","sidebar":"documentationSidebar"},"architecture/nodes":{"id":"architecture/nodes","title":"Nodes","description":"Tezos nodes are peer-to-peer programs running the Tezos protocol to participate in the Tezos network.","sidebar":"documentationSidebar"},"architecture/smart-rollups":{"id":"architecture/smart-rollups","title":"Smart Rollups","description":"Smart Rollups play a crucial part in providing high scalability on Tezos.","sidebar":"documentationSidebar"},"architecture/tokens":{"id":"architecture/tokens","title":"Tokens","description":"In a blockchain ecosystem, a digital asset that can be transferred between accounts is called a token.","sidebar":"documentationSidebar"},"architecture/tokens/FA1.2":{"id":"architecture/tokens/FA1.2","title":"FA1.2 tokens","description":"The FA1.2 standard is for fungible tokens, which are collections of identical, interchangeable tokens.","sidebar":"documentationSidebar"},"architecture/tokens/FA2":{"id":"architecture/tokens/FA2","title":"FA2 tokens","description":"The FA2 standard supports several different token types, including fungible and non-fungible tokens.","sidebar":"documentationSidebar"},"architecture/tokens/FA2.1":{"id":"architecture/tokens/FA2.1","title":"FA2.1 tokens","description":"The FA2.1 standard adds several features to tokens while remaining backward-compatible with the FA2 standard.","sidebar":"documentationSidebar"},"conrefs/popular-wallets":{"id":"conrefs/popular-wallets","title":"popular-wallets","description":"These are some wallets that you can use with Tezos:"},"dApps":{"id":"dApps","title":"Decentralized applications (dApps)","description":"One of the main features of blockchains is decentralization: each transaction is verified by multiple nodes and its validation process does not rely on a single trusted third party.","sidebar":"documentationSidebar"},"dApps/best-practices":{"id":"dApps/best-practices","title":"Best practices and avoiding flaws","description":"When creating a frontend application that uses the Tezos blockchain, you will most probably use a JavaScript framework, may it be React, Vue, Svelte, or another one.","sidebar":"documentationSidebar"},"dApps/samples":{"id":"dApps/samples","title":"Sample dApps","description":"Here are some sample web applications that access Tezos:","sidebar":"documentationSidebar"},"dApps/sending-transactions":{"id":"dApps/sending-transactions","title":"Sending transactions","description":"After connecting to a wallet, dApps can call smart contract entrypoints and make transactions with that wallet.","sidebar":"documentationSidebar"},"dApps/taquito":{"id":"dApps/taquito","title":"Taquito dApp SDK for TypeScript","description":"Taquito is a TypeScript library that dApp developers can use to get information about Tezos and submit transactions.","sidebar":"documentationSidebar"},"dApps/wallets":{"id":"dApps/wallets","title":"Connecting to wallets","description":"dApps must connect to user wallets to view the tokens in the account and to submit transactions on behalf of the wallet\'s owner.","sidebar":"documentationSidebar"},"developing":{"id":"developing","title":"Developing on Tezos","description":"Developing dApps on Tezos is not very different from developing other types of computer applications: you set up a development environment, develop the components of the application locally, test them locally, and then test them on a test network before deploying them to production.","sidebar":"documentationSidebar"},"developing/information":{"id":"developing/information","title":"Getting information about the blockchain","description":"Developers and dApps can get information about the Tezos blockchain, such as account balances, from these sources:","sidebar":"documentationSidebar"},"developing/information/block-explorers":{"id":"developing/information/block-explorers","title":"Block explorers","description":"A blockchain explorer, also known as a block explorer, is an app that tracks activity on a blockchain.","sidebar":"documentationSidebar"},"developing/information/indexers":{"id":"developing/information/indexers","title":"Indexers","description":"Indexers are off-chain applications that retrieve blockchain data, process it, and store it in a way that makes it easier to search and use.","sidebar":"documentationSidebar"},"developing/ipfs":{"id":"developing/ipfs","title":"Storing data and files with IPFS","description":"Because storage space on blockchains is expensive, developers don\'t put large files or large pieces of static data on Tezos.","sidebar":"documentationSidebar"},"developing/octez-client":{"id":"developing/octez-client","title":"The Octez client","description":"The Octez command-line client is part of the Octez suite of tools for interacting with Tezos and running nodes.","sidebar":"documentationSidebar"},"developing/octez-client/accounts":{"id":"developing/octez-client/accounts","title":"Creating accounts","description":"You can create or import accounts into the Octez client just like you do so in wallet applications.","sidebar":"documentationSidebar"},"developing/octez-client/installing":{"id":"developing/octez-client/installing","title":"Installing the Octez client","description":"You can install the Octez client directly on your computer or use a Docker image that has the most recent version of the Octez tools installed.","sidebar":"documentationSidebar"},"developing/octez-client/transactions":{"id":"developing/octez-client/transactions","title":"Interacting with contracts","description":"Before sending transactions to contracts with the Octez client, make sure that your client is configured to use an RPC node for the network that you want to use.","sidebar":"documentationSidebar"},"developing/sandbox":{"id":"developing/sandbox","title":"Using a local sandbox","description":"Local sandboxes allow you to test your work without sending any transactions to Tezos Mainnet or testnets.","sidebar":"documentationSidebar"},"developing/testing":{"id":"developing/testing","title":"Testing locally","description":"Tezos smart contracts are immutable after deployment, so you must rigorously test them before deploying them to ensure functionality, prevent errors, and avoid potential financial losses. Importantly, contract testing doesn\'t require any tokens or a wallet account to execute.","sidebar":"documentationSidebar"},"developing/testnets":{"id":"developing/testnets","title":"Testing on testnets","description":"The current testnets and details about them are at https://teztnets.com/.","sidebar":"documentationSidebar"},"developing/wallet-setup":{"id":"developing/wallet-setup","title":"Installing and funding a wallet","description":"To work with Tezos, you need a wallet, which is an application that maintains your accounts and signs Tezos transactions on your behalf.","sidebar":"documentationSidebar"},"overview/chatbot":{"id":"overview/chatbot","title":"Using the chatbot","description":"The AI-powered search box on this website is a conversational agent (or chatbot) answering questions in plain English, based on the documentation (see documentation sources).","sidebar":"documentationSidebar"},"overview/glossary":{"id":"overview/glossary","title":"Glossary","description":"This glossary is divided in two sectionsAn open-source project and software (as in, \u201ccontributing to the Tezos protocol\u201d)A peer-to-peer network of nodes maintaining a blockchain (as in \u201ca Tezos node\u201d)The specific Tezos chain with the most economic relevance (as in \u201cthe Tezos chain\u201d). In particular, the chain whose millionth block had hash BKtC4QCWoF73kxLj773vFpQuuwrnye6PS7T1aM3XEPvFXiQbNu7WeightSee fitness.Protocol termsAccuserWhen a delegate attempts double signing (or when it tries to abuse the network in another similar way), another delegate can make an accusation, by providing evidence of the offense. The delegate injecting the accusation in a newly baked block is called the accuser.The accuser is awarded some funds from the security deposit of the accused.When using Octez, accusation operations are emitted by the accuser daemon. Note that this daemon is not associated to a delegate an accuser can provide proof of the double signing to be awarded part of the double signer\u2019s deposit \u2013 see Slashing.Failing NoopThe Failingnoop operation implements a No-op, which always fails at application time, and should never appear in applied blocks. This operation allows end-users to sign arbitrary messages which have no computational semantics.FeeTo ensure responsible use of computation resources of other nodes, and also to encourage active participation in the consensus protocol, users pay fees to bakers for including their operations in blocks. For example, fees are paid to a baker for operations such as a transaction or a revelation of a public key.Currently, only manager operationsrequire collecting fees from its sender account.See also burn.GasA measure of the number of elementary steps performed during the execution of a smart contract. Gas is used to measure how much computing power is used to execute a smart contract.Implicit accountSee user account.Layer 1The primary blockchain i.e. the Tezos chain. Within any blockchain ecosystem, Layer 1 (L1) refers to the main chain to which side chains, rollups, or other protocols connect and settle to. The Layer 1 chain is deemed to be most secure, since it has the most value (or stake) tied to it, and be most decentralized and censorship resistant. However, transaction space is limited leading to low throughput and possibly high transaction costs. See Layer 2.Layer 2Layer 2 (L2) includes sidechains, rollups, payment channels, etc. that batch their transactions and write to the Layer 1 chain. By processing transactions on layer 2 networks, greater scalability in speed and throughput can be achieved by the ecosystem overall, since the number of transactions the Layer 1 can process directly is limited. By cementing transactions from a L2 to L1, the security of the L1 chain backs those operations. Currently, Layer 2 solutions on Tezos are built as smart rollups.MichelsonThe built-in language used by a smart contract.Minimal stakeAn amount of tez (e.g., 6000\ua729) serving as a minimal amount for a delegate to have baking rights and voting rights in a cycle.Operation kindsThe main kinds of operations in the protocol are transactions (to transfer funds or to execute smart contracts), accusations, activations, delegations, attestations, and originations. For the full list of operations, see Blocks and Operations.Originated accountSee smart contract.OriginationA manager operation whose purpose is to create \u2013 that is, to deploy \u2013 a smart contract on the Tezos blockchain.PVMA PVM (Proof-generating Virtual Machine) is a reference implementation for a device on top of which a smart rollup can be executed. This reference implementation is part of the economic protocol and is the unique source of truth regarding the semantics of rollups. The PVM is able to produce proofs enforcing this truth. This ability is used during the final step of a refutation game.Refutation gameA process by which the economic protocol solves a conflict between two rollup committers. Note that the refutation mechanism used in Tezos smart rollups corresponds to the notion of fraud proofs used in other blockchain/Layer 2 ecosystems.Refutation periodWhen the first rollup commitment for a rollup commitment period is published, a refutation period of two weeks starts to allow this commitment to be challenged.Rolldeprecated; see minimal stake.Rollup commitmentA claim that the interpretation of all rollup inbox messages published during a given period, and applied on the state of a parent rollup commitment, led to a given new state by performing a given number of execution steps of the PVM.Rollup commitment periodA period of roughly 15 minutes during which all rollup inboxmessages must be processed by the rollup node state to compute a rollup commitment. A commitment must be published for each commitment period.Rollup committerA user account that has published and made a deposit on a rollup commitment.Rollup inboxA sequence of messages from the Layer 1 to all the smart rollups. The contents of the inbox are determined by the consensus of the economic protocol.Rollup nodeA daemon required for deploying and operating smart rollups. The rollup node is responsible for making the rollup progress by publishing rollup commitments and by playing refutation games.Rollup outboxA sequence of messages from a smart rollup to the Layer 1. Messages are smart contract calls, potentially containing tickets. These calls can be triggered only when the related rollup commitment is cemented (hence, at least two weeks after the actual execution of the operation).RoundAn attempt to reach consensus on a block at a given level. A round is represented by an index, starting with 0. Each round corresponds to a time span. A baker with baking rights at a given round is only allowed to bake during the round\u2019s corresponding time span. Baking outside of one\u2019s designated round results in an invalid block.Smart contractAccount which is associated to a Michelson script. They are created with an explicit origination operation and are therefore sometimes called originated accounts. The address of a smart contract always starts with the letters KT1.Smart RollupSmart rollups constitute a Layer 2 solution that can be used to deploy either a general-purpose polyvalent Layer 2 blockchain (e.g., an EVM-compatible one), or an application-specific DApp. See Smart Optimistic Rollups.StakeThe amount of tokens that determines a delegate\u2019s weight in the governance process and in the selection of its baking and attesting rights. A delegate\u2019s stake is usually given by the delegate\u2019s own tokens plus the sum of tokens delegated to it. However, there are cases when this is not the case, see here for details.StakerA user account that made a security deposit. The user account must have set a delegate. The security deposit accrues to the stake of the user account\u2019s delegate and is subject to slashing in case the delegate misbehaves \u2013 see Slashing.TezA unit of the cryptocurrency native to a Tezos chain, such as in \u201cI sent you 2 tez.\u201d Tez is invariable. It is not capitalized except at the beginning of a sentence or when you would otherwise capitalize a noun. See also XTZ.TransactionAn operation to transfer tez between two accounts, or to run the code of a smart contract.User accountAn account that is linked to a public key. Contrary to a smart contract, a user account cannot include a script and it cannot reject incoming transactions. User accounts are sometimes called \u201cimplicit accounts\u201d.If registered, a user account can act as a delegate.The address of a user account always starts with the letters tz followed by 1, 2, 3, or 4 (depending on the signature scheme) and finally the hash of the public key. See Accounts and addresses for a more detailed explanation on addresses.Validation passAn index (a natural number) associated with a particular kind of operations, allowing to group them into classes. Validation passes enable prioritizing the validation and application of certain classes of operations.Voting periodAny of the proposal, exploration, cooldown, promotion or adoption stages in the voting procedure when amending the economic protocol.Voting listingsThe list calculated at the beginning of each voting period that contains the staking balance (in number of mutez) of each delegate that owns more than the minimal stake at that moment. For each delegate, the voting listings reflect the weight of the vote emitted by the delegate when amending the economic protocol.XTZXTZ, tez, or \ua729 (\\\\ua729, \u201cLatin small letter tz\u201d) is the native currency of Tezos.\u201cXTZ\u201d is an ISO-4217-compatible code for representing tez on the most economically relevant Tezos chain. Unless there is a very specific reason to use an ISO code for it, the term tez is preferred. Situations where the ISO code might be useful typically involve accounting systems, exchange rates with other currencies, and anything that might need some sort of standardized code.","sidebar":"documentationSidebar"},"overview/index":{"id":"overview/index","title":"Tezos overview","description":"Tezos is an open-source, decentralized blockchain created in 2014 by Arthur and Kathleen Breitman. It raised awareness and support in 2017 with its crowdfunding and launched the following year. Since its inception, Tezos has gone through multiple iterations of upgrades and development, staying true to its ethos -- \\"a blockchain designed to evolve\\".","sidebar":"documentationSidebar"},"overview/resources":{"id":"overview/resources","title":"Other resources and technical support","description":"If you don\'t find the information that you need on this site, there are many other places that you can look.","sidebar":"documentationSidebar"},"reference/style-guide":{"id":"reference/style-guide","title":"Documentation style guide","description":"Overall Tezos-related issues","sidebar":"documentationSidebar"},"reference/textfiles":{"id":"reference/textfiles","title":"Text files","description":"To access the documentation on this site for use with an LLM, download these text files:","sidebar":"documentationSidebar"},"smart-contracts":{"id":"smart-contracts","title":"An introduction to smart contracts","description":"A smart contract is a piece of code stored on the blockchain. It contains a set of instructions and rules to trigger them. Once deployed, it becomes immutable, but a user can trigger the execution of the code without modifying it.","sidebar":"documentationSidebar"},"smart-contracts/constants":{"id":"smart-contracts/constants","title":"Global table of constants","description":"Tezos provides a feature that lets user store data in a global table of constants.","sidebar":"documentationSidebar"},"smart-contracts/creating":{"id":"smart-contracts/creating","title":"Creating smart contracts","description":"Introduction","sidebar":"documentationSidebar"},"smart-contracts/data-types":{"id":"smart-contracts/data-types","title":"Data types","description":"See these pages for information about the data types that Tezos supports:","sidebar":"documentationSidebar"},"smart-contracts/data-types/complex-data-types":{"id":"smart-contracts/data-types/complex-data-types","title":"Complex data types","description":"Tezos contracts support these complex data types.","sidebar":"documentationSidebar"},"smart-contracts/data-types/crypto-data-types":{"id":"smart-contracts/data-types/crypto-data-types","title":"Cryptographic data types","description":"Tezos provides hash functions for cryptographic purposes.","sidebar":"documentationSidebar"},"smart-contracts/data-types/primitive-data-types":{"id":"smart-contracts/data-types/primitive-data-types","title":"Primitive data types","description":"Tezos contracts support these primitive data types.","sidebar":"documentationSidebar"},"smart-contracts/delegation":{"id":"smart-contracts/delegation","title":"Delegation","description":"Placing your tez in a smart contract means you can\'t stake them towards baking or delegate them to get rewards.","sidebar":"documentationSidebar"},"smart-contracts/deploying":{"id":"smart-contracts/deploying","title":"Deploying smart contracts","description":"Introduction","sidebar":"documentationSidebar"},"smart-contracts/entrypoints":{"id":"smart-contracts/entrypoints","title":"Entrypoints","description":"The entrypoints of a contract represent the different ways that it can be called, similar to a method or function in many programming languages or an endpoint of an API.","sidebar":"documentationSidebar"},"smart-contracts/events":{"id":"smart-contracts/events","title":"Events","description":"Events are a type of internal operation on Tezos.","sidebar":"documentationSidebar"},"smart-contracts/languages":{"id":"smart-contracts/languages","title":"Languages","description":"You can write Tezos smart contracts in any of these high-level languages:","sidebar":"documentationSidebar"},"smart-contracts/languages/archetype":{"id":"smart-contracts/languages/archetype","title":"Archetype","description":"Archetype is an elegant generic-purpose language to develop smart contracts on the Tezos blockchain. It\'s a DSL (domain-specific language) for Tezos that facilitates formal verification and transcodes contracts to SmartPy and LIGO.","sidebar":"documentationSidebar"},"smart-contracts/languages/ligo":{"id":"smart-contracts/languages/ligo","title":"LIGO","description":"LIGO is a functional programming language that is intended to be both user-friendly and to avoid patterns that make formal verification difficult.","sidebar":"documentationSidebar"},"smart-contracts/languages/michelson":{"id":"smart-contracts/languages/michelson","title":"Michelson","description":"Michelson is the domain-specific language used to write smart contracts on the Tezos blockchain.","sidebar":"documentationSidebar"},"smart-contracts/languages/smartpy":{"id":"smart-contracts/languages/smartpy","title":"SmartPy","description":"SmartPy is a comprehensive solution for developing, testing, and deploying smart contracts on Tezos. With its easy-to-use Python syntax, developers can create contracts in a familiar and intuitive way, while SmartPy\'s type inference provides added safety.","sidebar":"documentationSidebar"},"smart-contracts/logic/comparing":{"id":"smart-contracts/logic/comparing","title":"Comparing values","description":"The ways that you can compare values depends on the types of those values.","sidebar":"documentationSidebar"},"smart-contracts/logic/errors":{"id":"smart-contracts/logic/errors","title":"Handling errors","description":"Unlike in many programming languages, there is no exception management on Tezos.","sidebar":"documentationSidebar"},"smart-contracts/logic/loops":{"id":"smart-contracts/logic/loops","title":"Loops and iterations","description":"A smart contract can contain loops, which take two general forms:","sidebar":"documentationSidebar"},"smart-contracts/logic/operations":{"id":"smart-contracts/logic/operations","title":"Operations","description":"The execution of the code of an entrypoint can have only two effects:","sidebar":"documentationSidebar"},"smart-contracts/multisig":{"id":"smart-contracts/multisig","title":"Multi-signature contracts","description":"Multi-signature (or multisig) contracts require multiple accounts to authorize operations before running them.","sidebar":"documentationSidebar"},"smart-contracts/oracles":{"id":"smart-contracts/oracles","title":"Oracles","description":"Oracles provide data to smart contracts that they wouldn\'t be able to access otherwise.","sidebar":"documentationSidebar"},"smart-contracts/samples":{"id":"smart-contracts/samples","title":"Sample smart contracts","description":"Here are some places to find sample smart contacts:","sidebar":"documentationSidebar"},"smart-contracts/sapling":{"id":"smart-contracts/sapling","title":"Private transactions (Sapling)","description":"Sapling is a protocol that enables transactions of fungible tokens while increasing privacy.","sidebar":"documentationSidebar"},"smart-contracts/serialization":{"id":"smart-contracts/serialization","title":"Serialization","description":"Between contract calls, the code of a contract, as well as its storage, are stored as a serialized sequence of bytes, for efficiency purposes.","sidebar":"documentationSidebar"},"smart-contracts/special-values":{"id":"smart-contracts/special-values","title":"Special values","description":"The code of a contract can access some special values.","sidebar":"documentationSidebar"},"smart-contracts/storage":{"id":"smart-contracts/storage","title":"Storage","description":"Each contract has associated storage, which is persistent internal data that it can read and write to.","sidebar":"documentationSidebar"},"smart-contracts/timelocks":{"id":"smart-contracts/timelocks","title":"Timelocks","description":"Timelocks are a way to prevent exploits known as front-running, or more properly, extractable value (EV) attacks.","sidebar":"documentationSidebar"},"smart-contracts/views":{"id":"smart-contracts/views","title":"Views","description":"Views are a way for contracts to expose information to other contracts and to off-chain consumers.","sidebar":"documentationSidebar"},"tutorials":{"id":"tutorials","title":"Tutorials","description":"These tutorials can help you get started developing different kinds of applications on Tezos in as little as 15 minutes.","sidebar":"tutorialsSidebar"},"tutorials/bake-with-ledger":{"id":"tutorials/bake-with-ledger","title":"Bake using a Ledger device","description":"What is a Ledger device?","sidebar":"tutorialsSidebar"},"tutorials/bake-with-ledger/install-app":{"id":"tutorials/bake-with-ledger/install-app","title":"Install the Ledger baking application of Tezos","description":"Tezos Baking is the application developed to bake on Tezos using your Ledger device.","sidebar":"tutorialsSidebar"},"tutorials/bake-with-ledger/run-baker":{"id":"tutorials/bake-with-ledger/run-baker","title":"Running a baker signing using a Ledger baking key","description":"Now that the Ledger baking key is set up, you can follow the steps of Run a Tezos node in 5 steps. However, some steps will differ.","sidebar":"tutorialsSidebar"},"tutorials/bake-with-ledger/setup-baker":{"id":"tutorials/bake-with-ledger/setup-baker","title":"Set up your Ledger baking key with octez-signer","description":"It\u2019s recommended to use a separate machine to run the remote signer. For simplicity, in this tutorial, we assume a setup where the Ledger device is connected to the same machine running the baker binary. On the same machine, the following commands can be used to set up the baking key with octez-signer.","sidebar":"tutorialsSidebar"},"tutorials/bake-with-ledger/setup-ledger":{"id":"tutorials/bake-with-ledger/setup-ledger","title":"Set up your ledger","description":"Disable PIN lock","sidebar":"tutorialsSidebar"},"tutorials/build-an-nft-marketplace":{"id":"tutorials/build-an-nft-marketplace","title":"Build an NFT marketplace","description":"This tutorial guides you through creating a web application that allows users to buy and sell tokens of different types.","sidebar":"tutorialsSidebar"},"tutorials/build-an-nft-marketplace/part-1":{"id":"tutorials/build-an-nft-marketplace/part-1","title":"Part 1: Minting tokens","description":"To start working with the application, you create a Taqueria project and use it to deploy an FA2 contract.","sidebar":"tutorialsSidebar"},"tutorials/build-an-nft-marketplace/part-2":{"id":"tutorials/build-an-nft-marketplace/part-2","title":"Part 2: Buying and selling tokens","description":"In this section, you give users the ability to list a bottle for sale and buy bottles that are listed for sale.","sidebar":"tutorialsSidebar"},"tutorials/build-an-nft-marketplace/part-3":{"id":"tutorials/build-an-nft-marketplace/part-3","title":"Part 3: Managing tokens with quantities","description":"Because only one of each NFT can exist, they are not the right token type to represent wine bottles, which have a type and a quantity of bottles of that type.","sidebar":"tutorialsSidebar"},"tutorials/build-an-nft-marketplace/part-4":{"id":"tutorials/build-an-nft-marketplace/part-4","title":"Part 4: Handling multi-asset tokens","description":"Because a wine store can have many bottles of many different types, the appropriate template to use is the multi-asset template.","sidebar":"tutorialsSidebar"},"tutorials/build-files-archive-with-dal":{"id":"tutorials/build-files-archive-with-dal","title":"Implement a file archive with the DAL and a Smart Rollup","description":"The Data Availability Layer (DAL) is a companion peer-to-peer network for the Tezos blockchain, designed to provide additional data bandwidth to Smart Rollups.","sidebar":"tutorialsSidebar"},"tutorials/build-files-archive-with-dal/get-dal-params":{"id":"tutorials/build-files-archive-with-dal/get-dal-params","title":"Part 2: Getting the DAL parameters","description":"The Data Availability Layer stores information about the available data in layer 1 blocks.","sidebar":"tutorialsSidebar"},"tutorials/build-files-archive-with-dal/get-slot-info":{"id":"tutorials/build-files-archive-with-dal/get-slot-info","title":"Part 3: Getting slot information","description":"When clients send data to the DAL, they must choose which slot to put it in.","sidebar":"tutorialsSidebar"},"tutorials/build-files-archive-with-dal/publishing-on-the-dal":{"id":"tutorials/build-files-archive-with-dal/publishing-on-the-dal","title":"Part 4: Publishing on the DAL","description":"Now that you can get information about the DAL, the next step is to publish data to it and verify that the kernel can access it.","sidebar":"tutorialsSidebar"},"tutorials/build-files-archive-with-dal/set-up-environment":{"id":"tutorials/build-files-archive-with-dal/set-up-environment","title":"Part 1: Setting up an environment","description":"These steps cover how to set up a development environment to work with Smart Rollups and the DAL.","sidebar":"tutorialsSidebar"},"tutorials/build-files-archive-with-dal/using-full-slot":{"id":"tutorials/build-files-archive-with-dal/using-full-slot","title":"Part 5: Using the entire slot","description":"In some cases, you may want to retrieve the entire contents of a slot.","sidebar":"tutorialsSidebar"},"tutorials/build-your-first-app":{"id":"tutorials/build-your-first-app","title":"Build a simple web application","description":"This tutorial shows you how to create a simple web application that uses Tezos.","sidebar":"tutorialsSidebar"},"tutorials/build-your-first-app/getting-information":{"id":"tutorials/build-your-first-app/getting-information","title":"Part 4: Getting information","description":"In this section, you improve the user experience of the application by providing information from Tezos on the page.","sidebar":"tutorialsSidebar"},"tutorials/build-your-first-app/sending-transactions":{"id":"tutorials/build-your-first-app/sending-transactions","title":"Part 3: Sending transactions","description":"Now that the application can connect to the user\'s wallet, it can get the user\'s approval to send transactions to Tezos with that wallet.","sidebar":"tutorialsSidebar"},"tutorials/build-your-first-app/setting-up-app":{"id":"tutorials/build-your-first-app/setting-up-app","title":"Part 1: Setting up the application","description":"You can access Tezos through any JavaScript framework.","sidebar":"tutorialsSidebar"},"tutorials/build-your-first-app/wallets-tokens":{"id":"tutorials/build-your-first-app/wallets-tokens","title":"Part 2: Accessing wallets","description":"Accessing the user\'s wallet is a prerequisite for interacting with the Tezos blockchain.","sidebar":"tutorialsSidebar"},"tutorials/create-nfts":{"id":"tutorials/create-nfts","title":"Create NFTs from a web application","description":"This tutorial shows you how to create a web application that interacts with the Tezos blockchain to create (mint) non-fungible tokens (NFTs).","sidebar":"tutorialsSidebar"},"tutorials/create-nfts/connect-wallet":{"id":"tutorials/create-nfts/connect-wallet","title":"Part 2: Connecting to wallets","description":"Before the application can interact with Tezos, you must connect to the user\'s wallet.","sidebar":"tutorialsSidebar"},"tutorials/create-nfts/create-contract":{"id":"tutorials/create-nfts/create-contract","title":"Part 4: Creating the contract","description":"Up to this point, your web application used a pre-deployed smart contract to manage tokens.","sidebar":"tutorialsSidebar"},"tutorials/create-nfts/send-transactions":{"id":"tutorials/create-nfts/send-transactions","title":"Part 3: Sending transactions","description":"To send a transaction to Tezos, a dApp creates the transaction, including its parameters.","sidebar":"tutorialsSidebar"},"tutorials/create-nfts/setting-up-app":{"id":"tutorials/create-nfts/setting-up-app","title":"Part 1: Setting up the application","description":"You can access Tezos through any JavaScript framework.","sidebar":"tutorialsSidebar"},"tutorials/create-nfts/show-info":{"id":"tutorials/create-nfts/show-info","title":"Part 5: Showing token information","description":"You can use Taquito to retrieve information about tokens from Tezos.","sidebar":"tutorialsSidebar"},"tutorials/create-nfts/summary":{"id":"tutorials/create-nfts/summary","title":"Summary","description":"Now you have an application that can connect to a user\'s wallet, send transactions on the user\'s behalf, and get information from Tezos.","sidebar":"tutorialsSidebar"},"tutorials/dapp":{"id":"tutorials/dapp","title":"Create your minimum dapp on Tezos","description":"dApp : A decentralized application is a type of distributed open source software application that runs on a peer-to-peer (P2P) blockchain network rather than on a single computer. DApps are visibly similar to other software applications that are supported on a website or mobile device.","sidebar":"tutorialsSidebar"},"tutorials/dapp/part-1":{"id":"tutorials/dapp/part-1","title":"Part 1: Create your minimum dApp on Tezos","description":"To start working with the application, you create a Taqueria project and use it to deploy the Poke contract.","sidebar":"tutorialsSidebar"},"tutorials/dapp/part-2":{"id":"tutorials/dapp/part-2","title":"Part 2: Inter-contract calls and testing","description":"Previously, you learned how to create your first dApp.","sidebar":"tutorialsSidebar"},"tutorials/dapp/part-3":{"id":"tutorials/dapp/part-3","title":"Part 3: Tickets","description":"Previously, you learned how to do inter-contract calls, use views, and do unit testing.","sidebar":"tutorialsSidebar"},"tutorials/dapp/part-4":{"id":"tutorials/dapp/part-4","title":"Part 4: Smart contract upgrades","description":"Previously, you learned how to use tickets and don\'t mess up with it.","sidebar":"tutorialsSidebar"},"tutorials/join-dal-baker":{"id":"tutorials/join-dal-baker","title":"Run a Tezos node in 5 steps","description":"As described in Nodes, Tezos nodes are peer-to-peer programs that run the Tezos network.","sidebar":"tutorialsSidebar"},"tutorials/join-dal-baker/conclusion":{"id":"tutorials/join-dal-baker/conclusion","title":"Conclusion","description":"In this guide you have gone through all the steps needed to participate as a baker and DAL node.","sidebar":"tutorialsSidebar"},"tutorials/join-dal-baker/prepare-account":{"id":"tutorials/join-dal-baker/prepare-account","title":"Step 2: Set up baker accounts","description":"In this section you use the Octez client to set up two accounts for your baker:","sidebar":"tutorialsSidebar"},"tutorials/join-dal-baker/run-baker":{"id":"tutorials/join-dal-baker/run-baker","title":"Step 4: Run an Octez baking daemon","description":"Now that you have a layer 1 node and a DAL node, you can run a baking daemon that can create blocks and attests to DAL data.","sidebar":"tutorialsSidebar"},"tutorials/join-dal-baker/run-dal-node":{"id":"tutorials/join-dal-baker/run-dal-node","title":"Step 3: Run an Octez DAL node","description":"The DAL node is responsible for temporarily storing data and providing it to bakers and Smart Rollups.","sidebar":"tutorialsSidebar"},"tutorials/join-dal-baker/run-node":{"id":"tutorials/join-dal-baker/run-node","title":"Step 1: Run an Octez node","description":"The first thing you need is a Tezos layer 1 node, which is an instance of the octez-node program and part of the Octez suite of programs.","sidebar":"tutorialsSidebar"},"tutorials/join-dal-baker/verify-rights":{"id":"tutorials/join-dal-baker/verify-rights","title":"Step 5: Verifications","description":"After the delay that you calculated in Step 4: Run an Octez baking daemon, follow these instructions to verify the activity or diagnose and fix issues.","sidebar":"tutorialsSidebar"},"tutorials/mobile":{"id":"tutorials/mobile","title":"Create a mobile game","description":"home","sidebar":"tutorialsSidebar"},"tutorials/mobile/part-1":{"id":"tutorials/mobile/part-1","title":"Part 1: Create the smart contract","description":"On this first section, you will:","sidebar":"tutorialsSidebar"},"tutorials/mobile/part-2":{"id":"tutorials/mobile/part-2","title":"Part 2: Create an Ionic mobile application","description":"A web3 mobile application is not different from a web2 one in terms of its basic functionality and user interface. Both types of applications can run on smartphones, tablets, and other mobile devices, and both can access the internet and provide various services to users. However, a web3 mobile application differs from a web2 one in terms of its underlying architecture and design principles. A web3 mobile application is built on decentralized technologies, such as blockchain, smart contracts, and peer-to-peer networks, that enable more transparency, security, and autonomy for users and developers.","sidebar":"tutorialsSidebar"},"tutorials/mobile/part-3":{"id":"tutorials/mobile/part-3","title":"Part 3: Create the game pages","description":"In this section, you will create the pages to:","sidebar":"tutorialsSidebar"},"tutorials/mobile/part-4":{"id":"tutorials/mobile/part-4","title":"Part 4: Publish on the Android store","description":"Your game will be more successful if you publish it on the Android or Apple store. A recommendation is to start with Android as it is easy and cheaper than the iOS version.","sidebar":"tutorialsSidebar"},"tutorials/security":{"id":"tutorials/security","title":"Learn and play with security","description":"Web3 or the decentralized web introduces a new set of security challenges while reducing risks and enforcing security on the other side.","sidebar":"tutorialsSidebar"},"tutorials/security/part-1":{"id":"tutorials/security/part-1","title":"Part 1: Programming errors","description":"Note: clone this project for compiling and testing this tutorial.","sidebar":"tutorialsSidebar"},"tutorials/security/part-2":{"id":"tutorials/security/part-2","title":"Part 2: Leaks","description":"Note: clone this project for compiling and testing this tutorial.","sidebar":"tutorialsSidebar"},"tutorials/security/part-3":{"id":"tutorials/security/part-3","title":"Part 3: User trust & management","description":"Governance","sidebar":"tutorialsSidebar"},"tutorials/smart-contract":{"id":"tutorials/smart-contract","title":"Deploy a smart contract","description":"This tutorial covers deploying a smart contract to Tezos.","sidebar":"tutorialsSidebar"},"tutorials/smart-contract/archetype":{"id":"tutorials/smart-contract/archetype","title":"Deploy a smart contract with Archetype","description":"This tutorial covers writing a smart contract and deploying it to Tezos in the Archetype programming language.","sidebar":"tutorialsSidebar"},"tutorials/smart-contract/cameligo":{"id":"tutorials/smart-contract/cameligo","title":"Deploy a smart contract with CameLIGO","description":"This tutorial covers writing and deploying a simple smart contract with the LIGO programming language.","sidebar":"tutorialsSidebar"},"tutorials/smart-contract/jsligo":{"id":"tutorials/smart-contract/jsligo","title":"Deploy a smart contract with JsLIGO","description":"This tutorial covers writing and deploying a simple smart contract with the LIGO programming language.","sidebar":"tutorialsSidebar"},"tutorials/smart-contract/smartpy":{"id":"tutorials/smart-contract/smartpy","title":"Deploy a smart contract with SmartPy","description":"This tutorial covers writing and deploying a simple smart contract with the SmartPy programming language.","sidebar":"tutorialsSidebar"},"tutorials/smart-rollup":{"id":"tutorials/smart-rollup","title":"Deploy a Smart Rollup","description":"This tutorial covers how to deploy a Smart Rollup in a Tezos sandbox.","sidebar":"tutorialsSidebar"},"tutorials/smart-rollup/debug":{"id":"tutorials/smart-rollup/debug","title":"Part 2: Running the kernel in debug mode","description":"Octez provides a command named octez-smart-rollup-wasm-debugger that runs Smart Rollups in debug mode to make it easier to test and observe them.","sidebar":"tutorialsSidebar"},"tutorials/smart-rollup/deploy":{"id":"tutorials/smart-rollup/deploy","title":"Part 4: Deploying (originating) the rollup","description":"Smart Rollups are originated in a way similar to smart contracts.","sidebar":"tutorialsSidebar"},"tutorials/smart-rollup/optimize":{"id":"tutorials/smart-rollup/optimize","title":"Part 3: Optimizing the kernel","description":"To originate the kernel on Tezos, it must fit within the maximum size for a layer 1 operation (32KB).","sidebar":"tutorialsSidebar"},"tutorials/smart-rollup/run":{"id":"tutorials/smart-rollup/run","title":"Part 5: Running and interacting with the rollup node","description":"Now that the Smart Rollup is originated on layer 1, anyone can run a Smart Rollup node for it.","sidebar":"tutorialsSidebar"},"tutorials/smart-rollup/set-up":{"id":"tutorials/smart-rollup/set-up","title":"Part 1: Setting up the application","description":"To set up the application for the tutorial, you must configure Rust to build the kernel and start a Docker container that has resources that are needed to debug and deploy it.","sidebar":"tutorialsSidebar"},"tutorials/smartpy-fa2-fungible":{"id":"tutorials/smartpy-fa2-fungible","title":"Create a fungible token with the SmartPy FA2 library","description":"This tutorial shows you how to use SmartPy\'s FA2 library to create standards-compliant tokens.","sidebar":"tutorialsSidebar"},"tutorials/smartpy-fa2-fungible/adding-metadata":{"id":"tutorials/smartpy-fa2-fungible/adding-metadata","title":"Part 3: Adding metadata","description":"In this part, you configure the metadata for the contract.","sidebar":"tutorialsSidebar"},"tutorials/smartpy-fa2-fungible/basic-fa2-token":{"id":"tutorials/smartpy-fa2-fungible/basic-fa2-token","title":"Part 1: Setting up a simple FA2 token","description":"In the first part of this tutorial, you create an FA2 token contact that has only the basic features that the standard requires.","sidebar":"tutorialsSidebar"},"tutorials/smartpy-fa2-fungible/customizing-operations":{"id":"tutorials/smartpy-fa2-fungible/customizing-operations","title":"Part 4: Customizing operations","description":"As shown in previous parts, the SmartPy FA2 library provides the entrypoints that the standard requires.","sidebar":"tutorialsSidebar"},"tutorials/smartpy-fa2-fungible/deploying-contract":{"id":"tutorials/smartpy-fa2-fungible/deploying-contract","title":"Part 5: Deploying the contract","description":"So far you have used the token in the SmartPy test scenario and in the Octez client local sandbox.","sidebar":"tutorialsSidebar"},"tutorials/smartpy-fa2-fungible/minting-and-burning":{"id":"tutorials/smartpy-fa2-fungible/minting-and-burning","title":"Part 2: Adding minting and burning entrypoints","description":"In this part, you add entrypoints that allow an administrator account to create tokens and allow users to burn their own tokens.","sidebar":"tutorialsSidebar"},"unity":{"id":"unity","title":"Tezos Unity SDK","description":"The Tezos Unity SDK provides tools that let you access user wallets and blockchains in games and other Unity projects.","sidebar":"documentationSidebar"},"unity/calling-contracts":{"id":"unity/calling-contracts","title":"Calling contracts with the Unity SDK","description":"Smart contracts are backend programs that run on blockchains.","sidebar":"documentationSidebar"},"unity/connecting-accounts":{"id":"unity/connecting-accounts","title":"Connecting accounts","description":"Connecting to a user\'s wallet allows your application to see the tokens in it and to prompt the user to submit transactions, but it does not give your application direct control over the wallet.","sidebar":"documentationSidebar"},"unity/managing-tokens":{"id":"unity/managing-tokens","title":"Managing tokens","description":"Tezos supports a variety of types of tokens, including:","sidebar":"documentationSidebar"},"unity/quickstart":{"id":"unity/quickstart","title":"Quickstart","description":"Follow these steps to install the Tezos Unity SDK in an existing Unity project and start using it.","sidebar":"documentationSidebar"},"unity/reference":{"id":"unity/reference","title":"Unity SDK reference","description":"The Tezos Unity SDK provides several objects that your Unity project can use to work with Tezos.","sidebar":"documentationSidebar"},"unity/reference/API":{"id":"unity/reference/API","title":"Unity SDK TezosAPI object","description":"The Unity SDK class Tezos.API.TezosAPI provides methods for many Tezos-related tasks, including connecting to wallets, sending transactions to Tezos, and getting information about about the Tezos blockchain, such as what tokens accounts or contracts control.","sidebar":"documentationSidebar"},"unity/reference/DataProviderConfigSO":{"id":"unity/reference/DataProviderConfigSO","title":"DataProviderConfigSO scriptable object","description":"The DataProviderConfigSO scriptable object sets the indexer that the SDK uses to get information about Tezos, such as an account\'s token balances.","sidebar":"documentationSidebar"},"unity/reference/events":{"id":"unity/reference/events","title":"Unity SDK events","description":"The Tezos Unity SDK uses events that you can add listeners to.","sidebar":"documentationSidebar"},"unity/reference/TezosConfigSO":{"id":"unity/reference/TezosConfigSO","title":"TezosConfig scriptable object","description":"The TezosConfig scriptable object sets the RPC node that the SDK sends Tezos transactions to.","sidebar":"documentationSidebar"},"unity/scenes":{"id":"unity/scenes","title":"Unity SDK tutorial scenes","description":"The SDK includes tutorial scenes that demonstrate how to use the SDK."},"unity/upgrading":{"id":"unity/upgrading","title":"Upgrading the Unity SDK","description":"Version 4.0.0 of the Unity SDK includes breaking changes from the previous version.","sidebar":"documentationSidebar"},"using":{"id":"using","title":"Using Tezos","description":"This section presents Tezos for end users who need to access applications that use Tezos as part of their platform.","sidebar":"documentationSidebar"},"using/dapps":{"id":"using/dapps","title":"Using Tezos applications (dApps)","description":"Decentralized applications (dApps) are programs that, at their core, run independently, without any person or group in charge of them.","sidebar":"documentationSidebar"},"using/staking":{"id":"using/staking","title":"Staking","description":"Staking is the process of temporarily locking tez on the Tezos platform in exchange for rewards.","sidebar":"documentationSidebar"},"using/user-accounts":{"id":"using/user-accounts","title":"Accounts","description":"From the user\'s perspective, a Tezos account is much like an account that you might have on a web application or computer system.","sidebar":"documentationSidebar"},"using/wallets":{"id":"using/wallets","title":"Wallets","description":"Wallets are tools that manage accounts on blockchains like Tezos.","sidebar":"documentationSidebar"}}}}')}}]);