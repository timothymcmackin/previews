"use strict";(self.webpackChunktezos_developer_docs=self.webpackChunktezos_developer_docs||[]).push([[6536],{35627:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"smart-contracts/special-values","title":"Special values","description":"The code of a contract can access some special values.","source":"@site/docs/smart-contracts/special-values.md","sourceDirName":"smart-contracts","slug":"/smart-contracts/special-values","permalink":"/previews/docs/biel-chatbot/smart-contracts/special-values","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1696478400000,"frontMatter":{"title":"Special values","authors":"Mathias Hiron (Nomadic Labs), Sasha Aldrick (TriliTech), Tim McMackin (TriliTech)","last_update":{"date":"5 October 2023"}},"sidebar":"documentationSidebar","previous":{"title":"Storage","permalink":"/previews/docs/biel-chatbot/smart-contracts/storage"},"next":{"title":"Global table of constants","permalink":"/previews/docs/biel-chatbot/smart-contracts/constants"}}');var a=n(74848),c=n(28453);const i={title:"Special values",authors:"Mathias Hiron (Nomadic Labs), Sasha Aldrick (TriliTech), Tim McMackin (TriliTech)",last_update:{date:"5 October 2023"}},o=void 0,r={},l=[{value:"Implementation details",id:"implementation-details",level:2}];function h(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",li:"li",p:"p",ul:"ul",...(0,c.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:"The code of a contract can access some special values.\nSee the reference for your language for information about accessing these values:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"caller"}),": The address of the direct caller of the current entrypoint."]}),"\n",(0,a.jsx)(t.p,{children:"This value is often used for these reasons:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["To check that the caller is allowed to call the entrypoint.\nFor example, only a member of a DAO may call its vote entrypoint.\nOnly the owner of an NFT may call an ",(0,a.jsx)(t.code,{children:"addToMarket"})," entrypoint of a marketplace to put the NFT on sale."]}),"\n",(0,a.jsxs)(t.li,{children:["To assign or transfer resources to the caller or to store information about them.\nFor example, a user may call a ",(0,a.jsx)(t.code,{children:"buy"})," entrypoint of an NFT marketplace and the contract assigns ownership of the NFT to them.\nThe contract assigns ownership by storing the caller address in the record that is associated with the NFT."]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"source"}),": The address of the initiator of the sequence of calls that led to this entrypoint.\nFor example, assume that user A called contract B that in turn called contract C:"]}),"\n",(0,a.jsx)(t.p,{children:"A -> B -> C"}),"\n",(0,a.jsxs)(t.p,{children:["When C runs, ",(0,a.jsx)(t.code,{children:"source"})," is the address of A, while ",(0,a.jsx)(t.code,{children:"caller"})," is the address of B."]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(t.admonition,{title:"Access permissions",type:"warning",children:(0,a.jsxs)(t.p,{children:["It is best practice to implement permissioning based on ",(0,a.jsx)(t.code,{children:"caller"})," instead of ",(0,a.jsx)(t.code,{children:"source"})," because any user account can call any entrypoint on Tezos."]})}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"self"}),": The address of the contract itself.\nFor example, you can ensure that an entrypoint is called only by the contract itself by verifying that ",(0,a.jsx)(t.code,{children:"caller"})," = ",(0,a.jsx)(t.code,{children:"self"}),"."]}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"balance"}),": The amount of tez (in ",(0,a.jsx)(t.code,{children:"mutez"}),") in the contract, including any tez that have been transferred to the contract by the current transaction."]}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"amount"}),": The number of tez that have been transferred to the contract during the current transaction."]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["These tez are added to the balance, ",(0,a.jsx)(t.em,{children:"except"})," if the execution ends in a failure."]}),"\n",(0,a.jsxs)(t.li,{children:["Some languages refer to this amount with the name ",(0,a.jsx)(t.code,{children:"transferred"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(t.admonition,{title:"Rejecting tez",type:"note",children:(0,a.jsx)(t.p,{children:"By default, an entrypoint automatically accepts any tez that is sent to it.\nIf the contract should not accept tez, it can reject tez by verifying that the amount is zero."})}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"now"}),": The timestamp of the current block.\nThis value is the same during the execution of all of the contract calls from the same block."]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"Technically, this value is equal to the timestamp of the previous block plus the minimum block delay (the expected duration between two blocks).\nThis prevents the baker of the current block from manipulating this value, while keeping it predictable to everyone."}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"This value is often used to check deadlines, for example, if someone has to vote before a certain date."}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"level"}),": The level of a block corresponds to the number of blocks in the chain since the beginning of the chain (genesis block) until that block.\nIt increments by one for each new block."]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"implementation-details",children:"Implementation details"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["Michelson: ",(0,a.jsx)(t.a,{href:"https://tezos.gitlab.io/active/michelson.html#special-operations",children:"Special operations"}),", ",(0,a.jsx)(t.a,{href:"https://tezos.gitlab.io/active/michelson.html#operations-on-contracts",children:"Operations on contracts"})]}),"\n",(0,a.jsxs)(t.li,{children:["Archetype: ",(0,a.jsx)(t.a,{href:"https://archetype-lang.org/docs/reference/expressions/constants/#now",children:"Constants"})]}),"\n",(0,a.jsxs)(t.li,{children:["SmartPy: ",(0,a.jsx)(t.a,{href:"https://smartpy.io/manual/syntax/timestamps",children:"Timestamps"})]}),"\n",(0,a.jsxs)(t.li,{children:["LIGO: ",(0,a.jsx)(t.a,{href:"https://ligolang.org/docs/reference/current-reference",children:"Tezos"}),", ",(0,a.jsx)(t.a,{href:"https://ligolang.org/docs/advanced/entrypoints-contracts#tezos-specific-built-ins",children:"Tezos specific built-ins"}),", ",(0,a.jsx)(t.a,{href:"https://ligolang.org/docs/advanced/timestamps-addresses#starting-time-of-the-current-block",children:"Tezos.now"})]}),"\n"]})]})}function d(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>o});var s=n(96540);const a={},c=s.createContext(a);function i(e){const t=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(c.Provider,{value:t},e.children)}}}]);