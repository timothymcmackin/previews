"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[29001],{3905:(t,e,n)=>{n.d(e,{Zo:()=>p,kt:()=>m});var a=n(67294);function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function r(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){i(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,a,i=function(t,e){if(null==t)return{};var n,a,i={},o=Object.keys(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||(i[n]=t[n]);return i}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(i[n]=t[n])}return i}var c=a.createContext({}),l=function(t){var e=a.useContext(c),n=e;return t&&(n="function"==typeof t?t(e):r(r({},e),t)),n},p=function(t){var e=l(t.components);return a.createElement(c.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},k=a.forwardRef((function(t,e){var n=t.components,i=t.mdxType,o=t.originalType,c=t.parentName,p=s(t,["components","mdxType","originalType","parentName"]),k=l(n),m=i,y=k["".concat(c,".").concat(m)]||k[m]||u[m]||o;return n?a.createElement(y,r(r({ref:e},p),{},{components:n})):a.createElement(y,r({ref:e},p))}));function m(t,e){var n=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var o=n.length,r=new Array(o);r[0]=k;var s={};for(var c in e)hasOwnProperty.call(e,c)&&(s[c]=e[c]);s.originalType=t,s.mdxType="string"==typeof t?t:i,r[1]=s;for(var l=2;l<o;l++)r[l]=n[l];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},48720:(t,e,n)=>{n.d(e,{D:()=>i.Z,Z:()=>o});var a=n(67294),i=n(75402);const o=function(t){return a.createElement(i.Z.Consumer,null,(e=>{let{syntax:n}=e;return n===t.syntax?t.children:a.createElement(a.Fragment,null)}))}},99191:(t,e,n)=>{n.d(e,{Z:()=>p});var a=n(23746),i=n(67294),o=n(52263),r=n(48720),s=n(87552);function c(){return c=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t},c.apply(this,arguments)}const{Prism:l}=n(23746);l.languages={...l.languages,cameligo:{...l.languages.ocaml,comment:[/(^|[^\\])\/\*[\s\S]*?\*\//,/\(\*[\s\S]*?\*\)/,/\/\/.*/]},jsligo:l.languages.typescript};const p=function(t){const{siteConfig:{themeConfig:{prism:e={}}}}=(0,o.Z)(),n=e.singleTheme||s.Z,[l,p]=(0,i.useState)(!1);return(0,i.useEffect)((()=>{p(!0)}),[]),i.createElement(r.D.Consumer,null,(e=>{let{syntax:o}=e;return o===t.syntax?i.createElement(a.default,c({},a.defaultProps,{key:l,language:t.syntax,code:t.children,theme:n}),(t=>{let{className:e,tokens:n,getLineProps:a,getTokenProps:o}=t;return i.createElement("h4",{className:e,style:{backgroundColor:"var(--ifm-background-color)",fontFamily:"var(--ifm-font-family-monospace)",lineHeight:"var(--ifm-pre-line-height)",fontSize:"1.1rem",fontWeight:"bold",padding:0,whiteSpace:"break-spaces",marginTop:"3rem"}},n.map(((t,e)=>i.createElement("div",a({line:t,key:e}),t.map(((t,e)=>i.createElement("span",o({token:t,key:e}))))))))})):i.createElement("div",null)}))}},70742:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>p,contentTitle:()=>c,default:()=>m,frontMatter:()=>s,metadata:()=>l,toc:()=>u});var a=n(87462),i=(n(67294),n(3905)),o=n(48720),r=n(99191);const s={id:"tickets",title:"Tickets"},c=void 0,l={unversionedId:"data-types/tickets",id:"data-types/tickets",title:"Tickets",description:"Tezos tickets are authenticated quantities issued by contracts.",source:"@site/../docs/data-types/tickets.md",sourceDirName:"data-types",slug:"/data-types/tickets",permalink:"/previews/ligo/external-link-icon/docs/next/data-types/tickets",draft:!1,tags:[],version:"current",frontMatter:{id:"tickets",title:"Tickets"},sidebar:"docs",previous:{title:"Big maps",permalink:"/previews/ligo/external-link-icon/docs/next/data-types/big_maps"},next:{title:"Parameteric types",permalink:"/previews/ligo/external-link-icon/docs/next/data-types/parametric_types"}},p={},u=[{value:"Creating tickets",id:"creating-tickets",level:2},{value:"Reading tickets",id:"reading-tickets",level:2},{value:"Splitting tickets",id:"splitting-tickets",level:2},{value:"Joining tickets",id:"joining-tickets",level:2},{value:"Transferring tickets",id:"transferring-tickets",level:2}],k={toc:u};function m(t){let{components:e,...n}=t;return(0,i.kt)("wrapper",(0,a.Z)({},k,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Tezos tickets are authenticated quantities issued by contracts.\nA ticket of type ",(0,i.kt)("inlineCode",{parentName:"p"},"ticket")," has three elements:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Its ",(0,i.kt)("em",{parentName:"p"},"ticketer"),", which is the contract that issued the ticket")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Its ",(0,i.kt)("em",{parentName:"p"},"contents"),", also knowns as the wrapped value or payload, which can be any data type")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Its ",(0,i.kt)("em",{parentName:"p"},"amount")," of type ",(0,i.kt)("inlineCode",{parentName:"p"},"nat"),", which is an arbitrary number that represents a quantity or value for the ticket"))),(0,i.kt)("p",null,"A ticket's ticketer and contents cannot be changed."),(0,i.kt)("p",null,"Tickets themselves cannot be duplicated, but you can split one ticket\ninto multiple tickets by creating duplicate tickets each with a\nportion of the original ticket's amount.  The new tickets have the\nsame ticketer and contents, and the sum of their amounts is always the\namount of the original ticket.  Similarly, you can join tickets with\nmatching ticketers and contents into a single ticket with the sum of\nthe joined tickets' amounts."),(0,i.kt)("h2",{id:"creating-tickets"},"Creating tickets"),(0,i.kt)("p",null,"To create a ticket, pass the contents and the amount to\n",(0,i.kt)("inlineCode",{parentName:"p"},"Tezos.Ticket.create")," function.  The function returns an\noption that contains the ticket or ",(0,i.kt)("inlineCode",{parentName:"p"},"None")," if the amount of the ticket\nis zero.  The contract's address automatically becomes the ticketer\nvalue."),(0,i.kt)(r.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"val create : 'value -> nat -> ('value ticket) option"),(0,i.kt)(r.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"create: 'value => nat => option<ticket<'value>>"),(0,i.kt)(o.Z,{syntax:"cameligo",mdxType:"Syntax"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cameligo",metastring:"group=manip_ticket",group:"manip_ticket"},'module Ticket = Tezos.Ticket\n\nlet my_ticket1 = Option.value_with_error "ticket1 failed" (Ticket.create 1 10n)\nlet my_ticket2 = Option.value_with_error "ticket2 failed" (Ticket.create "one" 10n)\n'))),(0,i.kt)(o.Z,{syntax:"jsligo",mdxType:"Syntax"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsligo",metastring:"group=manip_ticket",group:"manip_ticket"},'import Ticket = Tezos.Ticket;\n\nconst my_ticket1 =\n  Option.value_with_error("ticket1 failed", Ticket.create(1, 10 as nat));\nconst my_ticket2 =\n  Option.value_with_error("ticket2 failed", Ticket.create("one", 10 as nat));\n'))),(0,i.kt)("h2",{id:"reading-tickets"},"Reading tickets"),(0,i.kt)("p",null,"You cannot read the contents of a ticket directly; you must use the\n",(0,i.kt)("inlineCode",{parentName:"p"},"Tezos.Ticket.read")," function to access it.  This function\ndestroys the ticket and returns the ticketer, contents, amount, and a\ncopy of the original ticket."),(0,i.kt)("p",null,"Note that reading a ticket with the ",(0,i.kt)("inlineCode",{parentName:"p"},"Tezos.Ticket.read"),"\nfunction consumes it, destroying the original ticket.  To preserve the\nticket, you must use the copy that the function returns, or else the\nticket is destroyed."),(0,i.kt)(r.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"val read : 'value ticket -> (address * ('value * nat)) * 'value ticket"),(0,i.kt)(r.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"read: ticket<'value> => <<address, <'value , nat>> , ticket<'value>>"),(0,i.kt)(o.Z,{syntax:"cameligo",mdxType:"Syntax"},(0,i.kt)("p",null,"To read the content of a ticket, you can either use tuple\ndestructuring or pattern matching:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cameligo",metastring:"group=manip_ticket",group:"manip_ticket"},"let v =\n  let (_addr, (payload, _amt)), _ticket = Ticket.read my_ticket1\n  in payload\n"))),(0,i.kt)(o.Z,{syntax:"jsligo",mdxType:"Syntax"},(0,i.kt)("p",null,"To read the content of a ticket, you need to use tuple destructuring:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsligo",metastring:"group=manip_ticket",group:"manip_ticket"},"const v2 = (() => {\n  let [[_addr, [payload, _amt]], _ticket] = Ticket.read(my_ticket2);\n  return payload;\n})()\n"))),(0,i.kt)("h2",{id:"splitting-tickets"},"Splitting tickets"),(0,i.kt)("p",null,"Splitting a ticket creates two tickets that have the same ticketer and\ncontents as the original and have amounts that add up to the amount of\nthe original To split a ticket, pass the ticket and two nats to the\n",(0,i.kt)("inlineCode",{parentName:"p"},"Tezos.Ticket.split")," function.  It returns an option that is\n",(0,i.kt)("inlineCode",{parentName:"p"},"None")," if the sum of the two nats does not equal the amount of the\noriginal ticket.  If the sum is equal, it returns ",(0,i.kt)("inlineCode",{parentName:"p"},"Some")," with two\ntickets with the two nats as their amounts."),(0,i.kt)("p",null,"You can split tickets to divide a ticket to send to multiple sources or to consume only part of a ticket's amount."),(0,i.kt)(r.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"val split : 'value ticket -> nat * nat -> ('value ticket * 'value ticket) option"),(0,i.kt)(r.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"split : ticket<'value> => <nat , nat> => option <<ticket<'value>, ticket<'value>>>"),(0,i.kt)(o.Z,{syntax:"cameligo",mdxType:"Syntax"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cameligo",metastring:"group=manip_ticket",group:"manip_ticket"},'let ta, tb =\n  match Ticket.split my_ticket1 (6n, 4n) with\n    None -> failwith "amt_a + amt_v <> amt"\n  | Some split_tickets -> split_tickets\n'))),(0,i.kt)(o.Z,{syntax:"jsligo",mdxType:"Syntax"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsligo",metastring:"group=manip_ticket",group:"manip_ticket"},'const [ta, tb] =\n  $match(Ticket.split(my_ticket1, [6 as nat, 4 as nat]), {\n    "None": () => failwith("amt_a + amt_v != amt"),\n    "Some": split_tickets => split_tickets\n  });\n'))),(0,i.kt)("h2",{id:"joining-tickets"},"Joining tickets"),(0,i.kt)("p",null,"You can join tickets that have identical ticketers and contents.  The\n",(0,i.kt)("inlineCode",{parentName:"p"},"Tezos.Ticket.join")," function joins tickets and returns an\noption with ",(0,i.kt)("inlineCode",{parentName:"p"},"Some")," with a single ticket that has an amount that equals\nthe sum of the amounts of the original tickets.  If the ticketer or\ncontents don't match, it returns ",(0,i.kt)("inlineCode",{parentName:"p"},"None"),"."),(0,i.kt)(r.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"val join : 'value ticket * 'value ticket -> ('value ticket) option"),(0,i.kt)(r.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"join : <ticket<'value>, ticket<'value>> => option <ticket<'value>>"),(0,i.kt)(o.Z,{syntax:"cameligo",mdxType:"Syntax"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cameligo",metastring:"group=manip_ticket2",group:"manip_ticket2"},'module Ticket = Tezos.Ticket\n\nlet tc : int ticket option =\n  let ta = Option.value_with_error "ta failed" (Ticket.create 1 10n) in\n  let tb = Option.value_with_error "tb failed" (Ticket.create 1 5n) in\n  Ticket.join (ta, tb)\n'))),(0,i.kt)(o.Z,{syntax:"jsligo",mdxType:"Syntax"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsligo",metastring:"group=manip_ticket2",group:"manip_ticket2"},'import Ticket = Tezos.Ticket;\n\nconst ta = Option.value_with_error("ta failed",\n                                   Ticket.create(1, 10 as nat));\nconst tb = Option.value_with_error("tb failed",\n                                   Ticket.create(1, 5 as nat));\nconst tc = Ticket.join([ta, tb]);\n'))),(0,i.kt)("h2",{id:"transferring-tickets"},"Transferring tickets"),(0,i.kt)("p",null,"You can send tickets to other contracts by passing them with the\n",(0,i.kt)("inlineCode",{parentName:"p"},"Tezos.Operation.transaction")," function, just like passing any other\nvalue to a contract."))}m.isMDXComponent=!0},23746:(t,e,n)=>{n.r(e),n.d(e,{Prism:()=>a.Z,default:()=>y,defaultProps:()=>r});var a=n(87410);const i={plain:{backgroundColor:"#2a2734",color:"#9a86fd"},styles:[{types:["comment","prolog","doctype","cdata","punctuation"],style:{color:"#6c6783"}},{types:["namespace"],style:{opacity:.7}},{types:["tag","operator","number"],style:{color:"#e09142"}},{types:["property","function"],style:{color:"#9a86fd"}},{types:["tag-id","selector","atrule-id"],style:{color:"#eeebff"}},{types:["attr-name"],style:{color:"#c4b9fe"}},{types:["boolean","string","entity","url","attr-value","keyword","control","directive","unit","statement","regex","atrule","placeholder","variable"],style:{color:"#ffcc99"}},{types:["deleted"],style:{textDecorationLine:"line-through"}},{types:["inserted"],style:{textDecorationLine:"underline"}},{types:["italic"],style:{fontStyle:"italic"}},{types:["important","bold"],style:{fontWeight:"bold"}},{types:["important"],style:{color:"#c4b9fe"}}]};var o=n(67294),r={Prism:a.Z,theme:i};function s(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function c(){return c=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t},c.apply(this,arguments)}var l=/\r\n|\r|\n/,p=function(t){0===t.length?t.push({types:["plain"],content:"\n",empty:!0}):1===t.length&&""===t[0].content&&(t[0].content="\n",t[0].empty=!0)},u=function(t,e){var n=t.length;return n>0&&t[n-1]===e?t:t.concat(e)},k=function(t,e){var n=t.plain,a=Object.create(null),i=t.styles.reduce((function(t,n){var a=n.languages,i=n.style;return a&&!a.includes(e)||n.types.forEach((function(e){var n=c({},t[e],i);t[e]=n})),t}),a);return i.root=n,i.plain=c({},n,{backgroundColor:null}),i};function m(t,e){var n={};for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&-1===e.indexOf(a)&&(n[a]=t[a]);return n}const y=function(t){function e(){for(var e=this,n=[],a=arguments.length;a--;)n[a]=arguments[a];t.apply(this,n),s(this,"getThemeDict",(function(t){if(void 0!==e.themeDict&&t.theme===e.prevTheme&&t.language===e.prevLanguage)return e.themeDict;e.prevTheme=t.theme,e.prevLanguage=t.language;var n=t.theme?k(t.theme,t.language):void 0;return e.themeDict=n})),s(this,"getLineProps",(function(t){var n=t.key,a=t.className,i=t.style,o=c({},m(t,["key","className","style","line"]),{className:"token-line",style:void 0,key:void 0}),r=e.getThemeDict(e.props);return void 0!==r&&(o.style=r.plain),void 0!==i&&(o.style=void 0!==o.style?c({},o.style,i):i),void 0!==n&&(o.key=n),a&&(o.className+=" "+a),o})),s(this,"getStyleForToken",(function(t){var n=t.types,a=t.empty,i=n.length,o=e.getThemeDict(e.props);if(void 0!==o){if(1===i&&"plain"===n[0])return a?{display:"inline-block"}:void 0;if(1===i&&!a)return o[n[0]];var r=a?{display:"inline-block"}:{},s=n.map((function(t){return o[t]}));return Object.assign.apply(Object,[r].concat(s))}})),s(this,"getTokenProps",(function(t){var n=t.key,a=t.className,i=t.style,o=t.token,r=c({},m(t,["key","className","style","token"]),{className:"token "+o.types.join(" "),children:o.content,style:e.getStyleForToken(o),key:void 0});return void 0!==i&&(r.style=void 0!==r.style?c({},r.style,i):i),void 0!==n&&(r.key=n),a&&(r.className+=" "+a),r})),s(this,"tokenize",(function(t,e,n,a){var i={code:e,grammar:n,language:a,tokens:[]};t.hooks.run("before-tokenize",i);var o=i.tokens=t.tokenize(i.code,i.grammar,i.language);return t.hooks.run("after-tokenize",i),o}))}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.render=function(){var t=this.props,e=t.Prism,n=t.language,a=t.code,i=t.children,o=this.getThemeDict(this.props),r=e.languages[n];return i({tokens:function(t){for(var e=[[]],n=[t],a=[0],i=[t.length],o=0,r=0,s=[],c=[s];r>-1;){for(;(o=a[r]++)<i[r];){var k=void 0,m=e[r],y=n[r][o];if("string"==typeof y?(m=r>0?m:["plain"],k=y):(m=u(m,y.type),y.alias&&(m=u(m,y.alias)),k=y.content),"string"==typeof k){var d=k.split(l),g=d.length;s.push({types:m,content:d[0]});for(var h=1;h<g;h++)p(s),c.push(s=[]),s.push({types:m,content:d[h]})}else r++,e.push(m),n.push(k),a.push(0),i.push(k.length)}r--,e.pop(),n.pop(),a.pop(),i.pop()}return p(s),c}(void 0!==r?this.tokenize(e,a,r,n):[a]),className:"prism-code language-"+n,style:void 0!==o?o.root:{},getLineProps:this.getLineProps,getTokenProps:this.getTokenProps})},e}(o.Component)},87552:(t,e,n)=>{n.d(e,{Z:()=>a});const a={plain:{color:"#bfc7d5",backgroundColor:"#292d3e"},styles:[{types:["comment"],style:{color:"rgb(105, 112, 152)",fontStyle:"italic"}},{types:["string","inserted"],style:{color:"rgb(195, 232, 141)"}},{types:["number"],style:{color:"rgb(247, 140, 108)"}},{types:["builtin","char","constant","function"],style:{color:"rgb(130, 170, 255)"}},{types:["punctuation","selector"],style:{color:"rgb(199, 146, 234)"}},{types:["variable"],style:{color:"rgb(191, 199, 213)"}},{types:["class-name","attr-name"],style:{color:"rgb(255, 203, 107)"}},{types:["tag","deleted"],style:{color:"rgb(255, 85, 114)"}},{types:["operator"],style:{color:"rgb(137, 221, 255)"}},{types:["boolean"],style:{color:"rgb(255, 88, 116)"}},{types:["keyword"],style:{fontStyle:"italic"}},{types:["doctype"],style:{color:"rgb(199, 146, 234)",fontStyle:"italic"}},{types:["namespace"],style:{color:"rgb(178, 204, 214)"}},{types:["url"],style:{color:"rgb(221, 221, 221)"}}]}}}]);