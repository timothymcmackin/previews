"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[61534],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(n),f=i,m=d["".concat(p,".").concat(f)]||d[f]||u[f]||o;return n?r.createElement(m,a(a({ref:t},c),{},{components:n})):r.createElement(m,a({ref:t},c))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var s=2;s<o;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},48720:(e,t,n)=>{n.d(t,{D:()=>i.Z,Z:()=>o});var r=n(67294),i=n(75402);const o=function(e){return r.createElement(i.Z.Consumer,null,(t=>{let{syntax:n}=t;return n===e.syntax?e.children:r.createElement(r.Fragment,null)}))}},74347:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=n(87462),i=(n(67294),n(3905));n(48720);const o={id:"if",title:"#if"},a=void 0,l={unversionedId:"preprocessor/if",id:"version-1.6.0/preprocessor/if",title:"#if",description:"The preprocessor enables the conditional copying of its input. At the",source:"@site/versioned_docs/version-1.6.0/preprocessor/if.md",sourceDirName:"preprocessor",slug:"/preprocessor/if",permalink:"/previews/ligo/external-link-icon/docs/1.6.0/preprocessor/if",draft:!1,tags:[],version:"1.6.0",frontMatter:{id:"if",title:"#if"},sidebar:"docs",previous:{title:"Strings",permalink:"/previews/ligo/external-link-icon/docs/1.6.0/preprocessor/strings"},next:{title:"#define",permalink:"/previews/ligo/external-link-icon/docs/1.6.0/preprocessor/define"}},p={},s=[],c={toc:s};function u(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The preprocessor enables the conditional copying of its input. At the\nstart, its default mode is ",(0,i.kt)("em",{parentName:"p"},"copy"),", meaning that characters in the\ninput are copied to the output. Conditional directives enable another\nmode: ",(0,i.kt)("em",{parentName:"p"},"skip"),", by means of which the following characters are\ndiscarded, and only newline characters are copied."),(0,i.kt)("p",null,"Conditional directives follow the familiar syntax of some of their\ncousins in programming languages. At the very least,"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"they start with the ",(0,i.kt)("inlineCode",{parentName:"p"},"#if")," directive, followed by a Boolean\nexpression as argument,")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"and they are closed by ",(0,i.kt)("inlineCode",{parentName:"p"},"#endif"),"."))),(0,i.kt)("p",null,"It is also possible to use"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"one ",(0,i.kt)("inlineCode",{parentName:"p"},"#else")," directive before ",(0,i.kt)("inlineCode",{parentName:"p"},"#endif"),";")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"a series of ",(0,i.kt)("inlineCode",{parentName:"p"},"#elif")," directive after ",(0,i.kt)("inlineCode",{parentName:"p"},"#if")," (as a short-hand for a\n",(0,i.kt)("inlineCode",{parentName:"p"},"#else")," immediately followed by an ",(0,i.kt)("inlineCode",{parentName:"p"},"#if"),", except that only one\n",(0,i.kt)("inlineCode",{parentName:"p"},"#endif")," will close the conditional)."))),(0,i.kt)("p",null,"A trivial example would be:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"#if false\nThis is NOT copied to the output, except the newline character\n#endif\n")),(0,i.kt)("p",null,"where ",(0,i.kt)("inlineCode",{parentName:"p"},"false")," is a predefined symbol acting like a Boolean value. The\noutput is"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'# 1 "Tests/test.txt"\n\n\n\n\n')),(0,i.kt)("p",null,"Note what looks like an anonymous preprocessing directive ",(0,i.kt)("inlineCode",{parentName:"p"},'# 1 "Tests/test.txt"'),". We will explain its meaning when presenting\n",(0,i.kt)("a",{parentName:"p",href:"#the-inclusion-directive"},"The Inclusion Directive"),". (Remark: ",(0,i.kt)("inlineCode",{parentName:"p"},"cpp"),"\nwould not output blank lines followed by the end of the file.) Their\nuse is clearer if we add text before and after the conditional, like\nso:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"---\n#if false\nA\n#endif\n---\n")),(0,i.kt)("p",null,"whose preprocessed output is then"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'# 1 "Tests/test.txt"\n---\n\n\n\n---\n')),(0,i.kt)("p",null,"Here is how to use the ",(0,i.kt)("inlineCode",{parentName:"p"},"#else")," directive:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"#if false\nThis is NOT copied to the output, except the newline character.\n#else\nThis IS copied to the output.\n#endif\n")))}u.isMDXComponent=!0}}]);