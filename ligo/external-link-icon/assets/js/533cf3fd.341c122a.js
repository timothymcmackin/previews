"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[66352],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(n),f=i,d=m["".concat(s,".").concat(f)]||m[f]||u[f]||r;return n?a.createElement(d,o(o({ref:t},c),{},{components:n})):a.createElement(d,o({ref:t},c))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var p=2;p<r;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},50755:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var a=n(87462),i=(n(67294),n(3905));const r={},o="Optimisation examples",l={unversionedId:"tutorials/optimisation/examples/README",id:"tutorials/optimisation/examples/README",title:"Optimisation examples",description:"These examples act as a supplementary material for the optimisation tutorial. Here you can find four groups of contracts that showcase different optimisation techniques:",source:"@site/../docs/tutorials/optimisation/examples/README.md",sourceDirName:"tutorials/optimisation/examples",slug:"/tutorials/optimisation/examples/",permalink:"/previews/ligo/external-link-icon/docs/next/tutorials/optimisation/examples/",draft:!1,tags:[],version:"current",frontMatter:{}},s={},p=[{value:"Running examples",id:"running-examples",level:2},{value:"Switching between the dialects",id:"switching-between-the-dialects",level:2}],c={toc:p};function u(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"optimisation-examples"},"Optimisation examples"),(0,i.kt)("p",null,"These examples act as a supplementary material for the optimisation tutorial. Here you can find four groups of contracts that showcase different optimisation techniques:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Constants optimisation (",(0,i.kt)("inlineCode",{parentName:"li"},"contracts/constants"),"):")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"V1 \u2013 a non-optimised version that uses a large constant"),(0,i.kt)("li",{parentName:"ul"},"V2 \u2013 an optimised version that uses a smaller constant")),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},"Basic function inlining (",(0,i.kt)("inlineCode",{parentName:"li"},"contracts/inlining"),"):")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"V1 \u2013 a version with no inlining"),(0,i.kt)("li",{parentName:"ul"},'V2 \u2013 a contract with one of the functions marked as "inline"')),(0,i.kt)("ol",{start:3},(0,i.kt)("li",{parentName:"ol"},"More controversial inlining (",(0,i.kt)("inlineCode",{parentName:"li"},"contracts/effectful_binding"),"):")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"V1 \u2013 an attempt to inline a non-pure binding"),(0,i.kt)("li",{parentName:"ul"},"V2 \u2013 a contract with the non-pure computation wrapped in an inline function"),(0,i.kt)("li",{parentName:"ul"},"V3 \u2013 same as V2 but without inlining")),(0,i.kt)("ol",{start:4},(0,i.kt)("li",{parentName:"ol"},"Using lazy storage to store a large entrypoint (",(0,i.kt)("inlineCode",{parentName:"li"},"contracts/large_entrypoint"),"):")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"V1 \u2013 a contract with two entrypoints \u2013 a large one and a small one"),(0,i.kt)("li",{parentName:"ul"},"V2 \u2013 the same contract with the large entrypoint moved to a big map")),(0,i.kt)("p",null,"You can use the provided script (",(0,i.kt)("inlineCode",{parentName:"p"},"./bin/estimateGas"),") to compare the different version."),(0,i.kt)("h2",{id:"running-examples"},"Running examples"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Run ",(0,i.kt)("inlineCode",{parentName:"li"},"npx ganache-cli --flavor tezos --seed alice")," in the background."),(0,i.kt)("li",{parentName:"ol"},"Use ",(0,i.kt)("inlineCode",{parentName:"li"},"npx truffle migrate")," to originate the contracts."),(0,i.kt)("li",{parentName:"ol"},"Test the contracts' size and gas consumption:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Use ",(0,i.kt)("inlineCode",{parentName:"li"},"ligo info measure-contract <PATH> --entry-point main")," to measure the contract size"),(0,i.kt)("li",{parentName:"ul"},"Run the script ",(0,i.kt)("inlineCode",{parentName:"li"},"./bin/estimateGas")," to see the gas and fees estimates for each of the contracts")))),(0,i.kt)("h2",{id:"switching-between-the-dialects"},"Switching between the dialects"),(0,i.kt)("p",null,"By default, all the scripts run CameLIGO contracts. To change this behaviour, set the ",(0,i.kt)("inlineCode",{parentName:"p"},"syntax")," variable in ",(0,i.kt)("inlineCode",{parentName:"p"},"truffle-config.js")," to one of ",(0,i.kt)("inlineCode",{parentName:"p"},"ligo")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"mligo"),". You would need to re-run your migrations to deploy the new contracts to your development network (run ",(0,i.kt)("inlineCode",{parentName:"p"},"npx truffle migrate --reset")," to do it)."))}u.isMDXComponent=!0}}]);