"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[28838],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>f});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(t),f=o,m=d["".concat(s,".").concat(f)]||d[f]||p[f]||a;return t?r.createElement(m,l(l({ref:n},u),{},{components:t})):r.createElement(m,l({ref:n},u))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,l=new Array(a);l[0]=d;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var c=2;c<a;c++)l[c]=t[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},48720:(e,n,t)=>{t.d(n,{D:()=>o.Z,Z:()=>a});var r=t(67294),o=t(75402);const a=function(e){return r.createElement(o.Z.Consumer,null,(n=>{let{syntax:t}=n;return t===e.syntax?e.children:r.createElement(r.Fragment,null)}))}},59666:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>s,toc:()=>u});var r=t(87462),o=(t(67294),t(3905)),a=t(48720);const l={id:"and",title:"And"},i=void 0,s={unversionedId:"booleans/and",id:"version-1.6.0/booleans/and",title:"And",description:'The logical conjunction ("and") is implemented by the binary operator',source:"@site/versioned_docs/version-1.6.0/booleans/and.md",sourceDirName:"booleans",slug:"/booleans/and",permalink:"/previews/ligo/external-link-icon/docs/1.6.0/booleans/and",draft:!1,tags:[],version:"1.6.0",frontMatter:{id:"and",title:"And"},sidebar:"docs",previous:{title:"Or",permalink:"/previews/ligo/external-link-icon/docs/1.6.0/booleans/or"},next:{title:"Not",permalink:"/previews/ligo/external-link-icon/docs/1.6.0/booleans/not"}},c={},u=[],p={toc:u};function d(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,'The logical conjunction ("and") is implemented by the binary operator\n',(0,o.kt)("inlineCode",{parentName:"p"},"&&"),"."),(0,o.kt)(a.Z,{syntax:"cameligo",mdxType:"Syntax"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cameligo",metastring:"group=disjunction",group:"disjunction"},"let and_1 : bool = false && true  // false\nlet and_2 : bool = false && false // false\nlet and_3 : bool = true  && true  // true\nlet and_4 : bool = true  && false // false\n"))),(0,o.kt)(a.Z,{syntax:"jsligo",mdxType:"Syntax"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsligo",metastring:"group=disjunction",group:"disjunction"},"const and_1 : bool = false && true;  // false\nconst and_2 : bool = false && false; // false\nconst and_3 : bool = true  && true;  // true\nconst and_4 : bool = true  && false; // false\n"))))}d.isMDXComponent=!0}}]);