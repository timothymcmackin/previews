"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[53201],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},g={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=s(t),m=a,f=u["".concat(l,".").concat(m)]||u[m]||g[m]||o;return t?r.createElement(f,i(i({ref:n},p),{},{components:t})):r.createElement(f,i({ref:n},p))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=u;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},48720:(e,n,t)=>{t.d(n,{D:()=>a.Z,Z:()=>o});var r=t(67294),a=t(75402);const o=function(e){return r.createElement(a.Z.Consumer,null,(n=>{let{syntax:t}=n;return t===e.syntax?e.children:r.createElement(r.Fragment,null)}))}},18300:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=t(87462),a=(t(67294),t(3905)),o=t(48720);const i={id:"concatenating",title:"Concatenating"},c=void 0,l={unversionedId:"strings/concatenating",id:"version-1.5.0/strings/concatenating",title:"Concatenating",description:"Strings can be concatenated using the ^ operator, as in OCaml:",source:"@site/versioned_docs/version-1.5.0/strings/concatenating.md",sourceDirName:"strings",slug:"/strings/concatenating",permalink:"/previews/ligo/external-link-icon/docs/1.5.0/strings/concatenating",draft:!1,tags:[],version:"1.5.0",frontMatter:{id:"concatenating",title:"Concatenating"},sidebar:"docs",previous:{title:"Strings",permalink:"/previews/ligo/external-link-icon/docs/1.5.0/strings/"},next:{title:"Sizing",permalink:"/previews/ligo/external-link-icon/docs/1.5.0/strings/sizing"}},s={},p=[],g={toc:p};function u(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)(o.Z,{syntax:"cameligo",mdxType:"Syntax"},(0,a.kt)("p",null,"Strings can be concatenated using the ",(0,a.kt)("inlineCode",{parentName:"p"},"^")," operator, as in OCaml:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cameligo",metastring:"group=concatenating",group:"concatenating"},'let name = "Alice"\nlet greeting = "Hello"\nlet full_greeting = greeting ^ " " ^ name\n')),(0,a.kt)("p",null,"Note: See the predefined\n",(0,a.kt)("a",{parentName:"p",href:"../reference/string-reference/?lang=cameligo"},"module String"))),(0,a.kt)(o.Z,{syntax:"jsligo",mdxType:"Syntax"},(0,a.kt)("p",null,"Strings can be concatenated using the overloaded ",(0,a.kt)("inlineCode",{parentName:"p"},"+")," operator, like\nso:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsligo",metastring:"group=concatenating",group:"concatenating"},'const name = "Alice";\nconst greeting = "Hello";\nconst full_greeting = greeting + " " + name;\n')),(0,a.kt)("p",null,"Note: See predefined ",(0,a.kt)("a",{parentName:"p",href:"../reference/string-reference/?lang=jsligo"},"namespace String"))))}u.isMDXComponent=!0}}]);