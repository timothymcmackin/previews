"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[30027],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>y});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),g=c(n),y=i,d=g["".concat(l,".").concat(y)]||g[y]||u[y]||o;return n?r.createElement(d,s(s({ref:t},p),{},{components:n})):r.createElement(d,s({ref:t},p))}));function y(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,s=new Array(o);s[0]=g;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:i,s[1]=a;for(var c=2;c<o;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},48720:(e,t,n)=>{n.d(t,{D:()=>i.Z,Z:()=>o});var r=n(67294),i=n(75402);const o=function(e){return r.createElement(i.Z.Consumer,null,(t=>{let{syntax:n}=t;return n===e.syntax?e.children:r.createElement(r.Fragment,null)}))}},34041:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>g,frontMatter:()=>s,metadata:()=>l,toc:()=>p});var r=n(87462),i=(n(67294),n(3905)),o=n(48720);const s={id:"slicing",title:"Slicing"},a=void 0,l={unversionedId:"tezos/bytes/slicing",id:"version-1.6.0/tezos/bytes/slicing",title:"Slicing",description:"Bytes can be extracted using the predefined function Bytes.sub. The",source:"@site/versioned_docs/version-1.6.0/tezos/bytes/slicing.md",sourceDirName:"tezos/bytes",slug:"/tezos/bytes/slicing",permalink:"/previews/ligo/external-link-icon/docs/1.6.0/tezos/bytes/slicing",draft:!1,tags:[],version:"1.6.0",frontMatter:{id:"slicing",title:"Slicing"},sidebar:"docs",previous:{title:"Sizing",permalink:"/previews/ligo/external-link-icon/docs/1.6.0/tezos/bytes/sizing"},next:{title:"Bitwise",permalink:"/previews/ligo/external-link-icon/docs/1.6.0/tezos/bytes/bitwise"}},c={},p=[],u={toc:p};function g(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Bytes can be extracted using the predefined function ",(0,i.kt)("inlineCode",{parentName:"p"},"Bytes.sub"),". The\nfirst parameter is the start index and the second is the number of\nbytes of the slice we want. Keep in mind that the first byte in a\nsequence has index ",(0,i.kt)("inlineCode",{parentName:"p"},"0n"),"."),(0,i.kt)(o.Z,{syntax:"cameligo",mdxType:"Syntax"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cameligo",metastring:"group=slicing",group:"slicing"},"let large = 0x12345678\nlet slice = Bytes.sub 1n 2n large // sub = 0x3456\n"))),(0,i.kt)(o.Z,{syntax:"jsligo",mdxType:"Syntax"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsligo",metastring:"group=slicing",group:"slicing"},"const large = 0x12345678;\nconst slice = Bytes.sub(1n, 2n, large); // sub == 0x3456\n"))))}g.isMDXComponent=!0}}]);