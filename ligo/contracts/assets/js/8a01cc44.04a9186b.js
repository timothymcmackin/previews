"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5813],{48720:(e,t,a)=>{a.d(t,{D:()=>r.Z,Z:()=>l});var n=a(67294),r=a(75402);const l=function(e){return n.createElement(r.Z.Consumer,null,(t=>{let{syntax:a}=t;return a===e.syntax?e.children:n.createElement(n.Fragment,null)}))}},99191:(e,t,a)=>{a.d(t,{Z:()=>p});var n=a(43164),r=a(67294),l=a(52263),s=a(48720),i=a(11506);function o(){return o=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e},o.apply(this,arguments)}const{Prism:c}=a(43164);c.languages={...c.languages,cameligo:{...c.languages.ocaml,comment:[/(^|[^\\])\/\*[\s\S]*?\*\//,/\(\*[\s\S]*?\*\)/,/\/\/.*/]},jsligo:c.languages.typescript};const p=function(e){const{siteConfig:{themeConfig:{prism:t={}}}}=(0,l.Z)(),a=t.singleTheme||i.Z,[c,p]=(0,r.useState)(!1);return(0,r.useEffect)((()=>{p(!0)}),[]),r.createElement(s.D.Consumer,null,(t=>{let{syntax:l}=t;return l===e.syntax?r.createElement(n.default,o({},n.defaultProps,{key:c,language:e.syntax,code:e.children,theme:a}),(e=>{let{className:t,tokens:a,getLineProps:n,getTokenProps:l}=e;return r.createElement("h4",{className:t,style:{backgroundColor:"var(--ifm-background-color)",fontFamily:"var(--ifm-font-family-monospace)",lineHeight:"var(--ifm-pre-line-height)",fontSize:"1.1rem",fontWeight:"bold",padding:0,whiteSpace:"break-spaces",marginTop:"3rem"}},a.map(((e,t)=>r.createElement("div",n({line:e,key:t}),e.map(((e,t)=>r.createElement("span",l({token:e,key:t}))))))))})):r.createElement("div",null)}))}},28966:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>m});var n=a(87462),r=(a(67294),a(3905)),l=a(48720),s=a(99191);const i={id:"tuple2-reference",title:"tuple2",hide_table_of_contents:!0},o=void 0,c={unversionedId:"reference/tuple2-reference",id:"version-1.6.0/reference/tuple2-reference",title:"tuple2",description:"Binary tuples",source:"@site/versioned_docs/version-1.6.0/reference/tuple2.md",sourceDirName:"reference",slug:"/reference/tuple2-reference",permalink:"/docs/1.6.0/reference/tuple2-reference",draft:!1,tags:[],version:"1.6.0",frontMatter:{id:"tuple2-reference",title:"tuple2",hide_table_of_contents:!0},sidebar:"API",previous:{title:"toplevel",permalink:"/docs/1.6.0/reference/toplevel-reference"},next:{title:"set",permalink:"/docs/1.6.0/reference/set-reference"}},p={},m=[],y={toc:m};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},y,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Binary tuples"),(0,r.kt)(s.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"val curry : 'a 'b 'c.(('a * 'b) -> 'c) -> 'a -> 'b -> 'c"),(0,r.kt)(s.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"let curry: <a, b, c>(_: (_: [a, b]) => c) => (_: a) => (_: b) => c"),(0,r.kt)(l.Z,{syntax:"cameligo",mdxType:"Syntax"},(0,r.kt)("p",null,"The call ",(0,r.kt)("inlineCode",{parentName:"p"},"curry f x y")," has the same value as ",(0,r.kt)("inlineCode",{parentName:"p"},"f (x,y)"),".")),(0,r.kt)(l.Z,{syntax:"jsligo",mdxType:"Syntax"},(0,r.kt)("p",null,"The call ",(0,r.kt)("inlineCode",{parentName:"p"},"curry(f,x,y)")," has the same value as ",(0,r.kt)("inlineCode",{parentName:"p"},"f(x,y)"),".")),(0,r.kt)(s.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"val uncurry : 'a 'b 'c.('a -> 'b -> 'c) -> ('a * 'b) -> 'c"),(0,r.kt)(s.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"let uncurry: <a, b, c>(_: (_: a) => (_: b) => c) => (_: [a, b]) => c"),(0,r.kt)(l.Z,{syntax:"cameligo",mdxType:"Syntax"},(0,r.kt)("p",null,"The call ",(0,r.kt)("inlineCode",{parentName:"p"},"uncurry f (x,y)")," has the same value as ",(0,r.kt)("inlineCode",{parentName:"p"},"f x y"),".")),(0,r.kt)(l.Z,{syntax:"jsligo",mdxType:"Syntax"},(0,r.kt)("p",null,"The call ",(0,r.kt)("inlineCode",{parentName:"p"},"uncurry(f,[x,y])")," has the same value as ",(0,r.kt)("inlineCode",{parentName:"p"},"f(x)(y)"),".")),(0,r.kt)(s.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"val get1 : 'a 'b.('a * 'b) -> 'a"),(0,r.kt)(s.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"let get1: <a, b>(_: [a, b]) => a"),"Projecting the first component of a pair",(0,r.kt)(s.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"val get2 : 'a 'b.('a * 'b) -> 'b"),(0,r.kt)(s.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"let get2: <a, b>(_: [a, b]) => b"),"Projecting the second component of a pair.",(0,r.kt)(s.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"val swap : 'a 'b.('a * 'b) -> ('b * 'a)"),(0,r.kt)(s.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"let swap: <a, b>(_: [a, b]) => [b, a]"),"Swap the components of a pair.")}u.isMDXComponent=!0}}]);