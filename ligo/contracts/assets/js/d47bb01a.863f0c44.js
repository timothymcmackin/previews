"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[57477],{48720:(e,t,s)=>{s.d(t,{D:()=>n.Z,Z:()=>a});var r=s(67294),n=s(75402);const a=function(e){return r.createElement(n.Z.Consumer,null,(t=>{let{syntax:s}=t;return s===e.syntax?e.children:r.createElement(r.Fragment,null)}))}},99191:(e,t,s)=>{s.d(t,{Z:()=>p});var r=s(43164),n=s(67294),a=s(52263),o=s(48720),i=s(11506);function l(){return l=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var s=arguments[t];for(var r in s)Object.prototype.hasOwnProperty.call(s,r)&&(e[r]=s[r])}return e},l.apply(this,arguments)}const{Prism:c}=s(43164);c.languages={...c.languages,cameligo:{...c.languages.ocaml,comment:[/(^|[^\\])\/\*[\s\S]*?\*\//,/\(\*[\s\S]*?\*\)/,/\/\/.*/]},jsligo:c.languages.typescript};const p=function(e){const{siteConfig:{themeConfig:{prism:t={}}}}=(0,a.Z)(),s=t.singleTheme||i.Z,[c,p]=(0,n.useState)(!1);return(0,n.useEffect)((()=>{p(!0)}),[]),n.createElement(o.D.Consumer,null,(t=>{let{syntax:a}=t;return a===e.syntax?n.createElement(r.default,l({},r.defaultProps,{key:c,language:e.syntax,code:e.children,theme:s}),(e=>{let{className:t,tokens:s,getLineProps:r,getTokenProps:a}=e;return n.createElement("h4",{className:t,style:{backgroundColor:"var(--ifm-background-color)",fontFamily:"var(--ifm-font-family-monospace)",lineHeight:"var(--ifm-pre-line-height)",fontSize:"1.1rem",fontWeight:"bold",padding:0,whiteSpace:"break-spaces",marginTop:"3rem"}},s.map(((e,t)=>n.createElement("div",r({line:e,key:t}),e.map(((e,t)=>n.createElement("span",a({token:e,key:t}))))))))})):n.createElement("div",null)}))}},21535:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>y,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=s(87462),n=(s(67294),s(3905)),a=(s(48720),s(99191));const o={id:"test.proxy-ticket-reference",title:"proxy_ticket",hide_table_of_contents:!0},i=void 0,l={unversionedId:"reference/test.proxy-ticket-reference",id:"version-1.5.0/reference/test.proxy-ticket-reference",title:"proxy_ticket",description:"type &#39;v proxy&#95;address = (&#39;v  nat  address, unit) typed&#95;address",source:"@site/versioned_docs/version-1.5.0/reference/test.proxy_ticket.md",sourceDirName:"reference",slug:"/reference/test.proxy-ticket-reference",permalink:"/previews/ligo/contracts/docs/1.5.0/reference/test.proxy-ticket-reference",draft:!1,tags:[],version:"1.5.0",frontMatter:{id:"test.proxy-ticket-reference",title:"proxy_ticket",hide_table_of_contents:!0},sidebar:"API",previous:{title:"test",permalink:"/previews/ligo/contracts/docs/1.5.0/reference/test-reference"},next:{title:"compare",permalink:"/previews/ligo/contracts/docs/1.5.0/reference/test.next.compare-reference"}},c={},p=[],d={toc:p};function y(e){let{components:t,...s}=e;return(0,n.kt)("wrapper",(0,r.Z)({},d,s,{components:t,mdxType:"MDXLayout"}),(0,n.kt)(a.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"type 'v proxy_address = ('v * nat * address, unit) typed_address"),(0,n.kt)(a.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"type proxy_address<v> = typed_address<[[v, nat], address], unit>"),(0,n.kt)(a.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"val init_transfer : 'vt 'whole_p.('vt ticket -> 'whole_p) -> 'vt proxy_address"),(0,n.kt)(a.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"let init_transfer: <vt, whole_p>(_: (_: ticket<vt>) => whole_p) => proxy_address<vt>"),(0,n.kt)(a.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"val transfer : 'vt.'vt proxy_address -> ('vt * nat * address) -> test_exec_result"),(0,n.kt)(a.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"let transfer: <vt>(_: proxy_address<vt>) => (_: [[vt, nat], address]) => test_exec_result"),(0,n.kt)(a.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"val originate : 'vt 'whole_s 'vp.('vt * nat) -> ('vt ticket -> 'whole_s) -> ('vp -> 'whole_s -> (operation list * 'whole_s)) -> ('vp, 'whole_s) typed_address"),(0,n.kt)(a.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"let originate: <vt, whole_s, vp>(_: [vt, nat]) => (_: (_: ticket<vt>) => whole_s) => ( _: (_: vp) => (_: whole_s) => [list<operation>, whole_s] ) => typed_address<vp, whole_s>"),(0,n.kt)(a.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"val get_storage : 'p 's 's2.('p, 's) typed_address -> 's2"),(0,n.kt)(a.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"let get_storage: <p, s, s2>(_: typed_address<p, s>) => s2"))}y.isMDXComponent=!0}}]);