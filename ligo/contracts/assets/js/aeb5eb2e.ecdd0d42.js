"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[65939],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>g});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(r),g=a,d=u["".concat(c,".").concat(g)]||u[g]||m[g]||i;return r?n.createElement(d,o(o({ref:t},p),{},{components:r})):n.createElement(d,o({ref:t},p))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=r[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},48720:(e,t,r)=>{r.d(t,{D:()=>a.Z,Z:()=>i});var n=r(67294),a=r(75402);const i=function(e){return n.createElement(a.Z.Consumer,null,(t=>{let{syntax:r}=t;return r===e.syntax?e.children:n.createElement(n.Fragment,null)}))}},43714:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>p});var n=r(87462),a=(r(67294),r(3905)),i=r(48720);const o={id:"verbatim",title:"Verbatim"},s=void 0,c={unversionedId:"strings/verbatim",id:"version-1.6.0/strings/verbatim",title:"Verbatim",description:"Strings can contain control characters, like \\n. Sometimes we need",source:"@site/versioned_docs/version-1.6.0/strings/verbatim.md",sourceDirName:"strings",slug:"/strings/verbatim",permalink:"/docs/1.6.0/strings/verbatim",draft:!1,tags:[],version:"1.6.0",frontMatter:{id:"verbatim",title:"Verbatim"},sidebar:"docs",previous:{title:"Slicing",permalink:"/docs/1.6.0/strings/slicing"},next:{title:"Declaring",permalink:"/docs/1.6.0/tuples/declaring"}},l={},p=[],m={toc:p};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Strings can contain control characters, like ",(0,a.kt)("inlineCode",{parentName:"p"},"\\n"),". Sometimes we need\nthat each character in a string is interpreted on its own, for example\n",(0,a.kt)("inlineCode",{parentName:"p"},"\\n")," as two characters instead of a newline character. In that case,\neither we escape the backslash character, or we use ",(0,a.kt)("em",null,"verbatim\nstrings"),". Those have the same type ",(0,a.kt)("inlineCode",{parentName:"p"},"string")," as normal (that is,\ninterpreted) strings."),(0,a.kt)(i.Z,{syntax:"cameligo",mdxType:"Syntax"},(0,a.kt)("p",null,"Verbatim strings are given between the delimiters ",(0,a.kt)("inlineCode",{parentName:"p"},"{|")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"|}"),",\ninstead of double quotes:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cameligo",metastring:"group=verbatim",group:"verbatim"},"let s : string = {|\\n|} // String made of two characters\n")),(0,a.kt)("p",null,"Note: See the predefined\n",(0,a.kt)("a",{parentName:"p",href:"../reference/string-reference/?lang=cameligo"},"module String"))),(0,a.kt)(i.Z,{syntax:"jsligo",mdxType:"Syntax"},(0,a.kt)("p",null,"Verbatim strings are given between backquotes (a.k.a. backticks),\ninstead of double quotes:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsligo",metastring:"group=verbatim",group:"verbatim"},"const s : string = `\\n` // String made of two characters\n")),(0,a.kt)("p",null,"Note: See predefined ",(0,a.kt)("a",{parentName:"p",href:"../reference/string-reference/?lang=jsligo"},"namespace String"))))}u.isMDXComponent=!0}}]);