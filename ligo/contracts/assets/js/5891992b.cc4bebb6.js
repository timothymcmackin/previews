"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[78752],{48720:(e,t,n)=>{n.d(t,{D:()=>a.Z,Z:()=>s});var r=n(67294),a=n(75402);const s=function(e){return r.createElement(a.Z.Consumer,null,(t=>{let{syntax:n}=t;return n===e.syntax?e.children:r.createElement(r.Fragment,null)}))}},99191:(e,t,n)=>{n.d(t,{Z:()=>p});var r=n(43164),a=n(67294),s=n(52263),c=n(48720),o=n(11506);function i(){return i=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i.apply(this,arguments)}const{Prism:l}=n(43164);l.languages={...l.languages,cameligo:{...l.languages.ocaml,comment:[/(^|[^\\])\/\*[\s\S]*?\*\//,/\(\*[\s\S]*?\*\)/,/\/\/.*/]},jsligo:l.languages.typescript};const p=function(e){const{siteConfig:{themeConfig:{prism:t={}}}}=(0,s.Z)(),n=t.singleTheme||o.Z,[l,p]=(0,a.useState)(!1);return(0,a.useEffect)((()=>{p(!0)}),[]),a.createElement(c.D.Consumer,null,(t=>{let{syntax:s}=t;return s===e.syntax?a.createElement(r.default,i({},r.defaultProps,{key:l,language:e.syntax,code:e.children,theme:n}),(e=>{let{className:t,tokens:n,getLineProps:r,getTokenProps:s}=e;return a.createElement("h4",{className:t,style:{backgroundColor:"var(--ifm-background-color)",fontFamily:"var(--ifm-font-family-monospace)",lineHeight:"var(--ifm-pre-line-height)",fontSize:"1.1rem",fontWeight:"bold",padding:0,whiteSpace:"break-spaces",marginTop:"3rem"}},n.map(((e,t)=>a.createElement("div",r({line:e,key:t}),e.map(((e,t)=>a.createElement("span",s({token:e,key:t}))))))))})):a.createElement("div",null)}))}},48945:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>c,metadata:()=>i,toc:()=>p});var r=n(87462),a=(n(67294),n(3905)),s=(n(48720),n(99191));const c={id:"test.next.contract-reference",title:"contract",hide_table_of_contents:!0},o=void 0,i={unversionedId:"reference/test.next.contract-reference",id:"version-1.5.0/reference/test.next.contract-reference",title:"contract",description:"val transfer : &#39;p.&#39;p contract -&gt; &#39;p -&gt; tez -&gt; test&#95;exec&#95;result",source:"@site/versioned_docs/version-1.5.0/reference/test.next.contract.md",sourceDirName:"reference",slug:"/reference/test.next.contract-reference",permalink:"/previews/ligo/contracts/docs/1.5.0/reference/test.next.contract-reference",draft:!1,tags:[],version:"1.5.0",frontMatter:{id:"test.next.contract-reference",title:"contract",hide_table_of_contents:!0},sidebar:"API",previous:{title:"compare",permalink:"/previews/ligo/contracts/docs/1.5.0/reference/test.next.compare-reference"},next:{title:"ticket",permalink:"/previews/ligo/contracts/docs/1.5.0/reference/test.next.ticket-reference"}},l={},p=[],d={toc:p};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)(s.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"val transfer : 'p.'p contract -> 'p -> tez -> test_exec_result"),(0,a.kt)(s.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"let transfer: <p>(_: contract<p>) => (_: p) => (_: tez) => test_exec_result"),(0,a.kt)(s.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"val transfer_exn : 'p.'p contract -> 'p -> tez -> nat"),(0,a.kt)(s.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"let transfer_exn: <p>(_: contract<p>) => (_: p) => (_: tez) => nat"),(0,a.kt)(s.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"val to_typed_address : 'p 's.'p contract -> ('p, 's) typed_address"),(0,a.kt)(s.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"let to_typed_address: <p, s>(_: contract<p>) => typed_address<p, s>"))}m.isMDXComponent=!0}}]);