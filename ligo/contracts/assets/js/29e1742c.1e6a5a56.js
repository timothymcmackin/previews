"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[15590],{48720:(e,t,n)=>{n.d(t,{D:()=>a.Z,Z:()=>s});var r=n(67294),a=n(75402);const s=function(e){return r.createElement(a.Z.Consumer,null,(t=>{let{syntax:n}=t;return n===e.syntax?e.children:r.createElement(r.Fragment,null)}))}},99191:(e,t,n)=>{n.d(t,{Z:()=>g});var r=n(43164),a=n(67294),s=n(52263),i=n(48720),o=n(11506);function l(){return l=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},l.apply(this,arguments)}const{Prism:c}=n(43164);c.languages={...c.languages,cameligo:{...c.languages.ocaml,comment:[/(^|[^\\])\/\*[\s\S]*?\*\//,/\(\*[\s\S]*?\*\)/,/\/\/.*/]},jsligo:c.languages.typescript};const g=function(e){const{siteConfig:{themeConfig:{prism:t={}}}}=(0,s.Z)(),n=t.singleTheme||o.Z,[c,g]=(0,a.useState)(!1);return(0,a.useEffect)((()=>{g(!0)}),[]),a.createElement(i.D.Consumer,null,(t=>{let{syntax:s}=t;return s===e.syntax?a.createElement(r.default,l({},r.defaultProps,{key:c,language:e.syntax,code:e.children,theme:n}),(e=>{let{className:t,tokens:n,getLineProps:r,getTokenProps:s}=e;return a.createElement("h4",{className:t,style:{backgroundColor:"var(--ifm-background-color)",fontFamily:"var(--ifm-font-family-monospace)",lineHeight:"var(--ifm-pre-line-height)",fontSize:"1.1rem",fontWeight:"bold",padding:0,whiteSpace:"break-spaces",marginTop:"3rem"}},n.map(((e,t)=>a.createElement("div",r({line:e,key:t}),e.map(((e,t)=>a.createElement("span",s({token:e,key:t}))))))))})):a.createElement("div",null)}))}},2438:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>y,frontMatter:()=>i,metadata:()=>l,toc:()=>g});var r=n(87462),a=(n(67294),n(3905)),s=(n(48720),n(99191));const i={id:"test.next.string-reference",title:"string",hide_table_of_contents:!0},o=void 0,l={unversionedId:"reference/test.next.string-reference",id:"reference/test.next.string-reference",title:"string",description:"val chr : nat -&gt; string option",source:"@site/../docs/reference/test.next.string.md",sourceDirName:"reference",slug:"/reference/test.next.string-reference",permalink:"/docs/next/reference/test.next.string-reference",draft:!1,tags:[],version:"current",frontMatter:{id:"test.next.string-reference",title:"string",hide_table_of_contents:!0},sidebar:"API",previous:{title:"contract",permalink:"/docs/next/reference/test.next.contract-reference"},next:{title:"crypto",permalink:"/docs/next/reference/test.next.crypto-reference"}},c={},g=[],m={toc:g};function y(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)(s.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"val chr : nat -> string option"),(0,a.kt)(s.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"let chr: (_: nat) => option<string>"),"String consisting of the character represented by a `nat` in the interval `[0, 255]`.",(0,a.kt)(s.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"val nl : string"),(0,a.kt)(s.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"let nl: string"),"String consisting of only a newline.",(0,a.kt)(s.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"val show : 'a.'a -> string"),(0,a.kt)(s.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"let show: <a>(_: a) => string"),"Converts a value to a string (same conversion as used by `Test.log`).",(0,a.kt)(s.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"val json : 'a.'a -> string"),(0,a.kt)(s.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"let json: <a>(_: a) => string"),"Converts a value to its JSON representation (as a string).",(0,a.kt)(s.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"val debugger_json : 'a.'a -> string"),(0,a.kt)(s.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"let debugger_json: <a>(_: a) => string"))}y.isMDXComponent=!0}}]);