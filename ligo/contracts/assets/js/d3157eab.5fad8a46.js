"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[66728],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>g});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(n),g=a,m=u["".concat(l,".").concat(g)]||u[g]||p[g]||i;return n?r.createElement(m,o(o({ref:t},d),{},{components:n})):r.createElement(m,o({ref:t},d))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},48720:(e,t,n)=>{n.d(t,{D:()=>a.Z,Z:()=>i});var r=n(67294),a=n(75402);const i=function(e){return r.createElement(a.Z.Consumer,null,(t=>{let{syntax:n}=t;return n===e.syntax?e.children:r.createElement(r.Fragment,null)}))}},84058:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var r=n(87462),a=(n(67294),n(3905)),i=n(48720);const o={id:"adding",title:"Adding"},s=void 0,l={unversionedId:"sets/adding",id:"version-1.6.0/sets/adding",title:"Adding",description:"Adding an element to a set is done by calling the function",source:"@site/versioned_docs/version-1.6.0/sets/adding.md",sourceDirName:"sets",slug:"/sets/adding",permalink:"/previews/ligo/contracts/docs/1.6.0/sets/adding",draft:!1,tags:[],version:"1.6.0",frontMatter:{id:"adding",title:"Adding"},sidebar:"docs",previous:{title:"Searching",permalink:"/previews/ligo/contracts/docs/1.6.0/sets/searching"},next:{title:"Removing",permalink:"/previews/ligo/contracts/docs/1.6.0/sets/removing"}},c={},d=[],p={toc:d};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Adding an element to a set is done by calling the function\n",(0,a.kt)("inlineCode",{parentName:"p"},"Set.add"),". If the element was already present in the given set, the\nresulting set is the same as the original one."),(0,a.kt)(i.Z,{syntax:"cameligo",mdxType:"Syntax"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cameligo",metastring:"group=set_adding",group:"set_adding"},"let my_set : int set = Set.literal [3; 2; 2; 1]\nlet with_4 : int set = Set.add 4 my_set\n")),(0,a.kt)("p",null,"Note: See the predefined\n",(0,a.kt)("a",{parentName:"p",href:"../reference/set-reference/?lang=cameligo"},"module Set"))),(0,a.kt)(i.Z,{syntax:"jsligo",mdxType:"Syntax"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsligo",metastring:"group=set_adding",group:"set_adding"},"const my_set: set<int> = Set.literal([3, 2, 2, 1]);\nconst with_4: set<int> = Set.add(4, my_set);\n")),(0,a.kt)("p",null,"Note: See the predefined\n",(0,a.kt)("a",{parentName:"p",href:"../reference/set-reference/?lang=jsligo"},"namespace Set"))))}u.isMDXComponent=!0}}]);