"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[12579],{48720:(e,n,t)=>{t.d(n,{D:()=>i.Z,Z:()=>o});var a=t(67294),i=t(75402);const o=function(e){return a.createElement(i.Z.Consumer,null,(n=>{let{syntax:t}=n;return t===e.syntax?e.children:a.createElement(a.Fragment,null)}))}},99191:(e,n,t)=>{t.d(n,{Z:()=>m});var a=t(43164),i=t(67294),o=t(52263),r=t(48720),p=t(11506);function y(){return y=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e},y.apply(this,arguments)}const{Prism:s}=t(43164);s.languages={...s.languages,cameligo:{...s.languages.ocaml,comment:[/(^|[^\\])\/\*[\s\S]*?\*\//,/\(\*[\s\S]*?\*\)/,/\/\/.*/]},jsligo:s.languages.typescript};const m=function(e){const{siteConfig:{themeConfig:{prism:n={}}}}=(0,o.Z)(),t=n.singleTheme||p.Z,[s,m]=(0,i.useState)(!1);return(0,i.useEffect)((()=>{m(!0)}),[]),i.createElement(r.D.Consumer,null,(n=>{let{syntax:o}=n;return o===e.syntax?i.createElement(a.default,y({},a.defaultProps,{key:s,language:e.syntax,code:e.children,theme:t}),(e=>{let{className:n,tokens:t,getLineProps:a,getTokenProps:o}=e;return i.createElement("h4",{className:n,style:{backgroundColor:"var(--ifm-background-color)",fontFamily:"var(--ifm-font-family-monospace)",lineHeight:"var(--ifm-pre-line-height)",fontSize:"1.1rem",fontWeight:"bold",padding:0,whiteSpace:"break-spaces",marginTop:"3rem"}},t.map(((e,n)=>i.createElement("div",a({line:e,key:n}),e.map(((e,n)=>i.createElement("span",o({token:e,key:n}))))))))})):i.createElement("div",null)}))}},76356:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>m,contentTitle:()=>y,default:()=>c,frontMatter:()=>p,metadata:()=>s,toc:()=>d});var a=t(87462),i=(t(67294),t(3905)),o=t(48720),r=t(99191);const p={id:"dynamic-entrypoints-reference",title:"dynamic_entrypoints",hide_table_of_contents:!0},y=void 0,s={unversionedId:"reference/dynamic-entrypoints-reference",id:"reference/dynamic-entrypoints-reference",title:"dynamic_entrypoints",description:"type t = (nat, bytes) big&#95;map",source:"@site/../docs/reference/dynamic_entrypoints.md",sourceDirName:"reference",slug:"/reference/dynamic-entrypoints-reference",permalink:"/docs/next/reference/dynamic-entrypoints-reference",draft:!1,tags:[],version:"current",frontMatter:{id:"dynamic-entrypoints-reference",title:"dynamic_entrypoints",hide_table_of_contents:!0},sidebar:"API",previous:{title:"big_set",permalink:"/docs/next/reference/big-set-reference"},next:{title:"tuple2",permalink:"/docs/next/reference/tuple2-reference"}},m={},d=[],l={toc:d};function c(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,a.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)(r.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"type t = (nat, bytes) big_map"),(0,i.kt)(r.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"type t = big_map<nat, bytes>"),"Type `t` is an alias of the predefined type `dynamic_entrypoints`.",(0,i.kt)(r.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"val set : 'param 'storage.('param, 'storage) dynamic_entrypoint -> ('param, 'storage) entrypoint option -> dynamic_entrypoints -> dynamic_entrypoints"),(0,i.kt)(r.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"let set: <param, storage>(_: dynamic_entrypoint<param, storage>) => (_: option<entrypoint<param, storage>>) => ( _: dynamic_entrypoints ) => dynamic_entrypoints"),(0,i.kt)(o.Z,{syntax:"cameligo",mdxType:"Syntax"},(0,i.kt)("p",null,"The call ",(0,i.kt)("inlineCode",{parentName:"p"},"Dynamic_entrypoints.set dyn None dyn_map")," returns a copy\nof the map of dynamic entrypoints ",(0,i.kt)("inlineCode",{parentName:"p"},"dyn_map")," where the dynamic entrypoint\n",(0,i.kt)("inlineCode",{parentName:"p"},"dyn")," is not associated to a static entrypoint. The call\n",(0,i.kt)("inlineCode",{parentName:"p"},"Dynamic_entrypoints set dyn (Some entrypoint) dyn_map")," is a copy of\n",(0,i.kt)("inlineCode",{parentName:"p"},"dyn_map")," where the dynamic entrypoint ",(0,i.kt)("inlineCode",{parentName:"p"},"dyn")," is associated to the static\nentrypoint ",(0,i.kt)("inlineCode",{parentName:"p"},"entrypoint"),".")),(0,i.kt)(o.Z,{syntax:"jsligo",mdxType:"Syntax"},(0,i.kt)("p",null,"The call ",(0,i.kt)("inlineCode",{parentName:"p"},"Dynamic_entrypoints.set(dyn, None(), dyn_map)")," returns a copy\nof the map of dynamic entrypoints ",(0,i.kt)("inlineCode",{parentName:"p"},"dyn_map")," where the dynamic entrypoint\n",(0,i.kt)("inlineCode",{parentName:"p"},"dyn")," is not associated to a static entrypoint. The call\n",(0,i.kt)("inlineCode",{parentName:"p"},"Dynamic_entrypoints.set(dyn, Some(entrypoint), dyn_map)")," is a copy of\n",(0,i.kt)("inlineCode",{parentName:"p"},"dyn_map")," where the  dynamic entrypoint ",(0,i.kt)("inlineCode",{parentName:"p"},"dyn")," is associated to the static\nentrypoint ",(0,i.kt)("inlineCode",{parentName:"p"},"entrypoint"),".")),(0,i.kt)(r.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"val set_bytes : 'param 'storage.('param, 'storage) dynamic_entrypoint -> bytes option -> dynamic_entrypoints -> dynamic_entrypoints"),(0,i.kt)(r.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"let set_bytes: <param, storage>(_: dynamic_entrypoint<param, storage>) => (_: option<bytes>) => (_: dynamic_entrypoints) => dynamic_entrypoints"),(0,i.kt)(o.Z,{syntax:"cameligo",mdxType:"Syntax"},(0,i.kt)("p",null,"The call ",(0,i.kt)("inlineCode",{parentName:"p"},"Dynamic_entrypoints.set_bytes dyn None dyn_map")," returns a copy of\nthe map of dynamic entrypoints ",(0,i.kt)("inlineCode",{parentName:"p"},"dyn_map")," where the dynamic entrypoint\n",(0,i.kt)("inlineCode",{parentName:"p"},"dyn")," is not associated to a static entrypoint. The call\n",(0,i.kt)("inlineCode",{parentName:"p"},"Dynamic_entrypoints.set_bytes dyn (Some bytes) dyn_map")," is a copy of\n",(0,i.kt)("inlineCode",{parentName:"p"},"dyn_map")," where the dynamic entrypoint ",(0,i.kt)("inlineCode",{parentName:"p"},"dyn")," is associated to the static\nentrypoint encoded by the sequence of bytes ",(0,i.kt)("inlineCode",{parentName:"p"},"bytes"),". If that sequence is\ninvalid, any call to the dynamic entrypoint will fail.")),(0,i.kt)(o.Z,{syntax:"jsligo",mdxType:"Syntax"},(0,i.kt)("p",null,"The call ",(0,i.kt)("inlineCode",{parentName:"p"},"Dynamic_entrypoints.set_bytes(dyn, None(), dyn_map)")," returns a\ncopy of the map of dynamic entrypoints ",(0,i.kt)("inlineCode",{parentName:"p"},"dyn_map")," where the dynamic\nentrypoint ",(0,i.kt)("inlineCode",{parentName:"p"},"dyn")," is not associated to a static entrypoint. The\ncall ",(0,i.kt)("inlineCode",{parentName:"p"},"Dynamic_entrypoints.set_bytes(dyn, Some(bytes), dyn_map)")," is a copy\nof ",(0,i.kt)("inlineCode",{parentName:"p"},"dyn_map")," where the dynamic entrypoint ",(0,i.kt)("inlineCode",{parentName:"p"},"dyn")," is associated to the static\nentrypoint encoded by the sequence of bytes ",(0,i.kt)("inlineCode",{parentName:"p"},"bytes"),". If that sequence is\ninvalid, any call to the dynamic entrypoint will fail.")),(0,i.kt)(r.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"val get : 'param 'storage.('param, 'storage) dynamic_entrypoint -> dynamic_entrypoints -> ('param, 'storage) entrypoint option"),(0,i.kt)(r.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"let get: <param, storage>(_: dynamic_entrypoint<param, storage>) => (_: dynamic_entrypoints) => option< entrypoint<param, storage> >"),(0,i.kt)(o.Z,{syntax:"cameligo",mdxType:"Syntax"},(0,i.kt)("p",null,"The call ",(0,i.kt)("inlineCode",{parentName:"p"},"Dynamic_entrypoints.get dyn dyn_map")," is ",(0,i.kt)("inlineCode",{parentName:"p"},"None")," if the dynamic\nentrypoint ",(0,i.kt)("inlineCode",{parentName:"p"},"dyn")," is absent from the dynamic entrypoints map\n",(0,i.kt)("inlineCode",{parentName:"p"},"dyn_map"),". Otherwise, it is ",(0,i.kt)("inlineCode",{parentName:"p"},"Some entry"),", where ",(0,i.kt)("inlineCode",{parentName:"p"},"entry")," is a\nstatic entrypoint that is callable (like a function). See type\n",(0,i.kt)("inlineCode",{parentName:"p"},"entrypoint"),".")),(0,i.kt)(o.Z,{syntax:"jsligo",mdxType:"Syntax"},(0,i.kt)("p",null,"The call ",(0,i.kt)("inlineCode",{parentName:"p"},"Dynamic_entrypoints.get(dyn, dyn_map)")," is ",(0,i.kt)("inlineCode",{parentName:"p"},"None()")," if the dynamic\nentrypoint ",(0,i.kt)("inlineCode",{parentName:"p"},"dyn")," is absent from the dynamic entrypoints map\n",(0,i.kt)("inlineCode",{parentName:"p"},"dyn_map"),". Otherwise, it is ",(0,i.kt)("inlineCode",{parentName:"p"},"Some(entry)"),", where ",(0,i.kt)("inlineCode",{parentName:"p"},"entry")," is a\nstatic entrypoint that is callable (like a function). See type\n",(0,i.kt)("inlineCode",{parentName:"p"},"entrypoint"),".")))}c.isMDXComponent=!0}}]);