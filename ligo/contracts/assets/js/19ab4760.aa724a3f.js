"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[51399],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>m});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),c=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},l=function(e){var n=c(e.components);return r.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),d=c(t),m=a,y=d["".concat(p,".").concat(m)]||d[m]||u[m]||o;return t?r.createElement(y,s(s({ref:n},l),{},{components:t})):r.createElement(y,s({ref:n},l))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=d;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var c=2;c<o;c++)s[c]=t[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},48720:(e,n,t)=>{t.d(n,{D:()=>a.Z,Z:()=>o});var r=t(67294),a=t(75402);const o=function(e){return r.createElement(a.Z.Consumer,null,(n=>{let{syntax:t}=n;return t===e.syntax?e.children:r.createElement(r.Fragment,null)}))}},71650:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>p,toc:()=>l});var r=t(87462),a=(t(67294),t(3905)),o=t(48720);const s={id:"type-annotations",title:"Type Annotations"},i=void 0,p={unversionedId:"language-basics/type-annotations",id:"version-1.5.0/language-basics/type-annotations",title:"Type Annotations",description:"Annotations",source:"@site/versioned_docs/version-1.5.0/language-basics/type-annotations.md",sourceDirName:"language-basics",slug:"/language-basics/type-annotations",permalink:"/docs/1.5.0/language-basics/type-annotations",draft:!1,tags:[],version:"1.5.0",frontMatter:{id:"type-annotations",title:"Type Annotations"}},c={},l=[{value:"Annotations",id:"annotations",level:2}],u={toc:l};function d(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"annotations"},"Annotations"),(0,a.kt)("p",null,"In certain cases, the type of an expression cannot be properly\ninferred by the compiler. In order to help the type checker, you can\nannotate an expression with its desired type. Here is an example:"),(0,a.kt)(o.Z,{syntax:"cameligo",mdxType:"Syntax"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cameligo",metastring:"group=d",group:"d"},'type parameter = Back | Claim | Withdraw\n\ntype storage = {\n  owner    : address;\n  goal     : tez;\n  deadline : timestamp;\n  backers  : (address, tez) map;\n  funded   : bool\n}\n\n[@entry]\nlet back (param : unit) (store : storage) : operation list * storage = (* Annotation *)\n  if Tezos.get_now () > store.deadline then failwith "Deadline passed."\n  else\n    match Map.find_opt (Tezos.get_sender ()) store.backers with\n      None ->\n        let backers = Map.update (Tezos.get_sender ()) (Some (Tezos.get_amount ())) store.backers\n        in [], {store with backers=backers}\n    | Some (x) -> [], store\n'))),(0,a.kt)(o.Z,{syntax:"jsligo",mdxType:"Syntax"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsligo",metastring:"group=d",group:"d"},'type parameter =\n  ["Back"]\n| ["Claim"]\n| ["Withdraw"];\n\ntype storage = {\n  owner    : address,\n  goal     : tez,\n  deadline : timestamp,\n  backers  : map<address, tez>,\n  funded   : bool\n};\n\n@entry\nconst back = (param : unit, store : storage) : [list<operation>, storage] => { // Annotation\n  let no_op = list([]);\n  if (Tezos.get_now() > store.deadline) {\n    return failwith ("Deadline passed.");\n  }\n  else {\n    return match(Map.find_opt (Tezos.get_sender(), store.backers)) {\n      when(None()): do {\n        let backers = Map.update(Tezos.get_sender(), Some(Tezos.get_amount()), store.backers);\n        return [no_op, {...store, backers:backers}];\n      };\n      when(Some(x)): [no_op, store]\n    }\n  };\n};\n'))))}d.isMDXComponent=!0}}]);