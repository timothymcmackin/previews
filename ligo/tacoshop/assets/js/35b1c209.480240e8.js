"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[68630],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>y});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),y=o,d=u["".concat(l,".").concat(y)]||u[y]||g[y]||a;return n?r.createElement(d,i(i({ref:t},p),{},{components:n})):r.createElement(d,i({ref:t},p))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},48720:(e,t,n)=>{n.d(t,{D:()=>o.Z,Z:()=>a});var r=n(67294),o=n(75402);const a=function(e){return r.createElement(o.Z.Consumer,null,(t=>{let{syntax:n}=t;return n===e.syntax?e.children:r.createElement(r.Fragment,null)}))}},99191:(e,t,n)=>{n.d(t,{Z:()=>p});var r=n(23746),o=n(67294),a=n(52263),i=n(48720),s=n(87552);function l(){return l=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},l.apply(this,arguments)}const{Prism:c}=n(23746);c.languages={...c.languages,cameligo:{...c.languages.ocaml,comment:[/(^|[^\\])\/\*[\s\S]*?\*\//,/\(\*[\s\S]*?\*\)/,/\/\/.*/]},jsligo:c.languages.typescript};const p=function(e){const{siteConfig:{themeConfig:{prism:t={}}}}=(0,a.Z)(),n=t.singleTheme||s.Z,[c,p]=(0,o.useState)(!1);return(0,o.useEffect)((()=>{p(!0)}),[]),o.createElement(i.D.Consumer,null,(t=>{let{syntax:a}=t;return a===e.syntax?o.createElement(r.default,l({},r.defaultProps,{key:c,language:e.syntax,code:e.children,theme:n}),(e=>{let{className:t,tokens:n,getLineProps:r,getTokenProps:a}=e;return o.createElement("h4",{className:t,style:{backgroundColor:"var(--ifm-background-color)",fontFamily:"var(--ifm-font-family-monospace)",lineHeight:"var(--ifm-pre-line-height)",fontSize:"1.1rem",fontWeight:"bold",padding:0,whiteSpace:"break-spaces",marginTop:"3rem"}},n.map(((e,t)=>o.createElement("div",r({line:e,key:t}),e.map(((e,t)=>o.createElement("span",a({token:e,key:t}))))))))})):o.createElement("div",null)}))}},93544:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>y,frontMatter:()=>s,metadata:()=>c,toc:()=>g});var r=n(87462),o=(n(67294),n(3905)),a=n(48720),i=n(99191);const s={id:"views",title:"LIGO views",description:"Views for Tezos written in LIGO",hide_table_of_contents:!0},l=void 0,c={unversionedId:"contract/views",id:"version-1.5.0/contract/views",title:"LIGO views",description:"Views for Tezos written in LIGO",source:"@site/versioned_docs/version-1.5.0/contract/views.md",sourceDirName:"contract",slug:"/contract/views",permalink:"/previews/ligo/tacoshop/docs/1.5.0/contract/views",draft:!1,tags:[],version:"1.5.0",frontMatter:{id:"views",title:"LIGO views",description:"Views for Tezos written in LIGO",hide_table_of_contents:!0}},p={},g=[{value:"Defining On-Chain Views",id:"defining-on-chain-views",level:2},{value:"Calling On-Chain Views",id:"calling-on-chain-views",level:2},{value:"Defining Off-Chain Views",id:"defining-off-chain-views",level:2}],u={toc:g};function y(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"defining-on-chain-views"},"Defining On-Chain Views"),(0,o.kt)("p",null,"On-chain views can be defined using the ",(0,o.kt)("inlineCode",{parentName:"p"},"@view")," attribute. For more information ",(0,o.kt)("a",{parentName:"p",href:"/previews/ligo/tacoshop/docs/1.5.0/protocol/hangzhou"},"see here"),"."),(0,o.kt)(a.Z,{syntax:"cameligo",mdxType:"Syntax"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cameligo",metastring:"group=onchainviews",group:"onchainviews"},"type storage = string\ntype ret = operation list * storage\n\n[@entry]\nlet main (word : string) (store : storage) : ret\n  = [] , store ^ \" \" ^ word\n\n(* view 'view1', simply returns the storage *)\n[@view] let view1 (() : unit) (s : storage) : storage\n  = s\n\n(* view 'v2', returns true if the storage has a given length *)\n[@view] let v2 (expected_length : nat) (s : storage) : bool\n  = (String.length s = expected_length)\n\n(* view 'v3' does not use its parameters and returns a constant int *)\n[@view] let v3 (() : unit) (_ : storage) : int\n  = 42\n"))),(0,o.kt)(a.Z,{syntax:"jsligo",mdxType:"Syntax"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsligo",metastring:"group=onchainviews",group:"onchainviews"},"type storage = string\ntype ret = [list<operation>, storage];\n\nconst main = (word : string, store : storage) : ret\n  => [list([]) , store + \" \" + word]\n\n/* view 'view1', simply returns the storage */\n@view\nconst view1 = (_arg : unit, s : storage) : storage\n  => s;\n\n/* view 'v2', returns true if the storage has a given length */\n@view\nconst v2 = (expected_length : nat , s : storage) : bool\n  => (String.length (s) == expected_length);\n\n/* view 'view3' does not use its parameters and returns a constant int */\n@view\nconst view3 = (_arg : unit , _s : storage) : int\n  => 42;\n"))),(0,o.kt)("h2",{id:"calling-on-chain-views"},"Calling On-Chain Views"),(0,o.kt)(i.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"val call_view : string -> 'arg -> address -> 'ret option"),(0,o.kt)(i.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"let call_view : string => 'arg => address => option <'ret>"),(0,o.kt)("p",null,"The primitive ",(0,o.kt)("inlineCode",{parentName:"p"},"Tezos.call_view")," will allow you to call another contract view and get its result by providing the view name; the contract address and the parameter of the view. If the address is nonexistent; the name does not match of of the contract\nview or the parameter type do not match, ",(0,o.kt)("inlineCode",{parentName:"p"},"Tezos.call_view")," will return ",(0,o.kt)("inlineCode",{parentName:"p"},"None"),"."),(0,o.kt)("h2",{id:"defining-off-chain-views"},"Defining Off-Chain Views"),(0,o.kt)("p",null,"In addition to on-chain views, LIGO views can be compiled and used as off-chain views (e.g. to be placed in metadata)."),(0,o.kt)("p",null,"To compile an expression as a off-chain view, we can use the LIGO sub-command ",(0,o.kt)("inlineCode",{parentName:"p"},"compile expression"),", passing the ",(0,o.kt)("inlineCode",{parentName:"p"},"--function-body")," flag. Moreover, the ",(0,o.kt)("inlineCode",{parentName:"p"},"--init-file")," argument can be passed to\nre-use expressions from a file."),(0,o.kt)("p",null,"For example, if we have the following ",(0,o.kt)("inlineCode",{parentName:"p"},"off_chain")," file containing a contract ",(0,o.kt)("inlineCode",{parentName:"p"},"C"),":"),(0,o.kt)(a.Z,{syntax:"cameligo",mdxType:"Syntax"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cameligo",metastring:"group=view_file",group:"view_file"},'module C = struct\n  type storage = string\n\n  [@entry] let append (a : string) (s : storage) : operation list * storage = [] , s ^ a\n\n  [@entry] let clear (_ : unit) (_ : storage) : operation list * storage = [] , ""\n\n  let v (expected_length: nat) (s: storage) : bool = (String.length s = expected_length)\nend\n'))),(0,o.kt)(a.Z,{syntax:"jsligo",mdxType:"Syntax"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsligo",metastring:"group=view_file",group:"view_file"},'namespace C {\n  type storage = string\n\n  @entry\n  const append = (a: string, s: storage) : [list<operation> , storage] => [list([]), s + a];\n\n  @entry\n  const clear = (_p: unit, _s: storage) : [list<operation>, storage] => [list([]), ""];\n\n  export const v = (expected_length: nat, s: storage) : bool => (String.length (s) == expected_length);\n}\n'))),(0,o.kt)("p",null,"We can compile function ",(0,o.kt)("inlineCode",{parentName:"p"},"v")," from contract ",(0,o.kt)("inlineCode",{parentName:"p"},"C")," as an off-chain view as follows:"),(0,o.kt)(a.Z,{syntax:"cameligo",mdxType:"Syntax"},(0,o.kt)("p",null,"Input"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'\u276f ligo compile expression cameligo "C.v" --init-file off_chain.mligo --function-body\n')),(0,o.kt)("p",null,"Output"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"{ UNPAIR ; SWAP ; SIZE ; COMPARE ; EQ }\n"))),(0,o.kt)(a.Z,{syntax:"jsligo",mdxType:"Syntax"},(0,o.kt)("p",null,"Input"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'\u276f ligo compile expression jsligo "C.v" --init-file off_chain.jsligo --function-body\n')),(0,o.kt)("p",null,"Output"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"{ UNPAIR ; SWAP ; SIZE ; COMPARE ; EQ }\n"))),(0,o.kt)("p",null,"Notice that ",(0,o.kt)("inlineCode",{parentName:"p"},"v")," is not a contract entry of ",(0,o.kt)("inlineCode",{parentName:"p"},"C")," (no ",(0,o.kt)("inlineCode",{parentName:"p"},"@entry"),") nor a on-chain view (no ",(0,o.kt)("inlineCode",{parentName:"p"},"@view"),"), it is just a function declared in the context of the contract, which can be used as an off-chain view."))}y.isMDXComponent=!0},23746:(e,t,n)=>{n.r(t),n.d(t,{Prism:()=>r.Z,default:()=>d,defaultProps:()=>i});var r=n(87410);const o={plain:{backgroundColor:"#2a2734",color:"#9a86fd"},styles:[{types:["comment","prolog","doctype","cdata","punctuation"],style:{color:"#6c6783"}},{types:["namespace"],style:{opacity:.7}},{types:["tag","operator","number"],style:{color:"#e09142"}},{types:["property","function"],style:{color:"#9a86fd"}},{types:["tag-id","selector","atrule-id"],style:{color:"#eeebff"}},{types:["attr-name"],style:{color:"#c4b9fe"}},{types:["boolean","string","entity","url","attr-value","keyword","control","directive","unit","statement","regex","atrule","placeholder","variable"],style:{color:"#ffcc99"}},{types:["deleted"],style:{textDecorationLine:"line-through"}},{types:["inserted"],style:{textDecorationLine:"underline"}},{types:["italic"],style:{fontStyle:"italic"}},{types:["important","bold"],style:{fontWeight:"bold"}},{types:["important"],style:{color:"#c4b9fe"}}]};var a=n(67294),i={Prism:r.Z,theme:o};function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(){return l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},l.apply(this,arguments)}var c=/\r\n|\r|\n/,p=function(e){0===e.length?e.push({types:["plain"],content:"\n",empty:!0}):1===e.length&&""===e[0].content&&(e[0].content="\n",e[0].empty=!0)},g=function(e,t){var n=e.length;return n>0&&e[n-1]===t?e:e.concat(t)},u=function(e,t){var n=e.plain,r=Object.create(null),o=e.styles.reduce((function(e,n){var r=n.languages,o=n.style;return r&&!r.includes(t)||n.types.forEach((function(t){var n=l({},e[t],o);e[t]=n})),e}),r);return o.root=n,o.plain=l({},n,{backgroundColor:null}),o};function y(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&-1===t.indexOf(r)&&(n[r]=e[r]);return n}const d=function(e){function t(){for(var t=this,n=[],r=arguments.length;r--;)n[r]=arguments[r];e.apply(this,n),s(this,"getThemeDict",(function(e){if(void 0!==t.themeDict&&e.theme===t.prevTheme&&e.language===t.prevLanguage)return t.themeDict;t.prevTheme=e.theme,t.prevLanguage=e.language;var n=e.theme?u(e.theme,e.language):void 0;return t.themeDict=n})),s(this,"getLineProps",(function(e){var n=e.key,r=e.className,o=e.style,a=l({},y(e,["key","className","style","line"]),{className:"token-line",style:void 0,key:void 0}),i=t.getThemeDict(t.props);return void 0!==i&&(a.style=i.plain),void 0!==o&&(a.style=void 0!==a.style?l({},a.style,o):o),void 0!==n&&(a.key=n),r&&(a.className+=" "+r),a})),s(this,"getStyleForToken",(function(e){var n=e.types,r=e.empty,o=n.length,a=t.getThemeDict(t.props);if(void 0!==a){if(1===o&&"plain"===n[0])return r?{display:"inline-block"}:void 0;if(1===o&&!r)return a[n[0]];var i=r?{display:"inline-block"}:{},s=n.map((function(e){return a[e]}));return Object.assign.apply(Object,[i].concat(s))}})),s(this,"getTokenProps",(function(e){var n=e.key,r=e.className,o=e.style,a=e.token,i=l({},y(e,["key","className","style","token"]),{className:"token "+a.types.join(" "),children:a.content,style:t.getStyleForToken(a),key:void 0});return void 0!==o&&(i.style=void 0!==i.style?l({},i.style,o):o),void 0!==n&&(i.key=n),r&&(i.className+=" "+r),i})),s(this,"tokenize",(function(e,t,n,r){var o={code:t,grammar:n,language:r,tokens:[]};e.hooks.run("before-tokenize",o);var a=o.tokens=e.tokenize(o.code,o.grammar,o.language);return e.hooks.run("after-tokenize",o),a}))}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.render=function(){var e=this.props,t=e.Prism,n=e.language,r=e.code,o=e.children,a=this.getThemeDict(this.props),i=t.languages[n];return o({tokens:function(e){for(var t=[[]],n=[e],r=[0],o=[e.length],a=0,i=0,s=[],l=[s];i>-1;){for(;(a=r[i]++)<o[i];){var u=void 0,y=t[i],d=n[i][a];if("string"==typeof d?(y=i>0?y:["plain"],u=d):(y=g(y,d.type),d.alias&&(y=g(y,d.alias)),u=d.content),"string"==typeof u){var m=u.split(c),f=m.length;s.push({types:y,content:m[0]});for(var v=1;v<f;v++)p(s),l.push(s=[]),s.push({types:y,content:m[v]})}else i++,t.push(y),n.push(u),r.push(0),o.push(u.length)}i--,t.pop(),n.pop(),r.pop(),o.pop()}return p(s),l}(void 0!==i?this.tokenize(t,r,i,n):[r]),className:"prism-code language-"+n,style:void 0!==a?a.root:{},getLineProps:this.getLineProps,getTokenProps:this.getTokenProps})},t}(a.Component)},87552:(e,t,n)=>{n.d(t,{Z:()=>r});const r={plain:{color:"#bfc7d5",backgroundColor:"#292d3e"},styles:[{types:["comment"],style:{color:"rgb(105, 112, 152)",fontStyle:"italic"}},{types:["string","inserted"],style:{color:"rgb(195, 232, 141)"}},{types:["number"],style:{color:"rgb(247, 140, 108)"}},{types:["builtin","char","constant","function"],style:{color:"rgb(130, 170, 255)"}},{types:["punctuation","selector"],style:{color:"rgb(199, 146, 234)"}},{types:["variable"],style:{color:"rgb(191, 199, 213)"}},{types:["class-name","attr-name"],style:{color:"rgb(255, 203, 107)"}},{types:["tag","deleted"],style:{color:"rgb(255, 85, 114)"}},{types:["operator"],style:{color:"rgb(137, 221, 255)"}},{types:["boolean"],style:{color:"rgb(255, 88, 116)"}},{types:["keyword"],style:{fontStyle:"italic"}},{types:["doctype"],style:{color:"rgb(199, 146, 234)",fontStyle:"italic"}},{types:["namespace"],style:{color:"rgb(178, 204, 214)"}},{types:["url"],style:{color:"rgb(221, 221, 221)"}}]}}}]);