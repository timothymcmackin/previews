"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[39359],{3905:(n,e,t)=>{t.d(e,{Zo:()=>u,kt:()=>f});var i=t(67294);function r(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function o(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,i)}return t}function a(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach((function(e){r(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function l(n,e){if(null==n)return{};var t,i,r=function(n,e){if(null==n)return{};var t,i,r={},o=Object.keys(n);for(i=0;i<o.length;i++)t=o[i],e.indexOf(t)>=0||(r[t]=n[t]);return r}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(i=0;i<o.length;i++)t=o[i],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(r[t]=n[t])}return r}var s=i.createContext({}),c=function(n){var e=i.useContext(s),t=e;return n&&(t="function"==typeof n?n(e):a(a({},e),n)),t},u=function(n){var e=c(n.components);return i.createElement(s.Provider,{value:e},n.children)},p={inlineCode:"code",wrapper:function(n){var e=n.children;return i.createElement(i.Fragment,{},e)}},d=i.forwardRef((function(n,e){var t=n.components,r=n.mdxType,o=n.originalType,s=n.parentName,u=l(n,["components","mdxType","originalType","parentName"]),d=c(t),f=r,g=d["".concat(s,".").concat(f)]||d[f]||p[f]||o;return t?i.createElement(g,a(a({ref:e},u),{},{components:t})):i.createElement(g,a({ref:e},u))}));function f(n,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof n||r){var o=t.length,a=new Array(o);a[0]=d;var l={};for(var s in e)hasOwnProperty.call(e,s)&&(l[s]=e[s]);l.originalType=n,l.mdxType="string"==typeof n?n:r,a[1]=l;for(var c=2;c<o;c++)a[c]=t[c];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}d.displayName="MDXCreateElement"},48720:(n,e,t)=>{t.d(e,{D:()=>r.Z,Z:()=>o});var i=t(67294),r=t(75402);const o=function(n){return i.createElement(r.Z.Consumer,null,(e=>{let{syntax:t}=e;return t===n.syntax?n.children:i.createElement(i.Fragment,null)}))}},11449:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var i=t(87462),r=(t(67294),t(3905)),o=t(48720);const a={id:"inlining",title:"Inlining"},l=void 0,s={unversionedId:"functions/inlining",id:"version-1.6.0/functions/inlining",title:"Inlining",description:"When compiling a contract in LIGO, declarations will get inlined if",source:"@site/versioned_docs/version-1.6.0/functions/inlining.md",sourceDirName:"functions",slug:"/functions/inlining",permalink:"/previews/ligo/tacoshop/docs/1.6.0/functions/inlining",draft:!1,tags:[],version:"1.6.0",frontMatter:{id:"inlining",title:"Inlining"},sidebar:"docs",previous:{title:"Higher-order",permalink:"/previews/ligo/tacoshop/docs/1.6.0/functions/higher-order"},next:{title:"Recursion",permalink:"/previews/ligo/tacoshop/docs/1.6.0/functions/recursion"}},c={},u=[],p={toc:u};function d(n){let{components:e,...t}=n;return(0,r.kt)("wrapper",(0,i.Z)({},p,t,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"When compiling a contract in LIGO, declarations will get inlined if\nthey are only used once and are pure, that is, devoid of side\neffects."),(0,r.kt)("p",null,"Inlining often results in larger contracts and is therefore not\naggressively done. In some cases, you might want to override the\ndefault behaviour of LIGO and force inlining, as long as the\nexpression considered for inlining is pure, that is, it does not cause\nside effects, like possibly failing or a emitting an operation."),(0,r.kt)(o.Z,{syntax:"cameligo",mdxType:"Syntax"},(0,r.kt)("p",null,"To force inlining you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"[@inline]")," attribute."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cameligo",metastring:"group=inlining",group:"inlining"},"[@inline]\nlet fst (p : nat * nat) = p.0\n\n[@entry]\nlet main (p : nat * nat) (s : nat * nat) : operation list * (nat * nat) =\n  [], (fst (p.0, p.1), fst (s.1, s.0))\n")),(0,r.kt)("p",null,"To measure the difference between inlining and without inlining, let\nus assume that the above code is inside the file ",(0,r.kt)("inlineCode",{parentName:"p"},"inline.mligo")," and\nrun the command: ",(0,r.kt)("inlineCode",{parentName:"p"},"ligo info measure-contract inline.mligo")," with and\nwithout the attribute ",(0,r.kt)("inlineCode",{parentName:"p"},"[@inline]"),". We obtain the following results")),(0,r.kt)(o.Z,{syntax:"jsligo",mdxType:"Syntax"},(0,r.kt)("p",null,"To force inlining you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"@inline")," decorator."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsligo",metastring:"group=inlining",group:"inlining"},"@inline\nconst fst = (p: [nat, nat]) => p[0];\n\n@entry\nconst main = (p: [nat, nat], s: [nat, nat]) : [list<operation>, [nat, nat]] =>\n    [[], [fst([p[0], p[1]]), fst([s[1], s[0]])]];\n")),(0,r.kt)("p",null,"To measure the difference between inlining and without inlining, let\nus assume that the above code is inside the file ",(0,r.kt)("inlineCode",{parentName:"p"},"inline.jsligo")," and\nrun the command: ",(0,r.kt)("inlineCode",{parentName:"p"},"ligo info measure-contract inline.jsligo")," with and\nwithout the decorator ",(0,r.kt)("inlineCode",{parentName:"p"},"@inline"),". We obtain the following results")),(0,r.kt)("table",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"With inlining"),(0,r.kt)("td",null,"46 bytes")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"Without inlining"),(0,r.kt)("td",null,"97 bytes"))),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Note that these results can change due to ongoing work to optimise output of\nthe LIGO compiler.")))}d.isMDXComponent=!0}}]);