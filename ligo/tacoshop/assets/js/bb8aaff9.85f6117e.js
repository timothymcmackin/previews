"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3624],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),l=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=l(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=l(n),d=r,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||i;return n?a.createElement(f,o(o({ref:t},p),{},{components:n})):a.createElement(f,o({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var l=2;l<i;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},48720:(e,t,n)=>{n.d(t,{D:()=>r.Z,Z:()=>i});var a=n(67294),r=n(75402);const i=function(e){return a.createElement(r.Z.Consumer,null,(t=>{let{syntax:n}=t;return n===e.syntax?e.children:a.createElement(a.Fragment,null)}))}},70160:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var a=n(87462),r=(n(67294),n(3905)),i=n(48720);const o={id:"exceptions",title:"Exceptions"},c=void 0,s={unversionedId:"imperative/exceptions",id:"version-1.9.2/imperative/exceptions",title:"Exceptions",description:"On Tezos, exceptions cannot be caught; there is no way to intercept exceptions and trigger alternate behavior.",source:"@site/versioned_docs/version-1.9.2/imperative/exceptions.md",sourceDirName:"imperative",slug:"/imperative/exceptions",permalink:"/previews/ligo/tacoshop/docs/imperative/exceptions",draft:!1,tags:[],version:"1.9.2",frontMatter:{id:"exceptions",title:"Exceptions"},sidebar:"docs",previous:{title:"The switch statement",permalink:"/previews/ligo/tacoshop/docs/imperative/switches"},next:{title:"Modules",permalink:"/previews/ligo/tacoshop/docs/syntax/modules"}},l={},p=[],u={toc:p};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"On Tezos, exceptions cannot be caught; there is no way to intercept exceptions and trigger alternate behavior.\nIf an exception occurs, ",(0,r.kt)("strong",{parentName:"p"},"the entire transaction is backtracked"),".\nIn this case, all of the operations are canceled and any completed operations are reverted, as if the initial call to the contract never happened."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"A transaction starts with a call from a user account (sometimes known as an ",(0,r.kt)("em",{parentName:"p"},"implicit account"),") and includes all subsequent operations, such as tez transfers, contract calls, and contract originations that the initial call triggered."),(0,r.kt)("p",{parentName:"admonition"},"For example, if a user account calls contract A, contract A calls contract B, contract B calls contract C, and contract C raises an exception, all calls are reverted, including the original call to contract A.\nThe storage states of all of these contracts and the balances of all related accounts are set back to their state before the original call, as if that call never happened.")),(0,r.kt)("p",null,"To raise an error, abort the current transaction, and abort all transactions that led to the current transaction, use the ",(0,r.kt)("inlineCode",{parentName:"p"},"failwith")," function."),(0,r.kt)(i.Z,{syntax:"cameligo",mdxType:"Syntax"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cameligo",metastring:"group=failwith",group:"failwith"},'type storage = unit\ntype result = operation list * storage\n\n[@entry]\nlet main (_param : unit) (_store : storage) : result =\n  failwith "This contract always fails."\n')),(0,r.kt)("p",null,"The call to the ",(0,r.kt)("inlineCode",{parentName:"p"},"failwith")," function sometimes needs to be annotated with a type when the type-checker cannot infer the correct type, as in ",(0,r.kt)("inlineCode",{parentName:"p"},'(failwith "message" : result)'),".")),(0,r.kt)(i.Z,{syntax:"jsligo",mdxType:"Syntax"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsligo",metastring:"group=failwith",group:"failwith"},'@entry\nconst main = (p: unit, s: unit) : [list<operation>, unit] =>\n  failwith("This contract always fails");\n')),(0,r.kt)("p",null,"The call to the ",(0,r.kt)("inlineCode",{parentName:"p"},"failwith")," function sometimes needs to be annotated with a type when the type-checker cannot infer the correct type, as in ",(0,r.kt)("inlineCode",{parentName:"p"},'return (failwith("message") : result);'),".")),(0,r.kt)(i.Z,{syntax:"jsligo",mdxType:"Syntax"},(0,r.kt)("p",null,"JsLIGO does not support the JavaScript ",(0,r.kt)("inlineCode",{parentName:"p"},"try/catch")," framework for catching exceptions.")),(0,r.kt)("p",null,"Failed assertions cause exceptions; see ",(0,r.kt)("a",{parentName:"p",href:"./asserting"},"Asserting"),"."))}m.isMDXComponent=!0}}]);