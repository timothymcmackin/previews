"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[41651],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},y={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),d=o,m=u["".concat(s,".").concat(d)]||u[d]||y[d]||r;return n?a.createElement(m,i(i({ref:t},c),{},{components:n})):a.createElement(m,i({ref:t},c))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<r;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},48720:(e,t,n)=>{n.d(t,{D:()=>o.Z,Z:()=>r});var a=n(67294),o=n(75402);const r=function(e){return a.createElement(o.Z.Consumer,null,(t=>{let{syntax:n}=t;return n===e.syntax?e.children:a.createElement(a.Fragment,null)}))}},99191:(e,t,n)=>{n.d(t,{Z:()=>c});var a=n(23746),o=n(67294),r=n(52263),i=n(48720),l=n(87552);function s(){return s=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},s.apply(this,arguments)}const{Prism:p}=n(23746);p.languages={...p.languages,cameligo:{...p.languages.ocaml,comment:[/(^|[^\\])\/\*[\s\S]*?\*\//,/\(\*[\s\S]*?\*\)/,/\/\/.*/]},jsligo:p.languages.typescript};const c=function(e){const{siteConfig:{themeConfig:{prism:t={}}}}=(0,r.Z)(),n=t.singleTheme||l.Z,[p,c]=(0,o.useState)(!1);return(0,o.useEffect)((()=>{c(!0)}),[]),o.createElement(i.D.Consumer,null,(t=>{let{syntax:r}=t;return r===e.syntax?o.createElement(a.default,s({},a.defaultProps,{key:p,language:e.syntax,code:e.children,theme:n}),(e=>{let{className:t,tokens:n,getLineProps:a,getTokenProps:r}=e;return o.createElement("h4",{className:t,style:{backgroundColor:"var(--ifm-background-color)",fontFamily:"var(--ifm-font-family-monospace)",lineHeight:"var(--ifm-pre-line-height)",fontSize:"1.1rem",fontWeight:"bold",padding:0,whiteSpace:"break-spaces",marginTop:"3rem"}},n.map(((e,t)=>o.createElement("div",a({line:e,key:t}),e.map(((e,t)=>o.createElement("span",r({token:e,key:t}))))))))})):o.createElement("div",null)}))}},5031:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>l,metadata:()=>p,toc:()=>y});var a=n(87462),o=(n(67294),n(3905)),r=n(48720),i=n(99191);const l={id:"bytes-reference",title:"bytes",hide_table_of_contents:!0},s=void 0,p={unversionedId:"reference/bytes-reference",id:"version-1.5.0/reference/bytes-reference",title:"bytes",description:"Sequences of bytes",source:"@site/versioned_docs/version-1.5.0/reference/bytes.md",sourceDirName:"reference",slug:"/reference/bytes-reference",permalink:"/previews/ligo/tacoshop/docs/1.5.0/reference/bytes-reference",draft:!1,tags:[],version:"1.5.0",frontMatter:{id:"bytes-reference",title:"bytes",hide_table_of_contents:!0},sidebar:"API",next:{title:"toplevel",permalink:"/previews/ligo/tacoshop/docs/1.5.0/reference/toplevel-reference"}},c={},y=[],u={toc:y};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Sequences of bytes"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Bytes are used for serializing data, in order to check signatures\nand compute hashes on them. They can also be used to read untyped\ndata from outside of the contract.\n")),(0,o.kt)(i.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"val length : bytes -> nat"),(0,o.kt)(i.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"let length: (_: bytes) => nat"),(0,o.kt)(r.Z,{syntax:"cameligo",mdxType:"Syntax"},(0,o.kt)("p",null,"The call ",(0,o.kt)("inlineCode",{parentName:"p"},"length b")," is the number of bytes in the sequence of\nbytes ",(0,o.kt)("inlineCode",{parentName:"p"},"b"),". Note: ",(0,o.kt)("inlineCode",{parentName:"p"},"Bytes.length")," is another name for\n",(0,o.kt)("inlineCode",{parentName:"p"},"Bytes.size"),".")),(0,o.kt)(r.Z,{syntax:"jsligo",mdxType:"Syntax"},(0,o.kt)("p",null,"The call ",(0,o.kt)("inlineCode",{parentName:"p"},"length(b)")," is the number of bytes in the sequence of\nbytes ",(0,o.kt)("inlineCode",{parentName:"p"},"b"),". Note: ",(0,o.kt)("inlineCode",{parentName:"p"},"Bytes.length")," is another name for\n",(0,o.kt)("inlineCode",{parentName:"p"},"Bytes.size"),".")),(0,o.kt)(i.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"val size : bytes -> nat"),(0,o.kt)(i.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"let size: (_: bytes) => nat"),(0,o.kt)(r.Z,{syntax:"cameligo",mdxType:"Syntax"},(0,o.kt)("p",null,"The call ",(0,o.kt)("inlineCode",{parentName:"p"},"size b")," is the number of bytes in the sequence of\nbytes ",(0,o.kt)("inlineCode",{parentName:"p"},"b"),".")),(0,o.kt)(r.Z,{syntax:"jsligo",mdxType:"Syntax"},(0,o.kt)("p",null,"The call ",(0,o.kt)("inlineCode",{parentName:"p"},"size(b)")," is the number of bytes in the sequence of\nbytes ",(0,o.kt)("inlineCode",{parentName:"p"},"b"),".")),(0,o.kt)(i.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"val concat : bytes -> bytes -> bytes"),(0,o.kt)(i.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"let concat: (_: bytes) => (_: bytes) => bytes"),(0,o.kt)(r.Z,{syntax:"cameligo",mdxType:"Syntax"},(0,o.kt)("p",null,"The call ",(0,o.kt)("inlineCode",{parentName:"p"},"concat left right")," is the sequence of bytes obtained\nby concatenating the sequence ",(0,o.kt)("inlineCode",{parentName:"p"},"left")," before the sequence\n",(0,o.kt)("inlineCode",{parentName:"p"},"right"),".")),(0,o.kt)(r.Z,{syntax:"jsligo",mdxType:"Syntax"},(0,o.kt)("p",null,"The call ",(0,o.kt)("inlineCode",{parentName:"p"},"concat(left, right)")," is the sequence of bytes obtained\nby concatenating the sequence ",(0,o.kt)("inlineCode",{parentName:"p"},"left")," before the sequence\n",(0,o.kt)("inlineCode",{parentName:"p"},"right"),".")),(0,o.kt)(i.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"val concats : bytes list -> bytes"),(0,o.kt)(i.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"let concats: (_: list<bytes>) => bytes"),(0,o.kt)(r.Z,{syntax:"cameligo",mdxType:"Syntax"},(0,o.kt)("p",null,"The call ",(0,o.kt)("inlineCode",{parentName:"p"},"concats list")," is the concatenation of the byte\nsequences in the list ",(0,o.kt)("inlineCode",{parentName:"p"},"list"),", from left to right.")),(0,o.kt)(r.Z,{syntax:"jsligo",mdxType:"Syntax"},(0,o.kt)("p",null,"The call ",(0,o.kt)("inlineCode",{parentName:"p"},"concats(list)")," is the concatenation of the byte\nsequences in the list ",(0,o.kt)("inlineCode",{parentName:"p"},"list"),", from left to right.")),(0,o.kt)(i.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"val sub : nat -> nat -> bytes -> bytes"),(0,o.kt)(i.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"let sub: (_: nat) => (_: nat) => (_: bytes) => bytes"),(0,o.kt)(r.Z,{syntax:"cameligo",mdxType:"Syntax"},(0,o.kt)("p",null,"The call ",(0,o.kt)("inlineCode",{parentName:"p"},"sub index len bytes")," is the subsequence of bytes\n",(0,o.kt)("inlineCode",{parentName:"p"},"bytes")," starting at index ",(0,o.kt)("inlineCode",{parentName:"p"},"index")," (0 denoting the first byte) and\nof length ",(0,o.kt)("inlineCode",{parentName:"p"},"len"),". If the index or length are invalid, an exception\ninterrupts the execution.")),(0,o.kt)(r.Z,{syntax:"jsligo",mdxType:"Syntax"},(0,o.kt)("p",null,"The call ",(0,o.kt)("inlineCode",{parentName:"p"},"sub(index, len, bytes)")," is the subsequence of bytes\n",(0,o.kt)("inlineCode",{parentName:"p"},"bytes")," starting at index ",(0,o.kt)("inlineCode",{parentName:"p"},"index")," (0 denoting the first byte) and\nof length ",(0,o.kt)("inlineCode",{parentName:"p"},"len"),". If the index or length are invalid, an exception\ninterrupts the execution.")),(0,o.kt)(i.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"val slice : nat -> nat -> bytes -> bytes"),(0,o.kt)(i.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"let slice: (_: nat) => (_: nat) => (_: bytes) => bytes"),(0,o.kt)(r.Z,{syntax:"cameligo",mdxType:"Syntax"},(0,o.kt)("p",null,"The call ",(0,o.kt)("inlineCode",{parentName:"p"},"slice index len bytes")," is the subsequence of bytes\n",(0,o.kt)("inlineCode",{parentName:"p"},"bytes")," starting at index ",(0,o.kt)("inlineCode",{parentName:"p"},"index")," (0 denoting the first byte) and\nof length ",(0,o.kt)("inlineCode",{parentName:"p"},"len"),". If the index or length are invalid, an exception\ninterrupts the execution.")),(0,o.kt)(r.Z,{syntax:"jsligo",mdxType:"Syntax"},(0,o.kt)("p",null,"The call ",(0,o.kt)("inlineCode",{parentName:"p"},"slice(index, len, bytes)")," is the subsequence of bytes\n",(0,o.kt)("inlineCode",{parentName:"p"},"bytes")," starting at index ",(0,o.kt)("inlineCode",{parentName:"p"},"index")," (0 denoting the first byte) and\nof length ",(0,o.kt)("inlineCode",{parentName:"p"},"len"),". If the index or length are invalid, an exception\ninterrupts the execution.")),(0,o.kt)(i.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"val pack : 'a.'a -> bytes"),(0,o.kt)(i.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"let pack: <a>(_: a) => bytes"),(0,o.kt)(r.Z,{syntax:"cameligo",mdxType:"Syntax"},(0,o.kt)("p",null,"The call ",(0,o.kt)("inlineCode",{parentName:"p"},"pack v")," transforms the value ",(0,o.kt)("inlineCode",{parentName:"p"},"v")," into a sequence of\nbytes.")),(0,o.kt)(r.Z,{syntax:"jsligo",mdxType:"Syntax"},(0,o.kt)("p",null,"The call ",(0,o.kt)("inlineCode",{parentName:"p"},"pack(v)")," transforms the value ",(0,o.kt)("inlineCode",{parentName:"p"},"v")," into a sequence of\nbytes.")),(0,o.kt)(i.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"val unpack : 'a.bytes -> 'a option"),(0,o.kt)(i.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"let unpack: <a>(_: bytes) => option<a>"),(0,o.kt)(r.Z,{syntax:"cameligo",mdxType:"Syntax"},(0,o.kt)("p",null,"The call ",(0,o.kt)("inlineCode",{parentName:"p"},"unpack bytes")," is ",(0,o.kt)("inlineCode",{parentName:"p"},"Some v")," if the sequence of bytes\n",(0,o.kt)("inlineCode",{parentName:"p"},"bytes")," decodes into a valid LIGO value ",(0,o.kt)("inlineCode",{parentName:"p"},"v"),"; otherwise ",(0,o.kt)("inlineCode",{parentName:"p"},"None"),".")),(0,o.kt)(r.Z,{syntax:"jsligo",mdxType:"Syntax"},(0,o.kt)("p",null,"The call ",(0,o.kt)("inlineCode",{parentName:"p"},"unpack(bytes)")," is ",(0,o.kt)("inlineCode",{parentName:"p"},"Some(v)")," if the sequence of bytes\n",(0,o.kt)("inlineCode",{parentName:"p"},"bytes")," decodes into a valid LIGO value ",(0,o.kt)("inlineCode",{parentName:"p"},"v"),"; otherwise\n",(0,o.kt)("inlineCode",{parentName:"p"},"None()"),".")))}d.isMDXComponent=!0},23746:(e,t,n)=>{n.r(t),n.d(t,{Prism:()=>a.Z,default:()=>m,defaultProps:()=>i});var a=n(87410);const o={plain:{backgroundColor:"#2a2734",color:"#9a86fd"},styles:[{types:["comment","prolog","doctype","cdata","punctuation"],style:{color:"#6c6783"}},{types:["namespace"],style:{opacity:.7}},{types:["tag","operator","number"],style:{color:"#e09142"}},{types:["property","function"],style:{color:"#9a86fd"}},{types:["tag-id","selector","atrule-id"],style:{color:"#eeebff"}},{types:["attr-name"],style:{color:"#c4b9fe"}},{types:["boolean","string","entity","url","attr-value","keyword","control","directive","unit","statement","regex","atrule","placeholder","variable"],style:{color:"#ffcc99"}},{types:["deleted"],style:{textDecorationLine:"line-through"}},{types:["inserted"],style:{textDecorationLine:"underline"}},{types:["italic"],style:{fontStyle:"italic"}},{types:["important","bold"],style:{fontWeight:"bold"}},{types:["important"],style:{color:"#c4b9fe"}}]};var r=n(67294),i={Prism:a.Z,theme:o};function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(){return s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},s.apply(this,arguments)}var p=/\r\n|\r|\n/,c=function(e){0===e.length?e.push({types:["plain"],content:"\n",empty:!0}):1===e.length&&""===e[0].content&&(e[0].content="\n",e[0].empty=!0)},y=function(e,t){var n=e.length;return n>0&&e[n-1]===t?e:e.concat(t)},u=function(e,t){var n=e.plain,a=Object.create(null),o=e.styles.reduce((function(e,n){var a=n.languages,o=n.style;return a&&!a.includes(t)||n.types.forEach((function(t){var n=s({},e[t],o);e[t]=n})),e}),a);return o.root=n,o.plain=s({},n,{backgroundColor:null}),o};function d(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&-1===t.indexOf(a)&&(n[a]=e[a]);return n}const m=function(e){function t(){for(var t=this,n=[],a=arguments.length;a--;)n[a]=arguments[a];e.apply(this,n),l(this,"getThemeDict",(function(e){if(void 0!==t.themeDict&&e.theme===t.prevTheme&&e.language===t.prevLanguage)return t.themeDict;t.prevTheme=e.theme,t.prevLanguage=e.language;var n=e.theme?u(e.theme,e.language):void 0;return t.themeDict=n})),l(this,"getLineProps",(function(e){var n=e.key,a=e.className,o=e.style,r=s({},d(e,["key","className","style","line"]),{className:"token-line",style:void 0,key:void 0}),i=t.getThemeDict(t.props);return void 0!==i&&(r.style=i.plain),void 0!==o&&(r.style=void 0!==r.style?s({},r.style,o):o),void 0!==n&&(r.key=n),a&&(r.className+=" "+a),r})),l(this,"getStyleForToken",(function(e){var n=e.types,a=e.empty,o=n.length,r=t.getThemeDict(t.props);if(void 0!==r){if(1===o&&"plain"===n[0])return a?{display:"inline-block"}:void 0;if(1===o&&!a)return r[n[0]];var i=a?{display:"inline-block"}:{},l=n.map((function(e){return r[e]}));return Object.assign.apply(Object,[i].concat(l))}})),l(this,"getTokenProps",(function(e){var n=e.key,a=e.className,o=e.style,r=e.token,i=s({},d(e,["key","className","style","token"]),{className:"token "+r.types.join(" "),children:r.content,style:t.getStyleForToken(r),key:void 0});return void 0!==o&&(i.style=void 0!==i.style?s({},i.style,o):o),void 0!==n&&(i.key=n),a&&(i.className+=" "+a),i})),l(this,"tokenize",(function(e,t,n,a){var o={code:t,grammar:n,language:a,tokens:[]};e.hooks.run("before-tokenize",o);var r=o.tokens=e.tokenize(o.code,o.grammar,o.language);return e.hooks.run("after-tokenize",o),r}))}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.render=function(){var e=this.props,t=e.Prism,n=e.language,a=e.code,o=e.children,r=this.getThemeDict(this.props),i=t.languages[n];return o({tokens:function(e){for(var t=[[]],n=[e],a=[0],o=[e.length],r=0,i=0,l=[],s=[l];i>-1;){for(;(r=a[i]++)<o[i];){var u=void 0,d=t[i],m=n[i][r];if("string"==typeof m?(d=i>0?d:["plain"],u=m):(d=y(d,m.type),m.alias&&(d=y(d,m.alias)),u=m.content),"string"==typeof u){var f=u.split(p),g=f.length;l.push({types:d,content:f[0]});for(var b=1;b<g;b++)c(l),s.push(l=[]),l.push({types:d,content:f[b]})}else i++,t.push(d),n.push(u),a.push(0),o.push(u.length)}i--,t.pop(),n.pop(),a.pop(),o.pop()}return c(l),s}(void 0!==i?this.tokenize(t,a,i,n):[a]),className:"prism-code language-"+n,style:void 0!==r?r.root:{},getLineProps:this.getLineProps,getTokenProps:this.getTokenProps})},t}(r.Component)},87552:(e,t,n)=>{n.d(t,{Z:()=>a});const a={plain:{color:"#bfc7d5",backgroundColor:"#292d3e"},styles:[{types:["comment"],style:{color:"rgb(105, 112, 152)",fontStyle:"italic"}},{types:["string","inserted"],style:{color:"rgb(195, 232, 141)"}},{types:["number"],style:{color:"rgb(247, 140, 108)"}},{types:["builtin","char","constant","function"],style:{color:"rgb(130, 170, 255)"}},{types:["punctuation","selector"],style:{color:"rgb(199, 146, 234)"}},{types:["variable"],style:{color:"rgb(191, 199, 213)"}},{types:["class-name","attr-name"],style:{color:"rgb(255, 203, 107)"}},{types:["tag","deleted"],style:{color:"rgb(255, 85, 114)"}},{types:["operator"],style:{color:"rgb(137, 221, 255)"}},{types:["boolean"],style:{color:"rgb(255, 88, 116)"}},{types:["keyword"],style:{fontStyle:"italic"}},{types:["doctype"],style:{color:"rgb(199, 146, 234)",fontStyle:"italic"}},{types:["namespace"],style:{color:"rgb(178, 204, 214)"}},{types:["url"],style:{color:"rgb(221, 221, 221)"}}]}}}]);