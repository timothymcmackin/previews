"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8006],{3905:(t,e,n)=>{n.d(e,{Zo:()=>d,kt:()=>h});var a=n(67294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function s(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function c(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},o=Object.keys(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var i=a.createContext({}),l=function(t){var e=a.useContext(i),n=e;return t&&(n="function"==typeof t?t(e):s(s({},e),t)),n},d=function(t){var e=l(t.components);return a.createElement(i.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},u=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,o=t.originalType,i=t.parentName,d=c(t,["components","mdxType","originalType","parentName"]),u=l(n),h=r,m=u["".concat(i,".").concat(h)]||u[h]||p[h]||o;return n?a.createElement(m,s(s({ref:e},d),{},{components:n})):a.createElement(m,s({ref:e},d))}));function h(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=n.length,s=new Array(o);s[0]=u;var c={};for(var i in e)hasOwnProperty.call(e,i)&&(c[i]=e[i]);c.originalType=t,c.mdxType="string"==typeof t?t:r,s[1]=c;for(var l=2;l<o;l++)s[l]=n[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},48720:(t,e,n)=>{n.d(e,{D:()=>r.Z,Z:()=>o});var a=n(67294),r=n(75402);const o=function(t){return a.createElement(r.Z.Consumer,null,(e=>{let{syntax:n}=e;return n===t.syntax?t.children:a.createElement(a.Fragment,null)}))}},33807:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>d});var a=n(87462),r=(n(67294),n(3905)),o=n(48720);const s={id:"contracts",title:"Contracts"},c=void 0,i={unversionedId:"syntax/contracts/contracts",id:"syntax/contracts/contracts",title:"Contracts",description:"Smart contracts are programs that run on a blockchain.",source:"@site/../docs/syntax/contracts/contracts.md",sourceDirName:"syntax/contracts",slug:"/syntax/contracts/",permalink:"/previews/ligo/tacoshop/docs/next/syntax/contracts/",draft:!1,tags:[],version:"current",frontMatter:{id:"contracts",title:"Contracts"},sidebar:"docs",previous:{title:"Modules",permalink:"/previews/ligo/tacoshop/docs/next/syntax/modules"},next:{title:"Entrypoints",permalink:"/previews/ligo/tacoshop/docs/next/syntax/contracts/entrypoints"}},l={},d=[{value:"Components of a contract",id:"components-of-a-contract",level:2},{value:"Account and address",id:"account-and-address",level:3},{value:"Getting a contract&#39;s address",id:"getting-a-contracts-address",level:4},{value:"Storage",id:"storage",level:3},{value:"Metadata",id:"metadata",level:4},{value:"Code",id:"code",level:3}],p={toc:d};function u(t){let{components:e,...n}=t;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Smart contracts are programs that run on a blockchain.\nFor an overview of how smart contracts work on Tezos, see ",(0,r.kt)("a",{parentName:"p",href:"https://docs.tezos.com/smart-contracts"},"An introduction to smart contracts")," on docs.tezos.com.\nFor an example LIGO contract, see ",(0,r.kt)("a",{parentName:"p",href:"../../tutorials/getting-started"},"Quickstart")," or load one of the templates in the ",(0,r.kt)("a",{parentName:"p",href:"https://ide.ligolang.org/"},"Online IDE"),"."),(0,r.kt)("p",null,"For the data type that represents a contract, see ",(0,r.kt)("a",{parentName:"p",href:"../../data-types/contracts-type"},"Contracts"),"."),(0,r.kt)("h2",{id:"components-of-a-contract"},"Components of a contract"),(0,r.kt)("p",null,"A smart contract has three main elements:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Its address: a contract is a kind of account, and can receive and send tez"),(0,r.kt)("li",{parentName:"ul"},"Its storage: data that is dedicated to and can be read and written only by the contract"),(0,r.kt)("li",{parentName:"ul"},"Its code: one or more entrypoints, which are a kind of function that can be called either from outside the chain or from other contracts")),(0,r.kt)("h3",{id:"account-and-address"},"Account and address"),(0,r.kt)("p",null,"Originated (deployed) smart contracts are assigned an account address.\nJust like user accounts, the smart contract can accept tez sent to its account and store it.\nIts code can send the tez to other accounts.\nContracts can also delegate their tez to other accounts just like user accounts can."),(0,r.kt)("p",null,"In most cases, contracts have addresses that start with ",(0,r.kt)("inlineCode",{parentName:"p"},"KT1"),".\nHowever, they can also be tied to an implicit account and have an address that starts with ",(0,r.kt)("inlineCode",{parentName:"p"},"kt1"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"kt2")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"kt3"),", ",(0,r.kt)("a",{parentName:"p",href:"https://tezos.gitlab.io/michelson-reference/#type-address"},"depending on the hashing function"),"."),(0,r.kt)("h4",{id:"getting-a-contracts-address"},"Getting a contract's address"),(0,r.kt)("p",null,"The function ",(0,r.kt)("inlineCode",{parentName:"p"},"Tezos.get_self_address")," returns the address of the currently running contract."),(0,r.kt)("p",null,"This function can be misleading because it returns the address of the contract ",(0,r.kt)("em",{parentName:"p"},"executing the code"),", which in rare cases can be different from the address of the contract in which the code is written.\nFor example, it's possible for one contract to run a lambda that is contained in another contract; in this case, the function returns the address of the contract that is running the lambda, not the contract that contains the lambda."),(0,r.kt)(o.Z,{syntax:"cameligo",mdxType:"Syntax"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cameligo",metastring:"group=address",group:"address"},"let current_addr : address = Tezos.get_self_address ()\n"))),(0,r.kt)(o.Z,{syntax:"jsligo",mdxType:"Syntax"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsligo",metastring:"group=address",group:"address"},"const current_addr: address = Tezos.get_self_address();\n"))),(0,r.kt)("p",null,"To get the address of the contract that contains the currently running code, use the function ",(0,r.kt)("inlineCode",{parentName:"p"},"Tezos.self(entrypoint)"),".\nThis function returns the address of the contract that contains the code even if another contract is currently executing that code."),(0,r.kt)("p",null,"The string ",(0,r.kt)("inlineCode",{parentName:"p"},"entrypoint")," is the name of a valid entrypoint such that ",(0,r.kt)("inlineCode",{parentName:"p"},"entrypoint")," is not ",(0,r.kt)("inlineCode",{parentName:"p"},'"%default"'),", or the empty string denoting the ",(0,r.kt)("inlineCode",{parentName:"p"},'"%default"')," entrypoint (which is the root of the smart contract parameter if no ",(0,r.kt)("inlineCode",{parentName:"p"},'"%default"')," entrypoint is explicitly defined).\nIf the contract does not have the specified entrypoint, the call results in an type checking error."),(0,r.kt)("p",null,"Naming convention: if you are using entrypoints, use ",(0,r.kt)("inlineCode",{parentName:"p"},'"%bar"')," to\ndenote the constructor ",(0,r.kt)("inlineCode",{parentName:"p"},'"Bar"')," of the parameter, in turn corresponding\nto the entrypoint function ",(0,r.kt)("inlineCode",{parentName:"p"},"bar"),". If you are not using entrypoints:\nuse ",(0,r.kt)("inlineCode",{parentName:"p"},'"%default"'),"."),(0,r.kt)(o.Z,{syntax:"cameligo",mdxType:"Syntax"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cameligo",metastring:"group=self",group:"self"},'let check () = Tezos.self("%default")\n'))),(0,r.kt)(o.Z,{syntax:"jsligo",mdxType:"Syntax"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsligo",metastring:"group=self",group:"self"},'const check = () => Tezos.self("%default");\n'))),(0,r.kt)("h3",{id:"storage"},"Storage"),(0,r.kt)("p",null,"Smart contracts have persistent storage.\nThe originator of the contract sets the initial value of the storage.\nAfter it is originated, only the contract itself can change the storage."),(0,r.kt)("p",null,"Contract storage is publicly readable by users outside the chain.\nHowever, a contract can see only its own storage, not the storage of any other contracts."),(0,r.kt)("h4",{id:"metadata"},"Metadata"),(0,r.kt)("p",null,"Contracts often store metadata that provides descriptive information about them to wallets, explorers, dApps, and other off-chain applications.\nContract metadata is stored off-chain and therefore on-chain applications including smart contracts cannot access it.\nTo store data off-chain in a decentralized way, many Tezos developers use ",(0,r.kt)("a",{parentName:"p",href:"https://ipfs.tech/"},"IPFS"),"."),(0,r.kt)("p",null,"The primary Tezos standard for metadata is\n",(0,r.kt)("a",{parentName:"p",href:"https://gitlab.com/tezos/tzip/-/blob/master/proposals/tzip-16/tzip-16.md"},"TZIP-016 (Tezos Metadata Standard)"),"."),(0,r.kt)("p",null,"For more information about metadata, see ",(0,r.kt)("a",{parentName:"p",href:"../../advanced/package-management#adding-package-metadata-ligo-manifest"},"Adding package metadata"),"."),(0,r.kt)("h3",{id:"code"},"Code"),(0,r.kt)("p",null,"The code of a contract is publicly viewable and cannot be changed after the contract is originated (deployed).\nA contract's code can include these elements:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"./entrypoints"},"Entrypoints"),", which are the ways that the contract can be called, similar to a method or function in many programming languages or an endpoint in an API.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"./views"},"Views"),", which are a way for contracts to expose information to other contracts and to off-chain consumers.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Internal functions, which allow you to organize and reuse code."))),(0,r.kt)(o.Z,{syntax:"cameligo",mdxType:"Syntax"},(0,r.kt)("p",null,"For clarity, LIGO developers often store the code of a contract in a single module.\nHowever, LIGO does not require that contract code is in a module, that a module contains a contract, or that only one contract is in a module.")),(0,r.kt)(o.Z,{syntax:"jsligo",mdxType:"Syntax"},(0,r.kt)("p",null,"For clarity, LIGO developers often store the code of a contract in a single namespace.\nHowever, LIGO does not require that contract code is in a namespace, that a namespace contains a contract, or that only one contract is in a namespace.")))}u.isMDXComponent=!0}}]);