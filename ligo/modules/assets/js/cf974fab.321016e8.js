"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[25809],{48720:(e,t,n)=>{n.d(t,{D:()=>r.Z,Z:()=>a});var i=n(67294),r=n(75402);const a=function(e){return i.createElement(r.Z.Consumer,null,(t=>{let{syntax:n}=t;return n===e.syntax?e.children:i.createElement(i.Fragment,null)}))}},99191:(e,t,n)=>{n.d(t,{Z:()=>p});var i=n(43164),r=n(67294),a=n(52263),s=n(48720),o=n(11506);function l(){return l=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},l.apply(this,arguments)}const{Prism:c}=n(43164);c.languages={...c.languages,cameligo:{...c.languages.ocaml,comment:[/(^|[^\\])\/\*[\s\S]*?\*\//,/\(\*[\s\S]*?\*\)/,/\/\/.*/]},jsligo:c.languages.typescript};const p=function(e){const{siteConfig:{themeConfig:{prism:t={}}}}=(0,a.Z)(),n=t.singleTheme||o.Z,[c,p]=(0,r.useState)(!1);return(0,r.useEffect)((()=>{p(!0)}),[]),r.createElement(s.D.Consumer,null,(t=>{let{syntax:a}=t;return a===e.syntax?r.createElement(i.default,l({},i.defaultProps,{key:c,language:e.syntax,code:e.children,theme:n}),(e=>{let{className:t,tokens:n,getLineProps:i,getTokenProps:a}=e;return r.createElement("h4",{className:t,style:{backgroundColor:"var(--ifm-background-color)",fontFamily:"var(--ifm-font-family-monospace)",lineHeight:"var(--ifm-pre-line-height)",fontSize:"1.1rem",fontWeight:"bold",padding:0,whiteSpace:"break-spaces",marginTop:"3rem"}},n.map(((e,t)=>r.createElement("div",i({line:e,key:t}),e.map(((e,t)=>r.createElement("span",a({token:e,key:t}))))))))})):r.createElement("div",null)}))}},61384:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>p});var i=n(87462),r=(n(67294),n(3905)),a=(n(48720),n(99191));const s={id:"test.next.originate-reference",title:"originate",hide_table_of_contents:!0},o=void 0,l={unversionedId:"reference/test.next.originate-reference",id:"version-1.5.0/reference/test.next.originate-reference",title:"originate",description:"type (&#39;p, &#39;s) origination&#95;result = &#123;",source:"@site/versioned_docs/version-1.5.0/reference/test.next.originate.md",sourceDirName:"reference",slug:"/reference/test.next.originate-reference",permalink:"/previews/ligo/modules/docs/1.5.0/reference/test.next.originate-reference",draft:!1,tags:[],version:"1.5.0",frontMatter:{id:"test.next.originate-reference",title:"originate",hide_table_of_contents:!0},sidebar:"API",previous:{title:"timelock",permalink:"/previews/ligo/modules/docs/1.5.0/reference/test.next.timelock-reference"},next:{title:"michelson",permalink:"/previews/ligo/modules/docs/1.5.0/reference/test.next.michelson-reference"}},c={},p=[],m={toc:p};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,i.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(a.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"type ('p, 's) origination_result = { code : ('p, 's) michelson_contract; size : int; taddr : ('p, 's) typed_address }"),(0,r.kt)(a.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"type origination_result<p, s> = { code: michelson_contract<p, s>; size: int; taddr: typed_address<p, s> }"),(0,r.kt)(a.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"val contract : 'p 's.('p, 's) module_contract -> 's -> tez -> ('p, 's) origination_result"),(0,r.kt)(a.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"let contract: <p, s>(_: module_contract<p, s>) => (_: s) => (_: tez) => origination_result<p, s>"),"Originate a contract with an entrypoint function in curried form, initial storage and initial balance.",(0,r.kt)(a.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"val from_file : 'p 's.string -> 's -> tez -> ('p, 's) origination_result"),(0,r.kt)(a.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"let from_file: <p, s>(_: string) => (_: s) => (_: tez) => origination_result<p, s>"),"Originate a contract with a path to the contract file, an entrypoint, and a list of views, together with an initial storage and an initial balance.",(0,r.kt)(a.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"val michelson : 'p 's.('p, 's) michelson_contract -> 's -> tez -> ('p, 's) typed_address"),(0,r.kt)(a.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"let michelson: <p, s>(_: michelson_contract<p, s>) => (_: s) => (_: tez) => typed_address<p, s>"),"Originate a contract with initial storage and initial balance.")}d.isMDXComponent=!0}}]);