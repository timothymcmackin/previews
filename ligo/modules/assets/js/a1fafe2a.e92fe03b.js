"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[46515],{48720:(e,t,n)=>{n.d(t,{D:()=>o.Z,Z:()=>r});var s=n(67294),o=n(75402);const r=function(e){return s.createElement(o.Z.Consumer,null,(t=>{let{syntax:n}=t;return n===e.syntax?e.children:s.createElement(s.Fragment,null)}))}},99191:(e,t,n)=>{n.d(t,{Z:()=>m});var s=n(43164),o=n(67294),r=n(52263),c=n(48720),i=n(11506);function a(){return a=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&(e[s]=n[s])}return e},a.apply(this,arguments)}const{Prism:l}=n(43164);l.languages={...l.languages,cameligo:{...l.languages.ocaml,comment:[/(^|[^\\])\/\*[\s\S]*?\*\//,/\(\*[\s\S]*?\*\)/,/\/\/.*/]},jsligo:l.languages.typescript};const m=function(e){const{siteConfig:{themeConfig:{prism:t={}}}}=(0,r.Z)(),n=t.singleTheme||i.Z,[l,m]=(0,o.useState)(!1);return(0,o.useEffect)((()=>{m(!0)}),[]),o.createElement(c.D.Consumer,null,(t=>{let{syntax:r}=t;return r===e.syntax?o.createElement(s.default,a({},s.defaultProps,{key:l,language:e.syntax,code:e.children,theme:n}),(e=>{let{className:t,tokens:n,getLineProps:s,getTokenProps:r}=e;return o.createElement("h4",{className:t,style:{backgroundColor:"var(--ifm-background-color)",fontFamily:"var(--ifm-font-family-monospace)",lineHeight:"var(--ifm-pre-line-height)",fontSize:"1.1rem",fontWeight:"bold",padding:0,whiteSpace:"break-spaces",marginTop:"3rem"}},n.map(((e,t)=>o.createElement("div",s({line:e,key:t}),e.map(((e,t)=>o.createElement("span",r({token:e,key:t}))))))))})):o.createElement("div",null)}))}},47759:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>f,frontMatter:()=>c,metadata:()=>a,toc:()=>m});var s=n(87462),o=(n(67294),n(3905)),r=(n(48720),n(99191));const c={id:"test.next.michelson.contract-reference",title:"contract",hide_table_of_contents:!0},i=void 0,a={unversionedId:"reference/test.next.michelson.contract-reference",id:"version-1.5.0/reference/test.next.michelson.contract-reference",title:"contract",description:"val compile : &#39;p &#39;s.((&#39;p  &#39;s) -&gt; (operation list  &#39;s)) -&gt; (&#39;p, &#39;s) michelson&#95;contract",source:"@site/versioned_docs/version-1.5.0/reference/test.next.michelson.contract.md",sourceDirName:"reference",slug:"/reference/test.next.michelson.contract-reference",permalink:"/previews/ligo/modules/docs/1.5.0/reference/test.next.michelson.contract-reference",draft:!1,tags:[],version:"1.5.0",frontMatter:{id:"test.next.michelson.contract-reference",title:"contract",hide_table_of_contents:!0},sidebar:"API",previous:{title:"michelson",permalink:"/previews/ligo/modules/docs/1.5.0/reference/test.next.michelson-reference"},next:{title:"account",permalink:"/previews/ligo/modules/docs/1.5.0/reference/test.next.account-reference"}},l={},m=[],p={toc:m};function f(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,s.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(r.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"val compile : 'p 's.(('p * 's) -> (operation list * 's)) -> ('p, 's) michelson_contract"),(0,o.kt)(r.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"let compile: <p, s>(_: (_: [p, s]) => [list<operation>, s]) => michelson_contract<p, s>"),"Compiles a contract from an entrypoint function.",(0,o.kt)(r.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"val compile_with_views : 'p 's.(('p * 's) -> (operation list * 's)) -> 's views -> ('p, 's) michelson_contract"),(0,o.kt)(r.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"let compile_with_views: <p, s>(_: (_: [p, s]) => [list<operation>, s]) => (_: views<s>) => michelson_contract<p, s>"),(0,o.kt)(r.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"val size : 'p 's.('p, 's) michelson_contract -> int"),(0,o.kt)(r.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"let size: <p, s>(_: michelson_contract<p, s>) => int"),"Measures the size of a contract.",(0,o.kt)(r.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"val from_file : 'p 's.string -> ('p, 's) michelson_contract"),(0,o.kt)(r.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"let from_file: <p, s>(_: string) => michelson_contract<p, s>"),"Reads a contract from a `.tz` file.")}f.isMDXComponent=!0}}]);