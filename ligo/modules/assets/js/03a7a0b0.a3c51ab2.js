"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[74201],{48720:(e,t,n)=>{n.d(t,{D:()=>i.Z,Z:()=>r});var a=n(67294),i=n(75402);const r=function(e){return a.createElement(i.Z.Consumer,null,(t=>{let{syntax:n}=t;return n===e.syntax?e.children:a.createElement(a.Fragment,null)}))}},99191:(e,t,n)=>{n.d(t,{Z:()=>c});var a=n(43164),i=n(67294),r=n(52263),o=n(48720),l=n(11506);function s(){return s=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},s.apply(this,arguments)}const{Prism:p}=n(43164);p.languages={...p.languages,cameligo:{...p.languages.ocaml,comment:[/(^|[^\\])\/\*[\s\S]*?\*\//,/\(\*[\s\S]*?\*\)/,/\/\/.*/]},jsligo:p.languages.typescript};const c=function(e){const{siteConfig:{themeConfig:{prism:t={}}}}=(0,r.Z)(),n=t.singleTheme||l.Z,[p,c]=(0,i.useState)(!1);return(0,i.useEffect)((()=>{c(!0)}),[]),i.createElement(o.D.Consumer,null,(t=>{let{syntax:r}=t;return r===e.syntax?i.createElement(a.default,s({},a.defaultProps,{key:p,language:e.syntax,code:e.children,theme:n}),(e=>{let{className:t,tokens:n,getLineProps:a,getTokenProps:r}=e;return i.createElement("h4",{className:t,style:{backgroundColor:"var(--ifm-background-color)",fontFamily:"var(--ifm-font-family-monospace)",lineHeight:"var(--ifm-pre-line-height)",fontSize:"1.1rem",fontWeight:"bold",padding:0,whiteSpace:"break-spaces",marginTop:"3rem"}},n.map(((e,t)=>i.createElement("div",a({line:e,key:t}),e.map(((e,t)=>i.createElement("span",r({token:e,key:t}))))))))})):i.createElement("div",null)}))}},31317:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>k,frontMatter:()=>l,metadata:()=>p,toc:()=>d});var a=n(87462),i=(n(67294),n(3905)),r=n(48720),o=n(99191);const l={id:"tezos.next.ticket-reference",title:"ticket",hide_table_of_contents:!0},s=void 0,p={unversionedId:"reference/tezos.next.ticket-reference",id:"version-1.7.0/reference/tezos.next.ticket-reference",title:"ticket",description:"val create : &#39;a.&#39;a -&gt; nat -&gt; &#39;a ticket option",source:"@site/versioned_docs/version-1.7.0/reference/tezos.next.ticket.md",sourceDirName:"reference",slug:"/reference/tezos.next.ticket-reference",permalink:"/previews/ligo/modules/docs/reference/tezos.next.ticket-reference",draft:!1,tags:[],version:"1.7.0",frontMatter:{id:"tezos.next.ticket-reference",title:"ticket",hide_table_of_contents:!0},sidebar:"API",previous:{title:"operation",permalink:"/previews/ligo/modules/docs/reference/tezos.next.operation-reference"},next:{title:"next",permalink:"/previews/ligo/modules/docs/reference/tezos.next-reference"}},c={},d=[],m={toc:d};function k(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)(o.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"val create : 'a.'a -> nat -> 'a ticket option"),(0,i.kt)(o.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"let create: <a>(_: a) => (_: nat) => option<ticket<a>>"),(0,i.kt)(r.Z,{syntax:"cameligo",mdxType:"Syntax"},(0,i.kt)("p",null,"The call ",(0,i.kt)("inlineCode",{parentName:"p"},"create v a")," creates a ticket with value ",(0,i.kt)("inlineCode",{parentName:"p"},"v")," and\namount ",(0,i.kt)("inlineCode",{parentName:"p"},"a"),". If the creation is a success, the value ",(0,i.kt)("inlineCode",{parentName:"p"},"Some t")," is\nreturned, where ",(0,i.kt)("inlineCode",{parentName:"p"},"t")," is the ticket; otherwise, ",(0,i.kt)("inlineCode",{parentName:"p"},"None")," is the\nresult. Note: Tickets cannot be duplicated.")),(0,i.kt)(r.Z,{syntax:"jsligo",mdxType:"Syntax"},(0,i.kt)("p",null,"The call ",(0,i.kt)("inlineCode",{parentName:"p"},"create(v, a)")," creates a ticket with value ",(0,i.kt)("inlineCode",{parentName:"p"},"v")," and\namount ",(0,i.kt)("inlineCode",{parentName:"p"},"a"),". If the creation is a success, the value ",(0,i.kt)("inlineCode",{parentName:"p"},"Some(t)")," is\nreturned, where ",(0,i.kt)("inlineCode",{parentName:"p"},"t")," is the ticket; otherwise, ",(0,i.kt)("inlineCode",{parentName:"p"},"None()")," is the\nresult. Note: Tickets cannot be duplicated.")),(0,i.kt)(o.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"val split : 'a.'a ticket -> (nat * nat) -> ('a ticket * 'a ticket) option"),(0,i.kt)(o.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"let split: <a>(_: ticket<a>) => (_: [nat, nat]) => option<[ticket<a>, ticket<a>]>"),(0,i.kt)(r.Z,{syntax:"cameligo",mdxType:"Syntax"},(0,i.kt)("p",null,"The call ",(0,i.kt)("inlineCode",{parentName:"p"},"split t (a1, a2)")," results in a pair of tickets\n",(0,i.kt)("inlineCode",{parentName:"p"},"t1")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"t2")," such that the former owns the amount ",(0,i.kt)("inlineCode",{parentName:"p"},"a1")," and the\nlater ",(0,i.kt)("inlineCode",{parentName:"p"},"a2"),". More precisely, the value of the call is\n",(0,i.kt)("inlineCode",{parentName:"p"},"Some (t1, t2)")," because signifying to the callee the failure of\nthe splitting is achieved by returning the value ",(0,i.kt)("inlineCode",{parentName:"p"},"None"),".")),(0,i.kt)(r.Z,{syntax:"jsligo",mdxType:"Syntax"},(0,i.kt)("p",null,"The call ",(0,i.kt)("inlineCode",{parentName:"p"},"split(t, [a1, a2])")," results in a pair of tickets\n",(0,i.kt)("inlineCode",{parentName:"p"},"t1")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"t2")," such that the former owns the amount ",(0,i.kt)("inlineCode",{parentName:"p"},"a1")," and the\nlater ",(0,i.kt)("inlineCode",{parentName:"p"},"a2"),". More precisely, the value of the call is\n",(0,i.kt)("inlineCode",{parentName:"p"},"Some([t1, t2])")," because signifying to the callee the failure of\nthe splitting is achieved by returning the value ",(0,i.kt)("inlineCode",{parentName:"p"},"None()"),".")),(0,i.kt)(o.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"val join : 'a.('a ticket * 'a ticket) -> 'a ticket option"),(0,i.kt)(o.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"let join: <a>(_: [ticket<a>, ticket<a>]) => option<ticket<a>>"),(0,i.kt)(r.Z,{syntax:"cameligo",mdxType:"Syntax"},(0,i.kt)("p",null,"The call ",(0,i.kt)("inlineCode",{parentName:"p"},"join (t1, t2)")," joins the tickets ",(0,i.kt)("inlineCode",{parentName:"p"},"t1")," and\n",(0,i.kt)("inlineCode",{parentName:"p"},"t2"),", which must have the same type of value.")),(0,i.kt)(r.Z,{syntax:"jsligo",mdxType:"Syntax"},(0,i.kt)("p",null,"The call ",(0,i.kt)("inlineCode",{parentName:"p"},"join(t1, t2)")," joins the tickets ",(0,i.kt)("inlineCode",{parentName:"p"},"t1")," and\n",(0,i.kt)("inlineCode",{parentName:"p"},"t2"),", which must have the same type of value.")),(0,i.kt)(o.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"val read : 'a.'a ticket -> (address * 'a * nat * 'a ticket)"),(0,i.kt)(o.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"let read: <a>(_: ticket<a>) => [[address, [a, nat]], ticket<a>]"),(0,i.kt)(r.Z,{syntax:"cameligo",mdxType:"Syntax"},(0,i.kt)("p",null,"The call ",(0,i.kt)("inlineCode",{parentName:"p"},"read t")," returns ",(0,i.kt)("inlineCode",{parentName:"p"},"t")," itself and the contents of\n",(0,i.kt)("inlineCode",{parentName:"p"},"t")," which is a pair ",(0,i.kt)("inlineCode",{parentName:"p"},"(address, (value, amount))"),", where ",(0,i.kt)("inlineCode",{parentName:"p"},"address")," is\nthe address of the smart contract that created it.")),(0,i.kt)(r.Z,{syntax:"jsligo",mdxType:"Syntax"},(0,i.kt)("p",null,"The call ",(0,i.kt)("inlineCode",{parentName:"p"},"read(t)")," returns ",(0,i.kt)("inlineCode",{parentName:"p"},"t")," itself and the contents of\n",(0,i.kt)("inlineCode",{parentName:"p"},"t")," which is a pair ",(0,i.kt)("inlineCode",{parentName:"p"},"[address, [value, amount]]"),", where ",(0,i.kt)("inlineCode",{parentName:"p"},"address")," is\nthe address of the smart contract that created it.")))}k.isMDXComponent=!0}}]);