"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[37174],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),c=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),g=c(n),m=a,y=g["".concat(u,".").concat(m)]||g[m]||l[m]||i;return n?r.createElement(y,s(s({ref:t},p),{},{components:n})):r.createElement(y,s({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,s=new Array(i);s[0]=g;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var c=2;c<i;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},48720:(e,t,n)=>{n.d(t,{D:()=>a.Z,Z:()=>i});var r=n(67294),a=n(75402);const i=function(e){return r.createElement(a.Z.Consumer,null,(t=>{let{syntax:n}=t;return n===e.syntax?e.children:r.createElement(r.Fragment,null)}))}},28777:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>g,frontMatter:()=>s,metadata:()=>u,toc:()=>p});var r=n(87462),a=(n(67294),n(3905)),i=n(48720);const s={id:"signature",title:"Cryptographic Signatures"},o=void 0,u={unversionedId:"tezos/signature",id:"version-1.6.0/tezos/signature",title:"Cryptographic Signatures",description:"The signature type is used for Tezos signatures (edsig,",source:"@site/versioned_docs/version-1.6.0/tezos/signature.md",sourceDirName:"tezos",slug:"/tezos/signature",permalink:"/previews/ligo/modules/docs/1.6.0/tezos/signature",draft:!1,tags:[],version:"1.6.0",frontMatter:{id:"signature",title:"Cryptographic Signatures"},sidebar:"docs",previous:{title:"Hash of Keys",permalink:"/previews/ligo/modules/docs/1.6.0/tezos/hash_key"},next:{title:"Timestamps",permalink:"/previews/ligo/modules/docs/1.6.0/tezos/timestamp/"}},c={},p=[{value:"Checking",id:"checking",level:3}],l={toc:p};function g(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"signature")," type is used for Tezos signatures (edsig,\nspsig). Signatures are created by casting a string. Beware of failure\nif the signature is invalid."),(0,a.kt)("p",null,"Here is how you can define a signature:"),(0,a.kt)(i.Z,{syntax:"cameligo",mdxType:"Syntax"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cameligo",metastring:"group=signature",group:"signature"},'let my_sig : signature =\n   ("edsigthTzJ8X7MPmNeEwybRAvdxS1pupqcM5Mk4uCuyZAe7uEk68YpuGDeViW8wSXMrCi5CwoNgqs8V2w8ayB5dMJzrYCHhD8C7" :\n   signature)\n'))),(0,a.kt)(i.Z,{syntax:"jsligo",mdxType:"Syntax"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsligo",metastring:"group=signature",group:"signature"},'const my_sig: signature =\n"edsigthTzJ8X7MPmNeEwybRAvdxS1pupqcM5Mk4uCuyZAe7uEk68YpuGDeViW8wSXMrCi5CwoNgqs8V2w8ayB5dMJzrYCHhD8C7" as\nsignature;\n'))),(0,a.kt)("h3",{id:"checking"},"Checking"),(0,a.kt)("p",null,"Sometimes a contract will want to check that a message has been signed\nby a particular key. For example, a point-of-sale system might want a\ncustomer to sign a transaction so it can be processed\nasynchronously. You can do this in LIGO using the ",(0,a.kt)("inlineCode",{parentName:"p"},"key")," and\n",(0,a.kt)("inlineCode",{parentName:"p"},"signature")," types."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u26a0\ufe0f There is no way to ",(0,a.kt)("em",{parentName:"p"},"generate")," a signed message in LIGO. This is\nbecause that would require storing a private key on chain, at which\npoint it is not... private anymore.")),(0,a.kt)(i.Z,{syntax:"cameligo",mdxType:"Syntax"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cameligo",metastring:"group=signature",group:"signature"},"let check_signature (pk, signed, msg : key * signature * bytes) : bool =\n  Crypto.check pk signed msg\n"))),(0,a.kt)(i.Z,{syntax:"jsligo",mdxType:"Syntax"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsligo",metastring:"group=signature",group:"signature"},"const check_signature =\n  (pk: key, signed: signature, msg: bytes) =>\n  Crypto.check(pk, signed, msg);\n"))))}g.isMDXComponent=!0}}]);