"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[75744],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,g=d["".concat(s,".").concat(m)]||d[m]||c[m]||i;return n?a.createElement(g,o(o({ref:t},u),{},{components:n})):a.createElement(g,o({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},48720:(e,t,n)=>{n.d(t,{D:()=>r.Z,Z:()=>i});var a=n(67294),r=n(75402);const i=function(e){return a.createElement(r.Z.Consumer,null,(t=>{let{syntax:n}=t;return n===e.syntax?e.children:a.createElement(a.Fragment,null)}))}},8794:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var a=n(87462),r=(n(67294),n(3905)),i=n(48720);const o={id:"updating",title:"Updating"},l=void 0,s={unversionedId:"lists/updating",id:"version-1.5.0/lists/updating",title:"Updating",description:"The function List.update_with enables the replacement of elements of",source:"@site/versioned_docs/version-1.5.0/lists/updating.md",sourceDirName:"lists",slug:"/lists/updating",permalink:"/previews/ligo/modules/docs/1.5.0/lists/updating",draft:!1,tags:[],version:"1.5.0",frontMatter:{id:"updating",title:"Updating"},sidebar:"docs",previous:{title:"Matching",permalink:"/previews/ligo/modules/docs/1.5.0/lists/matching"},next:{title:"Folding",permalink:"/previews/ligo/modules/docs/1.5.0/lists/folding"}},p={},u=[],c={toc:u};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The function ",(0,r.kt)("inlineCode",{parentName:"p"},"List.update_with")," enables the replacement of elements of\na given list according to a boolean function: if the call of that\nfunction on a element is true, then the element is replaced, otherwise\nit remains."),(0,r.kt)(i.Z,{syntax:"cameligo",mdxType:"Syntax"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cameligo",metastring:"group=list_updating",group:"list_updating"},"let nats = [0; 1; 2; 3; 4]\n// evens_zeroed = [0; 1; 0; 3; 0]\nlet evens_zeroed = List.update_with (fun x -> x mod 2 = 0n) 0 nats\n"))),(0,r.kt)(i.Z,{syntax:"jsligo",mdxType:"Syntax"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsligo",metastring:"group=list_updating",group:"list_updating"},"const nats = list([0, 1, 2, 3, 4]);\n// evens_zeroed == list([0, 1, 0, 3, 0])\nconst evens_zeroed = List.update_with(x => x % 2 == 0n, 0, nats);\n"))),(0,r.kt)("p",null,"The function ",(0,r.kt)("inlineCode",{parentName:"p"},"List.update")," enables the selective replacement of\nelements of a given list according to a function that returns an\noptional value, instead of a boolean as ",(0,r.kt)("inlineCode",{parentName:"p"},"List.update_with")," above."),(0,r.kt)(i.Z,{syntax:"cameligo",mdxType:"Syntax"},(0,r.kt)("p",null,"That function takes an element and returns an optional value: if that\nvalue is ",(0,r.kt)("inlineCode",{parentName:"p"},"None"),", then the element is left unchanged, otherwise, if the\nvalue is ",(0,r.kt)("inlineCode",{parentName:"p"},"Some v"),", then the element is replaced in the resulting list\nby ",(0,r.kt)("inlineCode",{parentName:"p"},"v"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cameligo",metastring:"group=list_updating",group:"list_updating"},"let f x = if x mod 2 = 0n then None else Some (x*x)\n// odds = [0; 1; 2; 9; 4]\nlet odds_squared = List.update f nats\n")),(0,r.kt)("p",null,"See predefined\n",(0,r.kt)("a",{parentName:"p",href:"../reference/list-reference/?lang=cameligo"},"module List"),".")),(0,r.kt)(i.Z,{syntax:"jsligo",mdxType:"Syntax"},(0,r.kt)("p",null,"That function takes an element and returns an optional value: if that\nvalue is ",(0,r.kt)("inlineCode",{parentName:"p"},"None()"),", then the element is left unchanged, otherwise, if\nthe value is ",(0,r.kt)("inlineCode",{parentName:"p"},"Some(v)"),", then the element is replaced in the resulting\nlist by ",(0,r.kt)("inlineCode",{parentName:"p"},"v"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsligo",metastring:"group=list_updating",group:"list_updating"},"const f = x => x % 2 == 0n ? None() : Some(x*x);\n// odds == list([0, 1, 2, 9, 4])\nconst odds_squared = List.update(f, nats);\n")),(0,r.kt)("p",null,"See predefined\n",(0,r.kt)("a",{parentName:"p",href:"../reference/list-reference/?lang=jsligo"},"namespace List"),".")))}d.isMDXComponent=!0}}]);