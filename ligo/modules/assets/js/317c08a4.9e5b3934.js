"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[34613],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>f});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=n.createContext({}),d=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},l=function(e){var t=d(e.components);return n.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=d(r),f=o,m=u["".concat(i,".").concat(f)]||u[f]||p[f]||a;return r?n.createElement(m,c(c({ref:t},l),{},{components:r})):n.createElement(m,c({ref:t},l))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,c=new Array(a);c[0]=u;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:o,c[1]=s;for(var d=2;d<a;d++)c[d]=r[d];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},48720:(e,t,r)=>{r.d(t,{D:()=>o.Z,Z:()=>a});var n=r(67294),o=r(75402);const a=function(e){return n.createElement(o.Z.Consumer,null,(t=>{let{syntax:r}=t;return r===e.syntax?e.children:n.createElement(n.Fragment,null)}))}},1088:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>u,frontMatter:()=>c,metadata:()=>i,toc:()=>l});var n=r(87462),o=(r(67294),r(3905)),a=r(48720);const c={id:"convert-address-to-contract",title:"How to convert an address to a contract in LIGO testing framework ?"},s=void 0,i={unversionedId:"faq/convert-address-to-contract",id:"version-1.7.0/faq/convert-address-to-contract",title:"How to convert an address to a contract in LIGO testing framework ?",description:"In the context of testing framework,",source:"@site/versioned_docs/version-1.7.0/faq/addr-to-contract.md",sourceDirName:"faq",slug:"/faq/convert-address-to-contract",permalink:"/previews/ligo/modules/docs/faq/convert-address-to-contract",draft:!1,tags:[],version:"1.7.0",frontMatter:{id:"convert-address-to-contract",title:"How to convert an address to a contract in LIGO testing framework ?"},sidebar:"faq",previous:{title:"Frequently Asked Questions (FAQ)",permalink:"/previews/ligo/modules/docs/faq/intro"},next:{title:"How to write a polymorphic comparison function ?",permalink:"/previews/ligo/modules/docs/faq/polymorphic-comparison"}},d={},l=[],p={toc:l};function u(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"In the context of testing framework,\nif you want to convert an address to a contract,\nyou need to convert ",(0,o.kt)("inlineCode",{parentName:"p"},"address")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"typed_address")," using ",(0,o.kt)("inlineCode",{parentName:"p"},"Test.cast_address"),"."),(0,o.kt)("p",null,"Then convert ",(0,o.kt)("inlineCode",{parentName:"p"},"typed_address")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"contract")," using\n",(0,o.kt)("inlineCode",{parentName:"p"},"Test.to_contract"),". For example:"),(0,o.kt)(a.Z,{syntax:"cameligo",mdxType:"Syntax"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cameligo",metastring:"test-ligo group=addr2contract","test-ligo":!0,group:"addr2contract"},'let test =\n  let addr : address = "tz1KqTpEZ7Yob7QbPE4Hy4Wo8fHG8LhKxZSx" in\n  let taddr : (unit, unit) typed_address = Test.cast_address addr in\n  let contract : (unit) contract = Test.to_contract taddr in\n  contract\n'))),(0,o.kt)(a.Z,{syntax:"jsligo",mdxType:"Syntax"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsligo",metastring:"test-ligo group=addr2contract","test-ligo":!0,group:"addr2contract"},'const test = do {\n  const addr : address = "tz1KqTpEZ7Yob7QbPE4Hy4Wo8fHG8LhKxZSx";\n  const taddr : typed_address<unit,unit> = Test.cast_address(addr);\n  const contract : contract<unit> = Test.to_contract(taddr);\n  return contract;\n};\n'))),(0,o.kt)("p",null,"Check out the reference of the ",(0,o.kt)("inlineCode",{parentName:"p"},"Test")," framework for exact signature of the functions ",(0,o.kt)("a",{parentName:"p",href:"/previews/ligo/modules/docs/reference/test-reference"},"here"),"."))}u.isMDXComponent=!0}}]);