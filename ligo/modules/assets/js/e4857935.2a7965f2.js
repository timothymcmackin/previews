"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[58502],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,g=d["".concat(s,".").concat(m)]||d[m]||p[m]||o;return n?a.createElement(g,l(l({ref:t},u),{},{components:n})):a.createElement(g,l({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},52285:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const o={id:"documentation-and-releases",title:"Documentation and releases"},l=void 0,i={unversionedId:"contributors/documentation-and-releases",id:"version-1.7.0/contributors/documentation-and-releases",title:"Documentation and releases",description:"Documentation",source:"@site/versioned_docs/version-1.7.0/contributors/documentation-and-releases.md",sourceDirName:"contributors",slug:"/contributors/documentation-and-releases",permalink:"/previews/ligo/modules/docs/contributors/documentation-and-releases",draft:!1,tags:[],version:"1.7.0",frontMatter:{id:"documentation-and-releases",title:"Documentation and releases"}},s={},c=[{value:"Documentation",id:"documentation",level:2},{value:"Submitting your changes",id:"submitting-your-changes",level:2},{value:"Changelog",id:"changelog",level:3},{value:"Releases &amp; versioning",id:"releases--versioning",level:2},{value:"Development releases (next)",id:"development-releases-next",level:3},{value:"Stable releases",id:"stable-releases",level:3}],u={toc:c};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"documentation"},"Documentation"),(0,r.kt)("p",null,"If you'd like to contribute to the docs you can find them at ",(0,r.kt)("inlineCode",{parentName:"p"},"gitlab-pages/docs")," in raw markdown form.\nDeployment of the docs/website for LIGO is taken care of within the CI, from ",(0,r.kt)("inlineCode",{parentName:"p"},"dev")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"master")," branches."),(0,r.kt)("h2",{id:"submitting-your-changes"},"Submitting your changes"),(0,r.kt)("h3",{id:"changelog"},"Changelog"),(0,r.kt)("p",null,"We're using our own implementation of ",(0,r.kt)("a",{parentName:"p",href:"https://docs.gitlab.com/ee/development/changelog.html"},"GitLab's changelog model"),"."),(0,r.kt)("p",null,"In short, it involves the following procedures:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Entries are located in ./changelog folder.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"They are generated with a script (./scripts/add-changelog-entry.sh), and they are YAML files with the following format:"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"title: string\nmerge_request: int\nauthor: string\ntype: added|fixed|changed|deprecated|removed|performance|other\n")),(0,r.kt)("p",null,"Obviously, you can add those files manually too if you want."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Any API change ",(0,r.kt)("strong",{parentName:"li"},"must"),' have a changelog entry. Example: "Removed list_iter function"'),(0,r.kt)("li",{parentName:"ul"},"Any user-facing change ",(0,r.kt)("strong",{parentName:"li"},"should")," have a changelog entry. Example: \u201cImproved error reporting for ReasonLIGO\u201d"),(0,r.kt)("li",{parentName:"ul"},"Performance improvements ",(0,r.kt)("strong",{parentName:"li"},"should")," have a changelog entry."),(0,r.kt)("li",{parentName:"ul"},"Any docs-only changes ",(0,r.kt)("strong",{parentName:"li"},"should not")," have a changelog entry."),(0,r.kt)("li",{parentName:"ul"},"A fix for a regression introduced and then fixed in the same release ",(0,r.kt)("strong",{parentName:"li"},"should not"),"\nhave a changelog entry."),(0,r.kt)("li",{parentName:"ul"},"Any developer-facing change (e.g., CI, refactoring, technical debt remediation,\ntest suite changes) ",(0,r.kt)("strong",{parentName:"li"},"should not")," have a changelog entry. Example: \u201cRefactor nix expressions for webide\u201d")),(0,r.kt)("h2",{id:"releases--versioning"},"Releases & versioning"),(0,r.kt)("h3",{id:"development-releases-next"},"Development releases (next)"),(0,r.kt)("p",null,"Development releases of LIGO are tagged ",(0,r.kt)("inlineCode",{parentName:"p"},"next")," and are built with each commit to the ",(0,r.kt)("inlineCode",{parentName:"p"},"dev")," branch. Both the docker image & the website are published automatically."),(0,r.kt)("h3",{id:"stable-releases"},"Stable releases"),(0,r.kt)("p",null,"Stable releases are tags of form ",(0,r.kt)("inlineCode",{parentName:"p"},"x.x.x"),", generally sticking to semver conventions. Such tags are automatically built on CI, producing a release in ",(0,r.kt)("a",{parentName:"p",href:"https://gitlab.com/ligolang/ligo/-/releases"},"https://gitlab.com/ligolang/ligo/-/releases")," and pushing images to docker."))}p.isMDXComponent=!0}}]);