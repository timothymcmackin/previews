"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[91060],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=i,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(f,o(o({ref:t},p),{},{components:n})):r.createElement(f,o({ref:t},p))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var c=2;c<a;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},48720:(e,t,n)=>{n.d(t,{D:()=>i.Z,Z:()=>a});var r=n(67294),i=n(75402);const a=function(e){return r.createElement(i.Z.Consumer,null,(t=>{let{syntax:n}=t;return n===e.syntax?e.children:r.createElement(r.Fragment,null)}))}},94238:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=n(87462),i=(n(67294),n(3905)),a=n(48720);const o={id:"sizing",title:"Sizing"},s=void 0,l={unversionedId:"sets/sizing",id:"version-1.6.0/sets/sizing",title:"Sizing",description:"The predefined functions Set.size and Set.cardinal return the",source:"@site/versioned_docs/version-1.6.0/sets/sizing.md",sourceDirName:"sets",slug:"/sets/sizing",permalink:"/previews/ligo/modules/docs/1.6.0/sets/sizing",draft:!1,tags:[],version:"1.6.0",frontMatter:{id:"sizing",title:"Sizing"},sidebar:"docs",previous:{title:"Declaring",permalink:"/previews/ligo/modules/docs/1.6.0/sets/declaring"},next:{title:"Searching",permalink:"/previews/ligo/modules/docs/1.6.0/sets/searching"}},c={},p=[],u={toc:p};function d(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The predefined functions ",(0,i.kt)("inlineCode",{parentName:"p"},"Set.size")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"Set.cardinal")," return the\nnumber of elements in a given set."),(0,i.kt)(a.Z,{syntax:"cameligo",mdxType:"Syntax"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cameligo",metastring:"group=cardinal",group:"cardinal"},"let my_set : int set = Set.literal [3; 2; 2; 1]\nlet cardinal : nat = Set.size my_set // = 3\n")),(0,i.kt)("p",null,"Note: See the predefined\n",(0,i.kt)("a",{parentName:"p",href:"../reference/set-reference/?lang=cameligo"},"module Set"))),(0,i.kt)(a.Z,{syntax:"jsligo",mdxType:"Syntax"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsligo",metastring:"group=cardinal",group:"cardinal"},"const my_set: set<int> = Set.literal([3, 2, 2, 1]);\nconst cardinal : nat = Set.size(my_set); // == 3\n")),(0,i.kt)("p",null,"Note: See the predefined\n",(0,i.kt)("a",{parentName:"p",href:"../reference/set-reference/?lang=jsligo"},"namespace Set"))))}d.isMDXComponent=!0}}]);