"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[85453],{48720:(e,t,n)=>{n.d(t,{D:()=>o.Z,Z:()=>i});var a=n(67294),o=n(75402);const i=function(e){return a.createElement(o.Z.Consumer,null,(t=>{let{syntax:n}=t;return n===e.syntax?e.children:a.createElement(a.Fragment,null)}))}},99191:(e,t,n)=>{n.d(t,{Z:()=>u});var a=n(43164),o=n(67294),i=n(52263),l=n(48720),r=n(11506);function s(){return s=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},s.apply(this,arguments)}const{Prism:p}=n(43164);p.languages={...p.languages,cameligo:{...p.languages.ocaml,comment:[/(^|[^\\])\/\*[\s\S]*?\*\//,/\(\*[\s\S]*?\*\)/,/\/\/.*/]},jsligo:p.languages.typescript};const u=function(e){const{siteConfig:{themeConfig:{prism:t={}}}}=(0,i.Z)(),n=t.singleTheme||r.Z,[p,u]=(0,o.useState)(!1);return(0,o.useEffect)((()=>{u(!0)}),[]),o.createElement(l.D.Consumer,null,(t=>{let{syntax:i}=t;return i===e.syntax?o.createElement(a.default,s({},a.defaultProps,{key:p,language:e.syntax,code:e.children,theme:n}),(e=>{let{className:t,tokens:n,getLineProps:a,getTokenProps:i}=e;return o.createElement("h4",{className:t,style:{backgroundColor:"var(--ifm-background-color)",fontFamily:"var(--ifm-font-family-monospace)",lineHeight:"var(--ifm-pre-line-height)",fontSize:"1.1rem",fontWeight:"bold",padding:0,whiteSpace:"break-spaces",marginTop:"3rem"}},n.map(((e,t)=>o.createElement("div",a({line:e,key:t}),e.map(((e,t)=>o.createElement("span",i({token:e,key:t}))))))))})):o.createElement("div",null)}))}},83661:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>p,toc:()=>m});var a=n(87462),o=(n(67294),n(3905)),i=n(48720),l=n(99191);const r={id:"ithaca",title:"Ithaca",description:"Ithaca changes"},s=void 0,p={unversionedId:"protocol/ithaca",id:"version-1.5.0/protocol/ithaca",title:"Ithaca",description:"Ithaca changes",source:"@site/versioned_docs/version-1.5.0/protocol/ithaca.md",sourceDirName:"protocol",slug:"/protocol/ithaca",permalink:"/previews/ligo/modules/docs/1.5.0/protocol/ithaca",draft:!1,tags:[],version:"1.5.0",frontMatter:{id:"ithaca",title:"Ithaca",description:"Ithaca changes"},sidebar:"API",previous:{title:"Hangzhou",permalink:"/previews/ligo/modules/docs/1.5.0/protocol/hangzhou"},next:{title:"Jakarta",permalink:"/previews/ligo/modules/docs/1.5.0/protocol/jakarta"}},u={},m=[{value:"API",id:"api",level:2},{value:"New primitives / behaviour",id:"new-primitives--behaviour",level:3},{value:"Subtraction operator <code>-</code>",id:"subtraction-operator--",level:4},{value:"Option Module",id:"option-module",level:4},{value:"Feature no longer supported",id:"feature-no-longer-supported",level:2},{value:"Test",id:"test",level:3}],c={toc:m};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"api"},"API"),(0,o.kt)("h3",{id:"new-primitives--behaviour"},"New primitives / behaviour"),(0,o.kt)("h4",{id:"subtraction-operator--"},"Subtraction operator ",(0,o.kt)("inlineCode",{parentName:"h4"},"-")),(0,o.kt)("p",null,"The behaviour of the subtraction operator ",(0,o.kt)("inlineCode",{parentName:"p"},"-")," on values of type ",(0,o.kt)("inlineCode",{parentName:"p"},"tez")," has been changed in protocol Ithaca."),(0,o.kt)("p",null,"Subtracting values of type ",(0,o.kt)("inlineCode",{parentName:"p"},"tez")," yeilds on optional value. (This emits\nthe ",(0,o.kt)("inlineCode",{parentName:"p"},"SUB_MUTEZ")," Michelson instruction)"),(0,o.kt)(i.Z,{syntax:"pascaligo",mdxType:"Syntax"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-pascaligo",metastring:"group=b",group:"b"},"\nconst d : option (tez) = 5mutez - 1mutez (* Some (4mutez) *)\n\nconst e : option (tez) = 1mutez - 5mutez (* None *)\n\n"))),(0,o.kt)(i.Z,{syntax:"cameligo",mdxType:"Syntax"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cameligo",metastring:"group=b",group:"b"},"let d : tez option = 5mutez - 1mutez (* Some (4mutez) *)\nlet e : tez option = 1mutez - 5mutez (* None *)\n\n"))),(0,o.kt)(i.Z,{syntax:"jsligo",mdxType:"Syntax"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsligo",metastring:"group=b",group:"b"},"let d : option<tez> = (5 as mutez) - (1 as mutez); /* Some (4mutez) */\nlet e : option<tez> = (1 as mutez) - (5 as mutez); /* None */\n\n"))),(0,o.kt)("h4",{id:"option-module"},"Option Module"),(0,o.kt)(l.Z,{syntax:"pascaligo",mdxType:"SyntaxTitle"},"val map : ('a -> 'b) -> option ('a) -> option ('b)"),(0,o.kt)(l.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"val map : ('a -> 'b) -> 'a option -> 'b option"),(0,o.kt)(l.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"let map: (f : ((item: 'a) => 'b), value : option<'a>) => option<'b>"),(0,o.kt)("p",null,"Applies the mapper function to the value if it is wrapped in the ",(0,o.kt)("inlineCode",{parentName:"p"},"Some")," constructor."),(0,o.kt)("p",null,"If the value is ",(0,o.kt)("inlineCode",{parentName:"p"},"None")," the function is not executed/applied."),(0,o.kt)("h2",{id:"feature-no-longer-supported"},"Feature no longer supported"),(0,o.kt)("h3",{id:"test"},"Test"),(0,o.kt)(l.Z,{syntax:"pascaligo",mdxType:"SyntaxTitle"},"val set_now : timestamp -> unit"),(0,o.kt)(l.Z,{syntax:"cameligo",mdxType:"SyntaxTitle"},"val set_now : timestamp -> unit"),(0,o.kt)(l.Z,{syntax:"jsligo",mdxType:"SyntaxTitle"},"let set_now = (now: timestamp) => unit"),(0,o.kt)("p",null,"We no longer support ",(0,o.kt)("inlineCode",{parentName:"p"},"Test.set_now")," in LIGO ",(0,o.kt)("inlineCode",{parentName:"p"},"0.38.0")," onwards, this is because\nthe underlying functions used by the LIGO Testing framework do not support\nsetting exact timestamps."))}d.isMDXComponent=!0}}]);