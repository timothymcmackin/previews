"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[61976],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(r),m=o,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||a;return r?n.createElement(f,i(i({ref:t},p),{},{components:r})):n.createElement(f,i({ref:t},p))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},48720:(e,t,r)=>{r.d(t,{D:()=>o.Z,Z:()=>a});var n=r(67294),o=r(75402);const a=function(e){return n.createElement(o.Z.Consumer,null,(t=>{let{syntax:r}=t;return r===e.syntax?e.children:n.createElement(n.Fragment,null)}))}},58403:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var n=r(87462),o=(r(67294),r(3905)),a=r(48720);const i={id:"view",title:"view"},s=void 0,l={unversionedId:"tezos/decorators/view",id:"version-1.5.0/tezos/decorators/view",title:"view",description:"Views are a form of read-only entrypoints that can be called",source:"@site/versioned_docs/version-1.5.0/tezos/decorators/view.md",sourceDirName:"tezos/decorators",slug:"/tezos/decorators/view",permalink:"/previews/ligo/modules/docs/1.5.0/tezos/decorators/view",draft:!1,tags:[],version:"1.5.0",frontMatter:{id:"view",title:"view"},sidebar:"docs",previous:{title:"private",permalink:"/previews/ligo/modules/docs/1.5.0/tezos/decorators/private"},next:{title:"Addresses",permalink:"/previews/ligo/modules/docs/1.5.0/tezos/contracts/address"}},c={},p=[],u={toc:p};function d(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Views")," are a form of read-only entrypoints that can be called\nsynchronously, and often are used to read part of the storage."),(0,o.kt)(a.Z,{syntax:"cameligo",mdxType:"Syntax"},(0,o.kt)("p",null,"The attribute is ",(0,o.kt)("inlineCode",{parentName:"p"},"[@view]")," and placed just before a function, like the\n",(0,o.kt)("inlineCode",{parentName:"p"},"[@entry]")," attribute, for example."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cameligo",metastring:"group=view",group:"view"},"type 'storage return = operation list * 'storage\n\n[@view]\nlet add (param : int) (storage : int) : int = param + storage\n\n[@view]\nlet get_storage (_ : int) (storage : int) : int = storage\n\n[@entry]\nlet main () (storage : int) : int return =\n  ([] : operation list), storage\n\n"))),(0,o.kt)(a.Z,{syntax:"jsligo",mdxType:"Syntax"},(0,o.kt)("p",null,"The decorator is ",(0,o.kt)("inlineCode",{parentName:"p"},"@view")," and placed just before a function, like the\n",(0,o.kt)("inlineCode",{parentName:"p"},"@entry")," decorator, for example.")))}d.isMDXComponent=!0}}]);