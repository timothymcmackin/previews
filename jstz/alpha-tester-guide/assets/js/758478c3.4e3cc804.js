"use strict";(self.webpackChunkjstz_docs=self.webpackChunkjstz_docs||[]).push([[768],{3023:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>i});var r=n(6540);const a={},s=r.createContext(a);function o(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(s.Provider,{value:t},e.children)}},8096:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"api/url_pattern","title":"URLPattern","description":"jstz\'s URLPattern implementation is based on the URL Pattern specification and using rust-urlpattern.","source":"@site/api/url_pattern.md","sourceDirName":"api","slug":"/api/url_pattern","permalink":"/jstz/api/url_pattern","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"URLPattern","sidebar_label":"URLPattern"},"sidebar":"documentationSidebar","previous":{"title":"URLSearchParams","permalink":"/jstz/api/url_search_params"},"next":{"title":"TextEncoder","permalink":"/jstz/api/text_encoder"}}');var a=n(4848),s=n(3023);const o={title:"URLPattern",sidebar_label:"URLPattern"},i=void 0,l={},c=[{value:"Example",id:"example",level:2},{value:"Constructor",id:"constructor",level:2},{value:"<code>new URLPattern(input?: URLPatternInput, baseURL?: string): URLPattern</code>",id:"new-urlpatterninput-urlpatterninput-baseurl-string-urlpattern",level:3},{value:"Instance Properties",id:"instance-properties",level:2},{value:"<code>readonly URLPattern.protocol: string</code>",id:"readonly-urlpatternprotocol-string",level:3},{value:"<code>readonly URLPattern.username: string</code>",id:"readonly-urlpatternusername-string",level:3},{value:"<code>readonly URLPattern.password: string</code>",id:"readonly-urlpatternpassword-string",level:3},{value:"<code>readonly URLPattern.hostname: string</code>",id:"readonly-urlpatternhostname-string",level:3},{value:"<code>readonly URLPattern.port: string</code>",id:"readonly-urlpatternport-string",level:3},{value:"<code>readonly URLPattern.pathname: string</code>",id:"readonly-urlpatternpathname-string",level:3},{value:"<code>readonly URLPattern.search: string</code>",id:"readonly-urlpatternsearch-string",level:3},{value:"<code>readonly URLPattern.hash: string</code>",id:"readonly-urlpatternhash-string",level:3},{value:"Instance Methods",id:"instance-methods",level:2},{value:"<code>URLPattern.test(input?: URLPatternInput, baseURL?: string): boolean</code>",id:"urlpatterntestinput-urlpatterninput-baseurl-string-boolean",level:3},{value:"<code>URLPattern.exec(input?: URLPatternInput, baseURL?: string): URLPatternResult | null</code>",id:"urlpatternexecinput-urlpatterninput-baseurl-string-urlpatternresult--null",level:3}];function d(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"jstz"}),"'s ",(0,a.jsx)(t.a,{href:"hhttps://developer.mozilla.org/en-US/docs/Web/API/URLPattern",children:(0,a.jsx)(t.code,{children:"URLPattern"})})," implementation is based on the ",(0,a.jsx)(t.a,{href:"https://urlpattern.spec.whatwg.org/",children:"URL Pattern"})," specification and using ",(0,a.jsx)(t.a,{href:"https://docs.rs/urlpattern/latest/urlpattern/",children:(0,a.jsx)(t.code,{children:"rust-urlpattern"})}),"."]}),"\n",(0,a.jsx)(t.admonition,{type:"danger",children:(0,a.jsxs)(t.p,{children:["\u26a0\ufe0f ",(0,a.jsx)(t.code,{children:"jstz"}),"'s implementation is not spec compliant \u26a0\ufe0f"]})}),"\n",(0,a.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-typescript",children:'// A pattern can be constructed using a string for matching\nconst pattern = new URLPattern("http{s}?://*.example.com/books/:id");\n\n// `test` can be used to check for match\nconsole.log(pattern.test("https://store.example.com/books/123")); // prints true\nconsole.log(pattern.test("https://example.com/books/123")); // prints false\n\n// `exec` can be used to match and access components\nconst match = pattern.exec("https://store.example.com/books/123");\nconsole.log(match.pathname); // prints { input: "/books/123", groups: { "id": "123" } }\n'})}),"\n",(0,a.jsx)(t.h2,{id:"constructor",children:"Constructor"}),"\n",(0,a.jsx)(t.h3,{id:"new-urlpatterninput-urlpatterninput-baseurl-string-urlpattern",children:(0,a.jsx)(t.code,{children:"new URLPattern(input?: URLPatternInput, baseURL?: string): URLPattern"})}),"\n",(0,a.jsxs)(t.p,{children:["Creates a new ",(0,a.jsx)(t.code,{children:"URLPattern"})," object from a given URL string or ",(0,a.jsx)(t.code,{children:"URLPatternInit"})," and an optional base URL."]}),"\n",(0,a.jsx)(t.admonition,{type:"danger",children:(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"Spec deviation"}),": ",(0,a.jsx)(t.code,{children:"options"})," argument is not supported in the constructor."]})}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-typescript",children:"declare interface URLPatternInit {\n  protocol?: string;\n  username?: string;\n  password?: string;\n  hostname?: string;\n  port?: string;\n  pathname?: string;\n  search?: string;\n  hash?: string;\n  baseURL?: string;\n}\n\ndeclare type URLPatternInput = string | URLPatternInit;\n"})}),"\n",(0,a.jsx)(t.h2,{id:"instance-properties",children:"Instance Properties"}),"\n",(0,a.jsx)(t.h3,{id:"readonly-urlpatternprotocol-string",children:(0,a.jsx)(t.code,{children:"readonly URLPattern.protocol: string"})}),"\n",(0,a.jsx)(t.p,{children:"The pattern used to match the protocol part of a URL."}),"\n",(0,a.jsx)(t.h3,{id:"readonly-urlpatternusername-string",children:(0,a.jsx)(t.code,{children:"readonly URLPattern.username: string"})}),"\n",(0,a.jsx)(t.p,{children:"The pattern used to match the username part of a URL."}),"\n",(0,a.jsx)(t.h3,{id:"readonly-urlpatternpassword-string",children:(0,a.jsx)(t.code,{children:"readonly URLPattern.password: string"})}),"\n",(0,a.jsx)(t.p,{children:"The pattern used to match the password part of a URL."}),"\n",(0,a.jsx)(t.h3,{id:"readonly-urlpatternhostname-string",children:(0,a.jsx)(t.code,{children:"readonly URLPattern.hostname: string"})}),"\n",(0,a.jsx)(t.p,{children:"The pattern used to match the hostname part of a URL."}),"\n",(0,a.jsx)(t.h3,{id:"readonly-urlpatternport-string",children:(0,a.jsx)(t.code,{children:"readonly URLPattern.port: string"})}),"\n",(0,a.jsx)(t.p,{children:"The pattern used to match the port part of a URL."}),"\n",(0,a.jsx)(t.h3,{id:"readonly-urlpatternpathname-string",children:(0,a.jsx)(t.code,{children:"readonly URLPattern.pathname: string"})}),"\n",(0,a.jsx)(t.p,{children:"The pattern used to match the pathname part of a URL."}),"\n",(0,a.jsx)(t.h3,{id:"readonly-urlpatternsearch-string",children:(0,a.jsx)(t.code,{children:"readonly URLPattern.search: string"})}),"\n",(0,a.jsx)(t.p,{children:"The pattern used to match the search part of a URL."}),"\n",(0,a.jsx)(t.h3,{id:"readonly-urlpatternhash-string",children:(0,a.jsx)(t.code,{children:"readonly URLPattern.hash: string"})}),"\n",(0,a.jsx)(t.p,{children:"The pattern used to match the fragment part of a URL."}),"\n",(0,a.jsx)(t.h2,{id:"instance-methods",children:"Instance Methods"}),"\n",(0,a.jsx)(t.h3,{id:"urlpatterntestinput-urlpatterninput-baseurl-string-boolean",children:(0,a.jsx)(t.code,{children:"URLPattern.test(input?: URLPatternInput, baseURL?: string): boolean"})}),"\n",(0,a.jsx)(t.p,{children:"Returns a boolean indicating if the given input matches the current pattern. The input is a URL or an object of URL parts."}),"\n",(0,a.jsx)(t.h3,{id:"urlpatternexecinput-urlpatterninput-baseurl-string-urlpatternresult--null",children:(0,a.jsx)(t.code,{children:"URLPattern.exec(input?: URLPatternInput, baseURL?: string): URLPatternResult | null"})}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-typescript",children:"declare interface URLPatternComponentResult {\n  input: string;\n  groups: Record<string, string | undefined>;\n}\n\ndeclare interface URLPatternResult {\n  inputs: URLPatternInit[];\n  protocol: URLPatternComponentResult;\n  username: URLPatternComponentResult;\n  password: URLPatternComponentResult;\n  hostname: URLPatternComponentResult;\n  port: URLPatternComponentResult;\n  pathname: URLPatternComponentResult;\n  search: URLPatternComponentResult;\n  hash: URLPatternComponentResult;\n}\n"})}),"\n",(0,a.jsxs)(t.p,{children:["Returns either an object containing the results of matching the URL to the pattern, or ",(0,a.jsx)(t.code,{children:"null"})," if the URL does not match the pattern. The input is a URL or object of URL parts."]})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);