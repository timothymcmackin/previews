"use strict";(self.webpackChunkjstz_docs=self.webpackChunkjstz_docs||[]).push([[848],{3023:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>c});var t=s(6540);const r={},a=t.createContext(r);function o(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(a.Provider,{value:n},e.children)}},8697:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>l,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"transfer","title":"Transfer","description":"This guide explains how to transfer XTZ between accounts using request and response headers. Transfers can be made to both smart functions and user addresses.","source":"@site/transfer.md","sourceDirName":".","slug":"/transfer","permalink":"/jstz/transfer","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Transfer","sidebar_label":"Transfer"},"sidebar":"documentationSidebar","previous":{"title":"Sandbox","permalink":"/jstz/sandbox"},"next":{"title":"Examples","permalink":"/jstz/examples"}}');var r=s(4848),a=s(3023);const o={title:"Transfer",sidebar_label:"Transfer"},c=void 0,i={},d=[{value:"1. Transfer via Request Headers",id:"1-transfer-via-request-headers",level:2},{value:"2. Refund via Response Headers",id:"2-refund-via-response-headers",level:2},{value:"Important Notes",id:"important-notes",level:2}];function u(e){const n={code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"This guide explains how to transfer XTZ between accounts using request and response headers. Transfers can be made to both smart functions and user addresses."}),"\n",(0,r.jsx)(n.h2,{id:"1-transfer-via-request-headers",children:"1. Transfer via Request Headers"}),"\n",(0,r.jsxs)(n.p,{children:["Smart functions can transfer XTZ using the ",(0,r.jsx)(n.code,{children:"X-JSTZ-TRANSFER"})," header in requests. The recipient can access the transferred amount via the ",(0,r.jsx)(n.code,{children:"X-JSTZ-AMOUNT"})," header."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Smart function A (Sender)"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'const ONE_TEZ = "1000000"; // 1 XTZ in mutez\n\nconst handler = async (request) => {\n  // Transfer 1 XTZ to smart function B\n  const smartFunctionB = "KT1TxqZ8QtKvLu3V3JH7Gx58n7Co8pgtpQU5";\n  const call_request = new Request(`jstz://${smartFunctionB}`, {\n    headers: {\n      "X-JSTZ-TRANSFER": ONE_TEZ,\n    },\n  });\n  await fetch(call_request);\n\n  return new Response();\n};\n\nexport default handler;\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Smart function B (Recipient)"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'const handler = async (request) => {\n  const transferred_amount = request.headers.get("X-JSTZ-AMOUNT");\n  console.log(`Received ${transferred_amount} mutez`); // Output: Received 1000000 mutez\n  return new Response();\n};\n\nexport default handler;\n'})}),"\n",(0,r.jsx)(n.h2,{id:"2-refund-via-response-headers",children:"2. Refund via Response Headers"}),"\n",(0,r.jsxs)(n.p,{children:["Smart functions can refund XTZ using the ",(0,r.jsx)(n.code,{children:"X-JSTZ-TRANSFER"})," header in responses. The original sender can access the refunded amount via the ",(0,r.jsx)(n.code,{children:"X-JSTZ-AMOUNT"})," header in the response."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Smart function A (Sender)"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'const ONE_TEZ = "1000000"; // 1 XTZ in mutez\n\nconst handler = async (request) => {\n  // Transfer 1 XTZ to smart function B\n  const smartFunctionB = "KT1TxqZ8QtKvLu3V3JH7Gx58n7Co8pgtpQU5";\n  const call_request = new Request(`jstz://${smartFunctionB}`, {\n    headers: {\n      "X-JSTZ-TRANSFER": ONE_TEZ,\n    },\n  });\n\n  const response = await fetch(call_request);\n  const refund_amount = response.headers.get("X-JSTZ-AMOUNT");\n  console.log(`Received ${refund_amount} mutez back`); // Output: Received 500000 mutez back\n  return new Response();\n};\n\nexport default handler;\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Smart function B (Refunder)"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'const HALF_TEZ = "500000"; // 0.5 XTZ in mutez\n\nconst handler = async (request) => {\n  const transferred_amount = request.headers.get("X-JSTZ-AMOUNT");\n  console.log(`Received ${transferred_amount} mutez`); // Output: Received 1000000 mutez\n\n  // Refund 0.5 XTZ to the sender\n  return new Response(null, {\n    headers: {\n      "X-JSTZ-TRANSFER": HALF_TEZ,\n    },\n  });\n};\n\nexport default handler;\n'})}),"\n",(0,r.jsx)(n.h2,{id:"important-notes",children:"Important Notes"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"All amounts are specified in mutez (1 XTZ = 1,000,000 mutez)"}),"\n",(0,r.jsxs)(n.li,{children:["Transfers can be made to:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Smart function addresses (KT1...)"}),"\n",(0,r.jsx)(n.li,{children:"User addresses (tz1...)"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"Ensure sufficient balance before initiating transfers"}),"\n"]})]})}function l(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}}}]);