"use strict";(self.webpackChunkjstz_docs=self.webpackChunkjstz_docs||[]).push([[889],{3023:(e,s,n)=>{n.d(s,{R:()=>d,x:()=>o});var r=n(6540);const t={},i=r.createContext(t);function d(e){const s=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),r.createElement(i.Provider,{value:s},e.children)}},4818:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>d,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"api/request","title":"Request","description":"jstz\'s Request implementation is based on the Fetch API specification. This API permits you to manipulate and inspect HTTP requests.","source":"@site/api/request.md","sourceDirName":"api","slug":"/api/request","permalink":"/previews/jstz/alpha-tester/api/request","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Request","sidebar_label":"Request"},"sidebar":"documentationSidebar","previous":{"title":"Headers","permalink":"/previews/jstz/alpha-tester/api/headers"},"next":{"title":"Response","permalink":"/previews/jstz/alpha-tester/api/response"}}');var t=n(4848),i=n(3023);const d={title:"Request",sidebar_label:"Request"},o=void 0,c={},l=[{value:"Constructors",id:"constructors",level:2},{value:"<code>new Request(input: Request)</code>",id:"new-requestinput-request",level:3},{value:"<code>new Request(input: string, init?: RequestInit)</code>",id:"new-requestinput-string-init-requestinit",level:3},{value:"Instance Properties",id:"instance-properties",level:2},{value:"<code>readonly Request.bodyUsed: bool</code>",id:"readonly-requestbodyused-bool",level:3},{value:"<code>readonly Request.headers</code>",id:"readonly-requestheaders",level:3},{value:"<code>readonly Request.method: string</code>",id:"readonly-requestmethod-string",level:3},{value:"<code>readonly Request.url: string</code>",id:"readonly-requesturl-string",level:3},{value:"Instance Methods",id:"instance-methods",level:2},{value:"<code>Request.arrayBuffer(): Promise&lt;ArrayBuffer&gt;</code>",id:"requestarraybuffer-promisearraybuffer",level:3},{value:"<code>Request.json(): Promise&lt;any&gt;</code>",id:"requestjson-promiseany",level:3},{value:"<code>Request.text(): Promise&lt;string&gt;</code>",id:"requesttext-promisestring",level:3}];function a(e){const s={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"jstz"}),"'s ",(0,t.jsx)(s.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/Request",children:(0,t.jsx)(s.code,{children:"Request"})})," implementation is based on the ",(0,t.jsx)(s.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API",children:"Fetch API"})," specification. This API permits you to manipulate and inspect HTTP requests."]}),"\n",(0,t.jsx)(s.admonition,{type:"danger",children:(0,t.jsxs)(s.p,{children:["\u26a0\ufe0f ",(0,t.jsx)(s.code,{children:"jstz"}),"'s implementation is not spec compliant \u26a0\ufe0f"]})}),"\n",(0,t.jsx)(s.h2,{id:"constructors",children:"Constructors"}),"\n",(0,t.jsx)(s.h3,{id:"new-requestinput-request",children:(0,t.jsx)(s.code,{children:"new Request(input: Request)"})}),"\n",(0,t.jsx)(s.admonition,{type:"danger",children:(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Spec deviation"}),": The ",(0,t.jsx)(s.code,{children:"referer"})," is copied from the given request. Additionally the ",(0,t.jsx)(s.code,{children:"mode"})," conversion is not supported."]})}),"\n",(0,t.jsxs)(s.p,{children:["Constructs a new ",(0,t.jsx)(s.code,{children:"Request"})," object as a copy of the given request."]}),"\n",(0,t.jsx)(s.h3,{id:"new-requestinput-string-init-requestinit",children:(0,t.jsx)(s.code,{children:"new Request(input: string, init?: RequestInit)"})}),"\n",(0,t.jsx)(s.admonition,{type:"danger",children:(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Spec deviation"}),": Many of the ",(0,t.jsx)(s.code,{children:"RequestInit"})," properties are not supported."]})}),"\n",(0,t.jsxs)(s.p,{children:["Creates a new ",(0,t.jsx)(s.code,{children:"Request"})," object, given a URL string and optionally any request settings.\nThe possible settings are:"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"method"})," (",(0,t.jsx)(s.code,{children:"string"}),", optional)"]}),"\n",(0,t.jsxs)(s.p,{children:["A string representing the HTTP method of the request. If omitted the default value is ",(0,t.jsx)(s.code,{children:"'GET'"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"headers"})," (",(0,t.jsx)(s.code,{children:"HeadersInit"}),", optional)"]}),"\n",(0,t.jsxs)(s.p,{children:["Any headers that should be attached to the request. Either a ",(0,t.jsx)(s.a,{href:"/previews/jstz/alpha-tester/api/headers",children:(0,t.jsx)(s.code,{children:"Headers"})})," object, an ",(0,t.jsx)(s.code,{children:"Array"})," of key-value pairs, or a ",(0,t.jsx)(s.code,{children:"Record<string, string>"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"body"})," (",(0,t.jsx)(s.code,{children:"BodyInit | null"}),", optional)"]}),"\n",(0,t.jsx)(s.admonition,{type:"danger",children:(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Spec deviation"}),": ",(0,t.jsx)(s.code,{children:"Blob"}),", ",(0,t.jsx)(s.code,{children:"FormData"}),", ",(0,t.jsx)(s.code,{children:"ReadableStream"})," and ",(0,t.jsx)(s.code,{children:"URLSearchParams"})," are not supported for ",(0,t.jsx)(s.code,{children:"BodyInit"}),"."]})}),"\n",(0,t.jsxs)(s.p,{children:["The body attached to the request. Either a ",(0,t.jsx)(s.code,{children:"string"})," or ",(0,t.jsx)(s.code,{children:"BufferSource"})," (an ",(0,t.jsx)(s.code,{children:"ArrayBuffer"})," or ",(0,t.jsx)(s.code,{children:"ArrayBufferView"}),"). The body is required for the ",(0,t.jsx)(s.code,{children:"'PUT'"}),", ",(0,t.jsx)(s.code,{children:"'POST'"})," and ",(0,t.jsx)(s.code,{children:"'PATCH'"})," methods and forbidden for the ",(0,t.jsx)(s.code,{children:"'GET'"}),", ",(0,t.jsx)(s.code,{children:"'CONNECT'"}),", ",(0,t.jsx)(s.code,{children:"'TRACE'"}),", ",(0,t.jsx)(s.code,{children:"'OPTIONS'"})," and ",(0,t.jsx)(s.code,{children:"'HEAD'"})," methods."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-typescript",children:"type BodyInit = string | BufferSource;\n\ninterface RequestInit {\n  body?: BodyInit | null;\n  headers?: HeadersInit;\n  method?: string;\n}\n"})}),"\n",(0,t.jsx)(s.h2,{id:"instance-properties",children:"Instance Properties"}),"\n",(0,t.jsx)(s.h3,{id:"readonly-requestbodyused-bool",children:(0,t.jsx)(s.code,{children:"readonly Request.bodyUsed: bool"})}),"\n",(0,t.jsxs)(s.p,{children:["A boolean property for whether the ",(0,t.jsx)(s.code,{children:"body"})," of this ",(0,t.jsx)(s.code,{children:"Request"})," has already been used or not."]}),"\n",(0,t.jsx)(s.h3,{id:"readonly-requestheaders",children:(0,t.jsx)(s.code,{children:"readonly Request.headers"})}),"\n",(0,t.jsxs)(s.p,{children:["A ",(0,t.jsx)(s.code,{children:"Headers"})," object containing the headers attached to the request"]}),"\n",(0,t.jsx)(s.h3,{id:"readonly-requestmethod-string",children:(0,t.jsx)(s.code,{children:"readonly Request.method: string"})}),"\n",(0,t.jsxs)(s.p,{children:["A string representing the HTTP method of the request, eg ",(0,t.jsx)(s.code,{children:"'GET'"}),", ",(0,t.jsx)(s.code,{children:"'PUT'"}),", ",(0,t.jsx)(s.code,{children:"'POST'"}),"."]}),"\n",(0,t.jsx)(s.h3,{id:"readonly-requesturl-string",children:(0,t.jsx)(s.code,{children:"readonly Request.url: string"})}),"\n",(0,t.jsx)(s.p,{children:"A string property for the URL of the request."}),"\n",(0,t.jsx)(s.h2,{id:"instance-methods",children:"Instance Methods"}),"\n",(0,t.jsx)(s.h3,{id:"requestarraybuffer-promisearraybuffer",children:(0,t.jsx)(s.code,{children:"Request.arrayBuffer(): Promise<ArrayBuffer>"})}),"\n",(0,t.jsxs)(s.p,{children:["Returns a promise that resolves with an ",(0,t.jsx)(s.code,{children:"ArrayBuffer"}),"."]}),"\n",(0,t.jsx)(s.h3,{id:"requestjson-promiseany",children:(0,t.jsx)(s.code,{children:"Request.json(): Promise<any>"})}),"\n",(0,t.jsx)(s.p,{children:"Returns a promise that resolves with the result of parsing the body text as JSON."}),"\n",(0,t.jsx)(s.h3,{id:"requesttext-promisestring",children:(0,t.jsx)(s.code,{children:"Request.text(): Promise<string>"})}),"\n",(0,t.jsxs)(s.p,{children:["Returns a promise that resolves with a UTF-16 ",(0,t.jsx)(s.code,{children:"string"}),"."]})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}}}]);