"use strict";(self.webpackChunketherlink_docs=self.webpackChunketherlink_docs||[]).push([[38240],{65027:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var o=n(85893),r=n(11151);const i={title:"Verifiable random functions"},s=void 0,a={id:"tools/vrf",title:"Verifiable random functions",description:"Verifiable random functions (VRF)",source:"@site/docs/tools/vrf.md",sourceDirName:"tools",slug:"/tools/vrf",permalink:"/previews/etherlink/connection-buttons/tools/vrf",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:1726755784e3,frontMatter:{title:"Verifiable random functions"},sidebar:"documentationSidebar",previous:{title:"Price feeds",permalink:"/previews/etherlink/connection-buttons/tools/price-feeds"},next:{title:"Data indexers",permalink:"/previews/etherlink/connection-buttons/tools/data-indexers"}},c={},d=[];function l(e){const t={a:"a",admonition:"admonition",p:"p",...(0,r.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.admonition,{type:"note",children:(0,o.jsxs)(t.p,{children:[(0,o.jsx)("h3",{children:"Verifiable random functions (VRF)"}),"\nA VRF is a cryptographic function that takes a series of inputs, computes them, and produces a pseudorandom output and proof of authenticity that can be verified by anyone."]})}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.a,{href:"https://docs.pyth.network/entropy",children:"Entropy"})," is a product from ",(0,o.jsx)(t.a,{href:"/tools/price-feeds#pyth",children:"Pyth"})," allowing developers to quickly and easily generate secure random numbers on the blockchain."]}),"\n",(0,o.jsxs)(t.p,{children:["Learn more in the ",(0,o.jsx)(t.a,{href:"https://docs.pyth.network/entropy/create-your-first-entropy-app",children:"docs"})," provided."]})]})}function p(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},11151:(e,t,n)=>{n.d(t,{Z:()=>a,a:()=>s});var o=n(67294);const r={},i=o.createContext(r);function s(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);