"use strict";(self.webpackChunketherlink_docs=self.webpackChunketherlink_docs||[]).push([[80271],{80271:(t,a,n)=>{n.d(a,{relayBiconomyTransaction:()=>w});var e=n(45444),s=n(60301),o=n(57621),r=n(52749),i=n(96378),c=n(75100),d=n(26182);const h=0n;async function w(t){const[a,n]=await async function({account:t,serializableTransaction:a,transaction:n,gasless:r}){const c=(0,o.u)({address:r.relayerForwarderAddress,chain:n.chain,client:n.client}),w=await(0,d.readContract)({contract:c,method:"function getNonce(address,uint256) view returns (uint256)",params:[t.address,h]}),l=Math.floor(Date.now()/1e3)+(r.deadlineSeconds??3600),u={from:t.address,to:a.to,token:s.je,txGas:a.gas,tokenGasPrice:0n,batchId:h,batchNonce:w,deadline:l,data:a.data};if(!u.to)throw new Error("Cannot send a transaction without a `to` address");if(!u.txGas)throw new Error("Cannot send a transaction without a `gas` value");if(!u.data)throw new Error("Cannot send a transaction without a `data` value");const p=(0,e.E)([{type:"address"},{type:"address"},{type:"address"},{type:"uint256"},{type:"uint256"},{type:"uint256"},{type:"uint256"},{type:"bytes32"}],[u.from,u.to,u.token,u.txGas,u.tokenGasPrice,u.batchId,u.batchNonce,(0,i.w)(u.data)]);return[u,await t.signMessage({message:p})]}(t),w=await fetch("https://api.biconomy.io/api/v2/meta-tx/native",{method:"POST",body:(0,c.P)({apiId:t.gasless.apiId,params:[a,n],from:a.from,to:a.to,gasLimit:a.txGas}),headers:{"x-api-key":t.gasless.apiKey,"Content-Type":"application/json;charset=utf-8"}});if(!w.ok)throw w.body?.cancel(),new Error(`Failed to send transaction: ${await w.text()}`);const l=await w.json(),u=l.txHash;if((0,r.v)(u))return{transactionHash:u,chain:t.transaction.chain,client:t.transaction.client};throw new Error(`Failed to send transaction: ${(0,c.P)(l)}`)}}}]);