"use strict";(self.webpackChunketherlink_docs=self.webpackChunketherlink_docs||[]).push([[5566],{87954:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>a,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=t(85893),i=t(11151);const o={title:"Development toolkits"},a=void 0,s={id:"building-on-etherlink/development-toolkits",title:"Development toolkits",description:"\ud83d\udc77 Hardhat",source:"@site/docs/building-on-etherlink/development-toolkits.md",sourceDirName:"building-on-etherlink",slug:"/building-on-etherlink/development-toolkits",permalink:"/previews/etherlink/connection-buttons/building-on-etherlink/development-toolkits",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:1728908898e3,frontMatter:{title:"Development toolkits"},sidebar:"documentationSidebar",previous:{title:"Tokens",permalink:"/previews/etherlink/connection-buttons/building-on-etherlink/tokens"},next:{title:"Etherlink architecture",permalink:"/previews/etherlink/connection-buttons/network/architecture"}},h={},l=[{value:"\ud83d\udc77 Hardhat",id:"-hardhat",level:2},{value:"Using Hardhat with Etherlink",id:"using-hardhat-with-etherlink",level:3},{value:"Deploying and verifying contracts with Hardhat",id:"deploying-and-verifying-contracts-with-hardhat",level:3},{value:"\ud83d\udd25 Foundry",id:"-foundry",level:2},{value:"Deploying and verifying contracts with Foundry",id:"deploying-and-verifying-contracts-with-foundry",level:3}];function d(e){const n={a:"a",br:"br",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"-hardhat",children:"\ud83d\udc77 Hardhat"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://hardhat.org/",children:"Hardhat"})," is an Ethereum development environment for professionals. It facilitates performing frequent tasks, such as running tests, automatically checking code for mistakes or interacting with a smart contract. To get started, check out the ",(0,r.jsx)(n.a,{href:"https://hardhat.org/tutorial",children:"tutorial"})," created by the team!"]}),"\n",(0,r.jsx)(n.h3,{id:"using-hardhat-with-etherlink",children:"Using Hardhat with Etherlink"}),"\n",(0,r.jsxs)(n.p,{children:["Hardhat works seamlessly with Etherlink.\nYou can follow the documentation at ",(0,r.jsx)(n.a,{href:"https://hardhat.org/docs",children:"https://hardhat.org/docs"})," and insert values for Etherlink."]}),"\n",(0,r.jsxs)(n.p,{children:["Here is an example ",(0,r.jsx)(n.code,{children:"hardhat.config.js"})," file for Etherlink Mainnet and Testnet:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'module.exports = {\n  solidity: "0.8.24",\n  networks: {\n    etherlinkMainnet: {\n      url: "https://node.mainnet.etherlink.com",\n      accounts: ["<YOUR_PRIVATE_KEY>"],\n    },\n    etherlinkTestnet: {\n      url: "https://node.ghostnet.etherlink.com",\n      accounts: ["<YOUR_PRIVATE_KEY>"],\n    },\n  },\n  etherscan: {\n    apiKey: {\n      etherlinkMainnet: "YOU_CAN_COPY_ME",\n      etherlinkTestnet: "YOU_CAN_COPY_ME",\n    },\n    customChains: [\n      {\n        network: "etherlinkMainnet",\n        chainId: 42793,\n        urls: {\n          apiURL: "https://explorer.etherlink.com/api",\n          browserURL: "https://explorer.etherlink.com",\n        },\n      },\n      {\n        network: "etherlinkTestnet",\n        chainId: 128123,\n        urls: {\n          apiURL: "https://testnet.explorer.etherlink.com/api",\n          browserURL: "https://testnet.explorer.etherlink.com",\n        },\n      },\n    ],\n  },\n};\n'})}),"\n",(0,r.jsx)(n.h3,{id:"deploying-and-verifying-contracts-with-hardhat",children:"Deploying and verifying contracts with Hardhat"}),"\n",(0,r.jsxs)(n.p,{children:["Hardhat offers great guides for ",(0,r.jsx)(n.a,{href:"https://hardhat.org/hardhat-runner/docs/guides/deploying",children:"deploying"})," and ",(0,r.jsx)(n.a,{href:"https://hardhat.org/hardhat-runner/docs/guides/verifying",children:"verifying"})," your contracts. Just make sure to set the network flag appropriately: ",(0,r.jsx)(n.code,{children:"--network etherlinkMainnet"})," or ",(0,r.jsx)(n.code,{children:"--network etherlinkTestnet"}),", as appropriate."]}),"\n",(0,r.jsx)(n.h2,{id:"-foundry",children:"\ud83d\udd25 Foundry"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://book.getfoundry.sh/",children:"Foundry"})," is a fast, portable and modular toolkit for Ethereum application development written in Rust. It consists of various subpackages:"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Forge"}),": Ethereum testing framework (like Truffle, Hardhat and DappTools).",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.strong,{children:"Cast"}),": Swiss army knife for interacting with EVM smart contracts, sending transactions and getting chain data.",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.strong,{children:"Anvil"}),": Local Ethereum node, akin to Ganache, Hardhat Network.",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.strong,{children:"Chisel"}),": Fast, utilitarian, and verbose solidity REPL."]}),"\n",(0,r.jsx)(n.h3,{id:"deploying-and-verifying-contracts-with-foundry",children:"Deploying and verifying contracts with Foundry"}),"\n",(0,r.jsxs)(n.p,{children:["For the most up to date information on how to deploy and verify a smart contract, check out the ",(0,r.jsx)(n.a,{href:"https://book.getfoundry.sh/forge/deploying",children:"guide"})," provided by the Foundry team!"]}),"\n",(0,r.jsx)(n.p,{children:"As a summary, you can run the following command for Etherlink:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'forge create --rpc-url "https://node.mainnet.etherlink.com" \\\n    --private-key "<YOUR_PRIVATE_KEY>" \\\n    --etherscan-api-key "YOU_CAN_COPY_ME" \\\n    --verify \\\n    src/YOUR_CONTRACT.sol:YOUR_CONTRACT --legacy\n'})}),"\n",(0,r.jsxs)(n.p,{children:["To use Etherlink Testnet, substitute the RPC URL ",(0,r.jsx)(n.code,{children:"https://node.ghostnet.etherlink.com"})," for the Mainnet URL."]})]})}function c(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>s,a:()=>a});var r=t(67294);const i={},o=r.createContext(i);function a(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);