"use strict";(self.webpackChunketherlink_docs=self.webpackChunketherlink_docs||[]).push([[38430],{73851:(t,c,n)=>{n.d(c,{uH:()=>s});var r=n(26182);const a="0x313ce567",e=[],o=[{type:"uint8"}];async function s(t){return(0,r.readContract)({contract:t.contract,method:[a,e,o],params:[]})}},38430:(t,c,n)=>{n.d(c,{getCurrencyMetadata:()=>I});var r=n(60301),a=n(71786),e=n(26182);const o="0x06fdde03",s=[],i=[{type:"string"}];async function d(t){return(0,a.D)((()=>async function(t){return(0,e.readContract)({contract:t.contract,method:[o,s,i],params:[]})}(t)),{cacheKey:`${t.contract.chain.id}:${t.contract.address}:name`,cacheTime:Number.POSITIVE_INFINITY})}const u="0x95d89b41",h=[],m=[{type:"string"}];async function y(t){return(0,a.D)((()=>async function(t){return(0,e.readContract)({contract:t.contract,method:[u,h,m],params:[]})}(t)),{cacheKey:`${t.contract.chain.id}:${t.contract.address}:symbol`,cacheTime:Number.POSITIVE_INFINITY})}var l=n(73851);async function I(t){if((0,r.qw)(t.contract.address))return{name:"Ether",symbol:"ETH",decimals:18,...t.contract.chain.nativeCurrency};try{const[c,n,r]=await Promise.all([d(t).catch((()=>"")),y(t),(0,l.uH)(t)]);return{name:c,symbol:n,decimals:r}}catch(c){throw new Error("Invalid currency token")}}}}]);