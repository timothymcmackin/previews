import smartpy as sp

import smartpy.math as m
import smartpy.templates.example_import as e
import smartpy.utils as utils


class Calculator(sp.Contract):
    def __init__(self):
        # self.data.result = 0
        self.data.result = m.pow((10, 0)) - 1
        self.data.i = utils.mutez_to_nat(sp.mutez(10))

    @sp.entrypoint
    def multiply(self, x, y):
        self.data.result = x * y

    @sp.entrypoint
    def add(self, x, y):
        self.data.result = x + y

    @sp.entrypoint
    def square(self, x):
        self.data.result = x * x

    @sp.entrypoint
    def squareRoot(self, x):
        assert x >= 0
        y = x
        while y * y > x:
            y = (x / y + y) / 2
        assert y * y <= x and x < (y + 1) * (y + 1)
        self.data.result = y

    @sp.entrypoint
    def factorial(self, x):
        self.data.result = 1
        for y in range(1, x + 1):
            self.data.result *= y

    @sp.entrypoint
    def log2(self, x):
        self.data.result = 0
        y = x
        while y > 1:
            self.data.result += 1
            y /= 2
