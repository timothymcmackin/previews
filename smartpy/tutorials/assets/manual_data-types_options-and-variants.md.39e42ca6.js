import{D as e}from"./chunks/DocFunction.e9a30d9e.js";import"./chunks/DocInPlace.vue_vue_type_style_index_0_scoped_8490fbaf_lang.4ed993c7.js";import{o as t,c as i,Q as p,C as l,y as o,v as s,a}from"./chunks/framework.741828c6.js";import"./chunks/DocFunction.vue_vue_type_style_index_0_scoped_21214205_lang.4ed993c7.js";const d=JSON.parse('{"title":"Options and variants","description":"","frontmatter":{},"headers":[],"relativePath":"manual/data-types/options-and-variants.md","filePath":"manual/data-types/options-and-variants.md"}'),r={name:"manual/data-types/options-and-variants.md"},u=Object.assign(r,{setup(c){return(F,n)=>(t(),i("div",null,[n[5]||(n[5]=p('<h1 id="options-and-variants" tabindex="-1">Options and variants <a class="header-anchor" href="#options-and-variants" aria-label="Permalink to &quot;Options and variants&quot;">​</a></h1><h2 id="options" tabindex="-1">Options <a class="header-anchor" href="#options" aria-label="Permalink to &quot;Options&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Options are a particular case of variants described below with two cases: <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">None</span></span></code></span> and <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">Some</span></span></code></span>.</p></div><p>In SmartPy usage of the value <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">None</span></span></code></span> is reflected in the type. For example, an optional integer is of type <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">sp</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">option</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">sp</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">int</span><span style="color:#89DDFF;">]</span></span></code></span>. This type can be either <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">None</span></span></code></span> or <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">sp</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Some</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">n</span><span style="color:#89DDFF;">)</span></span></code></span> for any value <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">n</span></span></code></span> of type <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">sp</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">int</span></span></code></span>.</p>',4)),l(e,{name:"x.is_none",rType:"sp.bool"},{default:o(()=>n[0]||(n[0]=[s("p",null,[a("Checks whether the given value is "),s("span",{class:"inline shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#89DDFF"}},"None")])])]),a(". For example "),s("span",{class:"inline shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#89DDFF"}},"None."),s("span",{style:{color:"#82AAFF"}},"is_none"),s("span",{style:{color:"#89DDFF"}},"()"),a(" "),s("span",{style:{color:"#89DDFF"}},"=="),a(" "),s("span",{style:{color:"#89DDFF"}},"True")])])]),a(" and "),s("span",{class:"inline shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"sp"),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#82AAFF"}},"Some"),s("span",{style:{color:"#89DDFF"}},"("),s("span",{style:{color:"#F78C6C"}},"42"),s("span",{style:{color:"#89DDFF"}},")."),s("span",{style:{color:"#82AAFF"}},"is_none"),s("span",{style:{color:"#89DDFF"}},"()"),a(" "),s("span",{style:{color:"#89DDFF"}},"=="),a(" "),s("span",{style:{color:"#89DDFF"}},"False")])])]),a(".")],-1)])),_:1}),l(e,{name:"x.is_some",rType:"sp.bool"},{default:o(()=>n[1]||(n[1]=[s("p",null,[a("Checks whether the given value is of the form "),s("span",{class:"inline shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"sp"),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#82AAFF"}},"Some"),s("span",{style:{color:"#89DDFF"}},"("),s("span",{style:{color:"#82AAFF"}},"..."),s("span",{style:{color:"#89DDFF"}},")")])])]),a(". For example "),s("span",{class:"inline shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#89DDFF"}},"None."),s("span",{style:{color:"#82AAFF"}},"is_some"),s("span",{style:{color:"#89DDFF"}},"()"),a(" "),s("span",{style:{color:"#89DDFF"}},"=="),a(" "),s("span",{style:{color:"#89DDFF"}},"False")])])]),a(" and "),s("span",{class:"inline shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"sp"),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#82AAFF"}},"Some"),s("span",{style:{color:"#89DDFF"}},"("),s("span",{style:{color:"#F78C6C"}},"42"),s("span",{style:{color:"#89DDFF"}},")."),s("span",{style:{color:"#82AAFF"}},"is_some"),s("span",{style:{color:"#89DDFF"}},"()"),a(" "),s("span",{style:{color:"#89DDFF"}},"=="),a(" "),s("span",{style:{color:"#89DDFF"}},"True")])])]),a(".")],-1)])),_:1}),l(e,{name:"x.unwrap_some",arg:"[error=exception: t]",rType:"t"},{default:o(()=>n[2]||(n[2]=[s("p",null,[a("Extracts the argument of an option value if it is of the form "),s("span",{class:"inline shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"sp"),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#82AAFF"}},"Some"),s("span",{style:{color:"#89DDFF"}},"("),s("span",{style:{color:"#82AAFF"}},"..."),s("span",{style:{color:"#89DDFF"}},")")])])]),a(". Raises an exception (that can be specified as "),s("span",{class:"inline shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"error")])])]),a(") if "),s("span",{class:"inline shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"x "),s("span",{style:{color:"#89DDFF"}},"=="),a(" "),s("span",{style:{color:"#89DDFF"}},"None")])])]),a(". If "),s("span",{class:"inline shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"error")])])]),a(" is specified, the parameter must be named.")],-1),s("p",null,[a("For example, "),s("span",{class:"inline shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"sp"),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#82AAFF"}},"Some"),s("span",{style:{color:"#89DDFF"}},"("),s("span",{style:{color:"#F78C6C"}},"42"),s("span",{style:{color:"#89DDFF"}},")."),s("span",{style:{color:"#82AAFF"}},"unwrap_some"),s("span",{style:{color:"#89DDFF"}},"()"),a(" "),s("span",{style:{color:"#89DDFF"}},"=="),a(" "),s("span",{style:{color:"#F78C6C"}},"42")])])]),a(", whereas "),s("span",{class:"inline shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#89DDFF"}},"None."),s("span",{style:{color:"#82AAFF"}},"unwrap_some"),s("span",{style:{color:"#89DDFF"}},"("),s("span",{style:{color:"#BABED8","font-style":"italic"}},"error"),s("span",{style:{color:"#89DDFF"}},"="),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#C3E88D"}},"oops"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},")")])])]),a(" raises the exception "),s("span",{class:"inline shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#89DDFF","font-style":"italic"}},'"'),s("span",{style:{color:"#676E95","font-style":"italic"}},"oops"),s("span",{style:{color:"#89DDFF","font-style":"italic"}},'"')])])]),a(".")],-1)])),_:1}),n[6]||(n[6]=p('<h2 id="variants" tabindex="-1">Variants <a class="header-anchor" href="#variants" aria-label="Permalink to &quot;Variants&quot;">​</a></h2><p>Variants in SmartPy are enumerations of cases, where each case comes with an extra value. Variants are similar to features such as enums, sum types, and tagged/disjoint unions in other languages.</p><p>For example, <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">sp</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">variant</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">Circle</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">sp</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">int</span><span style="color:#89DDFF;">,</span> <span style="color:#BABED8;font-style:italic;">Rectangle</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">sp</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">pair</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">sp</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">int</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> sp</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">int</span><span style="color:#89DDFF;">])</span></span></code></span> is a variant type with two cases. Its values are <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">sp</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">variant</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Circle</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">r</span><span style="color:#89DDFF;">)</span></span></code></span> (for any <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">r</span></span></code></span> of type <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">sp</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">int</span></span></code></span>) and <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">sp</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">variant</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Rectangle</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">h</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> w</span><span style="color:#89DDFF;">)</span></span></code></span> (for any <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">h</span></span></code></span> and <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">w</span></span></code></span> of type <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">sp</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">int</span></span></code></span>).</p>',3)),l(e,{name:"x.is_variant.V",rType:"sp.bool"},{default:o(()=>n[3]||(n[3]=[s("p",null,[a("Checks whether a value is of the given variant "),s("span",{class:"inline shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"V")])])]),a(", for example:")],-1),s("div",{class:"language-smartpy"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"smartpy"),s("pre",{class:"shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#babed8"}},"c = sp.variant.Circle(2)")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#babed8"}},"assert c.is_variant.Circle()")])])])],-1)])),_:1}),l(e,{name:"x.unwrap.V",arg:"[error=exception: t]",rType:"t"},{default:o(()=>n[4]||(n[4]=[s("p",null,[a("Obtains the argument of a given variant "),s("span",{class:"inline shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"V")])])]),a(". Raises an error if it is of a different variant. If "),s("span",{class:"inline shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"error")])])]),a(" is specified, the parameter must be named. For example:")],-1),s("div",{class:"language-smartpy"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"smartpy"),s("pre",{class:"shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#babed8"}},"c = sp.variant.Circle(2)")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#babed8"}},"assert c.unwrap.Circle() == 2")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#babed8"}},"r = c.unwrap.Rectangle()  # raises an exception")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#babed8"}},'r = c.unwrap.Rectangle(error="Err")  # raises "Err"')])])])],-1)])),_:1}),n[7]||(n[7]=p(`<h2 id="matching-over-options-and-variants" tabindex="-1">Matching over options and variants <a class="header-anchor" href="#matching-over-options-and-variants" aria-label="Permalink to &quot;Matching over options and variants&quot;">​</a></h2><p>To match over variants, you can use the pattern-matching syntax (<span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">match </span><span style="color:#89DDFF;">&lt;</span><span style="color:#BABED8;">expr</span><span style="color:#89DDFF;">&gt;</span></span></code></span>) over SmartPy variants. The following example creates a variant and uses <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">match</span></span></code></span> branch based on its contents:</p><div class="language-smartpy"><button title="Copy Code" class="copy"></button><span class="lang">smartpy</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">v = sp.variant.Circle(2)</span></span>
<span class="line"><span style="color:#babed8;">match v:</span></span>
<span class="line"><span style="color:#babed8;">    case Circle(radius):</span></span>
<span class="line"><span style="color:#babed8;">        assert radius == 2</span></span>
<span class="line"><span style="color:#babed8;">    case Rectangle(dimensions):</span></span>
<span class="line"><span style="color:#babed8;">        ...</span></span>
<span class="line"><span style="color:#babed8;">        # Do something with \`dimensions.h\` and \`dimensions.w\`.</span></span></code></pre></div><p>You can use <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">case</span> <span style="color:#89DDFF;">None</span></span></code></span> to match the <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">None</span></span></code></span> case, as in this example:</p><div class="language-smartpy"><button title="Copy Code" class="copy"></button><span class="lang">smartpy</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">o = sp.Some(5)</span></span>
<span class="line"><span style="color:#babed8;">match o:</span></span>
<span class="line"><span style="color:#babed8;">    case Some(value):</span></span>
<span class="line"><span style="color:#babed8;">        assert value == 5</span></span>
<span class="line"><span style="color:#babed8;">    case None:</span></span>
<span class="line"><span style="color:#babed8;">        ...</span></span></code></pre></div><p>Note, in SmartPy, you can only pattern-match over options and variants.</p>`,6))]))}});export{d as __pageData,u as default};
