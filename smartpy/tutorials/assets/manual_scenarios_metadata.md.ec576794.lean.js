import{D as l}from"./chunks/DocFunction.e9a30d9e.js";import"./chunks/DocInPlace.vue_vue_type_style_index_0_scoped_8490fbaf_lang.4ed993c7.js";import{o as c,c as p,Q as o,C as t,y as n,v as s,a}from"./chunks/framework.741828c6.js";import"./chunks/DocFunction.vue_vue_type_style_index_0_scoped_21214205_lang.4ed993c7.js";const m=JSON.parse('{"title":"Creating and publishing metadata","description":"","frontmatter":{},"headers":[],"relativePath":"manual/scenarios/metadata.md","filePath":"manual/scenarios/metadata.md"}'),i={name:"manual/scenarios/metadata.md"},u=Object.assign(i,{setup(r){return(F,e)=>(c(),p("div",null,[e[7]||(e[7]=o('<h1 id="creating-and-publishing-metadata" tabindex="-1">Creating and publishing metadata <a class="header-anchor" href="#creating-and-publishing-metadata" aria-label="Permalink to &quot;Creating and publishing metadata&quot;">​</a></h1><p>Contract metadata provides context and descriptive information about smart contracts to wallets, explorers, dApps, and other off-chain applications.</p><p>In most cases, smart contracts store their metadata off-chain and keep only a link to the metadata in their storage. Therefore, on-chain applications including contracts cannot access metadata. To store data off-chain in a decentralized way, many Tezos developers use <a href="https://ipfs.tech/" target="_blank" rel="noreferrer">IPFS</a>.</p><p>The primary Tezos standard for metadata is <a href="https://gitlab.com/tezos/tzip/-/blob/master/proposals/tzip-16/tzip-16.md" target="_blank" rel="noreferrer">TZIP-016 (Tezos Metadata Standard)</a>. SmartPy includes tools to help you create standard-compliant metadata and store it in IPFS.</p><h2 id="creating-metadata" tabindex="-1">Creating metadata <a class="header-anchor" href="#creating-metadata" aria-label="Permalink to &quot;Creating metadata&quot;">​</a></h2>',5)),t(l,{name:"sp.create_tzip16_metadata",arg:"name: str, description: str, version: str, license_name: str, license_details: str, interfaces: List[str], authors: List[str], homepage: str, source_uri: str",rType:"dict[str, any]"},{default:n(()=>e[0]||(e[0]=[s("p",null,"Return a TZIP-016 compliant metadata dictionary. All arguments are optional.",-1),s("p",null,"Parameters:",-1),s("ul",null,[s("li",null,[s("span",{class:"inline shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"name")])])]),a(": The name of the contract, which should identify its purpose.")]),s("li",null,[s("span",{class:"inline shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"description")])])]),a(": A description of the contract.")]),s("li",null,[s("span",{class:"inline shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"version")])])]),a(": The version of the contract. The version together with the name should be unique on the chain. For example: "),s("span",{class:"inline shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F78C6C"}},"1.0"),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#F07178"}},"0")])])]),a(".")]),s("li",null,[s("span",{class:"inline shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"license_name")])])]),a(": License name. See Debian "),s("a",{href:"https://www.debian.org/doc/packaging-manuals/copyright-format/1.0/#license-short-name",target:"_blank",rel:"noreferrer"},"guidelines"),a(".")]),s("li",null,[s("span",{class:"inline shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"license_details")])])]),a(": Optional license details.")]),s("li",null,[s("span",{class:"inline shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"interfaces")])])]),a(": A list of the TZIP interfaces supported by the contract. "),s("span",{class:"inline shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"TZIP"),s("span",{style:{color:"#89DDFF"}},"-"),s("span",{style:{color:"#F78C6C"}},"016")])])]),a(" is automatically added to this list. For example: "),s("span",{class:"inline shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#89DDFF"}},"["),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#C3E88D"}},"TZIP-012"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},"]")])])]),a(".")]),s("li",null,[s("span",{class:"inline shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"authors")])])]),a(": A list of the authors of the contract. For example: "),s("span",{class:"inline shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#89DDFF"}},"["),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#C3E88D"}},"SmartPy <https://smartpy.io/>"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},"]")])])]),a(".")]),s("li",null,[s("span",{class:"inline shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"homepage")])])]),a(": The homepage is for human consumption. It can be the location of the decentralized app website, a git repository, a SmartPy IDE link, where to submit issue tickets, a more elaborate description, etc.")]),s("li",null,[s("span",{class:"inline shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"source_uri")])])]),a(": The URI of a document giving all details to rebuild the contract from SmartPy source in the format "),s("span",{class:"inline shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"ipfs"),s("span",{style:{color:"#89DDFF"}},"://<"),s("span",{style:{color:"#82AAFF"}},"hash"),s("span",{style:{color:"#89DDFF"}},">")])])]),a(". For example, "),s("span",{class:"inline shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"ipfs"),s("span",{style:{color:"#89DDFF"}},"://"),s("span",{style:{color:"#BABED8"}},"QmaV5gQ6p9ND9pjc1BPD3dc8oyi8CWEDdueSmkmasiaWGA")])])]),a(". See "),s("a",{href:"#uploading-and-linking-to-source-code"},"Uploading and linking to source code"),a(".")]),s("li",null,[s("span",{class:"inline shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"offchain_views")])])]),a(": The compiled off-chain views of the contract.")]),s("li",null,[s("span",{class:"inline shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"error_map")])])]),a(": A dictionary that maps error codes to error messages. See "),s("a",{href:"testing_contracts#contract.get_error_map"},"contracts#contract.get_error_map"),a(".")])],-1),s("p",null,"For example, this code creates metadata for a contract:",-1),s("div",{class:"language-python"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"python"),s("pre",{class:"shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#89DDFF","font-style":"italic"}},"import"),s("span",{style:{color:"#BABED8"}}," smartpy "),s("span",{style:{color:"#89DDFF","font-style":"italic"}},"as"),s("span",{style:{color:"#BABED8"}}," sp")]),a(`
`),s("span",{class:"line"}),a(`
`),s("span",{class:"line"}),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#89DDFF"}},"@"),s("span",{style:{color:"#82AAFF"}},"sp"),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#82AAFF"}},"module")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#C792EA"}},"def"),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#82AAFF"}},"main"),s("span",{style:{color:"#89DDFF"}},"():")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"    "),s("span",{style:{color:"#C792EA"}},"class"),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#FFCB6B"}},"MyContract"),s("span",{style:{color:"#89DDFF"}},"("),s("span",{style:{color:"#FFCB6B"}},"sp"),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#FFCB6B"}},"Contract"),s("span",{style:{color:"#89DDFF"}},"):")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"        "),s("span",{style:{color:"#89DDFF"}},"@"),s("span",{style:{color:"#82AAFF"}},"sp"),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#82AAFF"}},"entrypoint")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"        "),s("span",{style:{color:"#C792EA"}},"def"),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#82AAFF"}},"fail"),s("span",{style:{color:"#89DDFF"}},"("),s("span",{style:{color:"#F07178","font-style":"italic"}},"self"),s("span",{style:{color:"#89DDFF"}},"):")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"            "),s("span",{style:{color:"#89DDFF","font-style":"italic"}},"raise"),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#C3E88D"}},"An error occurred"),s("span",{style:{color:"#89DDFF"}},'"')]),a(`
`),s("span",{class:"line"}),a(`
`),s("span",{class:"line"}),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#89DDFF"}},"@"),s("span",{style:{color:"#82AAFF"}},"sp"),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#82AAFF"}},"add_test"),s("span",{style:{color:"#89DDFF"}},"()")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#C792EA"}},"def"),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#82AAFF"}},"test"),s("span",{style:{color:"#89DDFF"}},"():")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"    scenario "),s("span",{style:{color:"#89DDFF"}},"="),s("span",{style:{color:"#BABED8"}}," sp"),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#82AAFF"}},"test_scenario"),s("span",{style:{color:"#89DDFF"}},"("),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#C3E88D"}},"MyTest"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},","),s("span",{style:{color:"#82AAFF"}}," main"),s("span",{style:{color:"#89DDFF"}},")")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"    scenario"),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#82AAFF"}},"add_flag"),s("span",{style:{color:"#89DDFF"}},"("),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#C3E88D"}},"exceptions"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},","),s("span",{style:{color:"#82AAFF"}}," "),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#C3E88D"}},"metadata-id"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},")")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"    contract "),s("span",{style:{color:"#89DDFF"}},"="),s("span",{style:{color:"#BABED8"}}," main"),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#82AAFF"}},"MyContract"),s("span",{style:{color:"#89DDFF"}},"()")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"    metadata_dict "),s("span",{style:{color:"#89DDFF"}},"="),s("span",{style:{color:"#BABED8"}}," sp"),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#82AAFF"}},"create_tzip16_metadata"),s("span",{style:{color:"#89DDFF"}},"(")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#82AAFF"}},"        "),s("span",{style:{color:"#BABED8","font-style":"italic"}},"name"),s("span",{style:{color:"#89DDFF"}},"="),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#C3E88D"}},"MyContract"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},",")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#82AAFF"}},"        "),s("span",{style:{color:"#BABED8","font-style":"italic"}},"version"),s("span",{style:{color:"#89DDFF"}},"="),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#C3E88D"}},"1.0.0"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},",")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#82AAFF"}},"        "),s("span",{style:{color:"#BABED8","font-style":"italic"}},"license_name"),s("span",{style:{color:"#89DDFF"}},"="),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#C3E88D"}},"CC0"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},",")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#82AAFF"}},"        "),s("span",{style:{color:"#BABED8","font-style":"italic"}},"description"),s("span",{style:{color:"#89DDFF"}},"="),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#C3E88D"}},"This is a demo contract using SmartPy."),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},",")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#82AAFF"}},"        "),s("span",{style:{color:"#BABED8","font-style":"italic"}},"authors"),s("span",{style:{color:"#89DDFF"}},"=["),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#C3E88D"}},"SmartPy <https://smartpy.io/>"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},"],")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#82AAFF"}},"        "),s("span",{style:{color:"#BABED8","font-style":"italic"}},"homepage"),s("span",{style:{color:"#89DDFF"}},"="),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#C3E88D"}},"https://smartpy.io/ide?template=contract_metadata.py"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},",")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#82AAFF"}},"        "),s("span",{style:{color:"#676E95","font-style":"italic"}},"# Uncomment if you want to upload the SmartPy source code of the")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#82AAFF"}},"        "),s("span",{style:{color:"#676E95","font-style":"italic"}},"# contract to IPFS and specify them in the metadata dictionary.")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#82AAFF"}},"        "),s("span",{style:{color:"#676E95","font-style":"italic"}},'# source_uri=sp.pin_on_ipfs(c1.get_source(), name = "Source code for my contract"),')]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#82AAFF"}},"        "),s("span",{style:{color:"#BABED8","font-style":"italic"}},"offchain_views"),s("span",{style:{color:"#89DDFF"}},"="),s("span",{style:{color:"#82AAFF"}},"contract"),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#82AAFF"}},"get_offchain_views"),s("span",{style:{color:"#89DDFF"}},"(),")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#82AAFF"}},"        "),s("span",{style:{color:"#BABED8","font-style":"italic"}},"error_map"),s("span",{style:{color:"#89DDFF"}},"="),s("span",{style:{color:"#82AAFF"}},"contract"),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#82AAFF"}},"get_error_map"),s("span",{style:{color:"#89DDFF"}},"(),")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#82AAFF"}},"    "),s("span",{style:{color:"#89DDFF"}},")")])])])],-1)])),_:1}),e[8]||(e[8]=o(`<p>The TZIP-16 standard is flexible, which means that you can add any non-standard field with information as needed. For example, you can add a calendar URL to the <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">metadata_dict</span></span></code></span> object in the previous example with this code: <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">metadata_dict</span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">calendar</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span> <span style="color:#89DDFF;">=</span> <span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">&lt;url&gt;.ics</span><span style="color:#89DDFF;">&quot;</span></span></code></span></p><p>You can also create and import a metadata JSON file on your own with this code:</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> json</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">encoded_metadata </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> json</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">dumps</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">metadata_dict</span><span style="color:#89DDFF;">)</span></span></code></pre></div><h2 id="uploading-metadata" tabindex="-1">Uploading metadata <a class="header-anchor" href="#uploading-metadata" aria-label="Permalink to &quot;Uploading metadata&quot;">​</a></h2><p>To be available to off-chain applications, you must convert the metadata dictionary to JSON and upload it to off-chain hosting.</p><p>SmartPy provides a utility to help you upload and pin the JSON data on IPFS through the <a href="https://app.pinata.cloud" target="_blank" rel="noreferrer">Pinata</a> service.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Pinning data on IPFS ensures that content remains accessible and is not garbage collected. As long as at least one node pins the content, it remains available to the network. Moreover, any party in possession of the data can re-upload it to IPFS. Because the data&#39;s hash remains consistent, the content becomes instantly accessible via the original URI.</p></div><p>To upload your metadata to IPFS and ensure its continued availability, you can use the <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">sp</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">pin_on_ipfs</span></span></code></span> function. This function uses the Pinata service, a popular IPFS pinning provider, to store your data on the decentralized web.</p><p>To use this function, you must <a href="https://app.pinata.cloud" target="_blank" rel="noreferrer">create an account on Pinata</a> and create an API key with the &quot;pinJSONToIPFS&quot; permission, which allows it to pin JSON data.</p>`,9)),t(l,{name:"sp.pin_on_ipfs",arg:"data: dict[str, any], api_key: str = None, secret_key: str = None, name: str = None",rType:"str"},{default:n(()=>e[1]||(e[1]=[s("p",null,"Pin a JSON file to IPFS through Pinata.",-1),s("p",null,"Parameters:",-1),s("ul",null,[s("li",null,[s("span",{class:"inline shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"data")])])]),a(": The metadata to pin, such as the data returned by "),s("span",{class:"inline shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"sp"),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#82AAFF"}},"create_tzip16_metadata"),s("span",{style:{color:"#89DDFF"}},"("),s("span",{style:{color:"#82AAFF"}},"..."),s("span",{style:{color:"#89DDFF"}},")")])])]),a(" or by "),s("span",{class:"inline shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"contract"),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#82AAFF"}},"get_source"),s("span",{style:{color:"#89DDFF"}},"()")])])]),a(".")]),s("li",null,[s("span",{class:"inline shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"api_key")])])]),a(": The API key of your Pinata API keypair. You can also put the key in the "),s("span",{class:"inline shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"PINATA_KEY")])])]),a(" environment variable.")]),s("li",null,[s("span",{class:"inline shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"secret_key")])])]),a(": The secret key of your Pinata API keypair. You can also put the secret key in the "),s("span",{class:"inline shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"PINATA_SECRET")])])]),a(" environment variable.")]),s("li",null,[s("span",{class:"inline shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"name")])])]),a(": The name to give the file in Pinata.")])],-1),s("p",null,"For example:",-1),s("div",{class:"language-python"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"python"),s("pre",{class:"shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#676E95","font-style":"italic"}},"# Pin the source code on IPFS and retrieve the URI")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"source_uri "),s("span",{style:{color:"#89DDFF"}},"="),s("span",{style:{color:"#BABED8"}}," sp"),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#82AAFF"}},"pin_on_ipfs"),s("span",{style:{color:"#89DDFF"}},"("),s("span",{style:{color:"#82AAFF"}},"contract"),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#82AAFF"}},"get_source"),s("span",{style:{color:"#89DDFF"}},"())")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#676E95","font-style":"italic"}},"# Create a TZIP-16 metadata object including the URI to the source code")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"metadata_dict "),s("span",{style:{color:"#89DDFF"}},"="),s("span",{style:{color:"#BABED8"}}," sp"),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#82AAFF"}},"create_tzip16_metadata"),s("span",{style:{color:"#89DDFF"}},"("),s("span",{style:{color:"#82AAFF"}},"..."),s("span",{style:{color:"#89DDFF"}},","),s("span",{style:{color:"#82AAFF"}}," "),s("span",{style:{color:"#BABED8","font-style":"italic"}},"source_uri"),s("span",{style:{color:"#89DDFF"}},"="),s("span",{style:{color:"#82AAFF"}},"source_uri"),s("span",{style:{color:"#89DDFF"}},")")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#676E95","font-style":"italic"}},"# Pin the metadata to IPFS and get the URI")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"metadata_uri "),s("span",{style:{color:"#89DDFF"}},"="),s("span",{style:{color:"#BABED8"}}," sp"),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#82AAFF"}},"pin_on_ipfs"),s("span",{style:{color:"#89DDFF"}},"("),s("span",{style:{color:"#82AAFF"}},"metadata_dict"),s("span",{style:{color:"#89DDFF"}},","),s("span",{style:{color:"#82AAFF"}}," "),s("span",{style:{color:"#BABED8","font-style":"italic"}},"name"),s("span",{style:{color:"#89DDFF"}},"="),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#C3E88D"}},"My contract metadata"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},")")])])])],-1),s("p",null,"Now when you compile the contract, SmartPy pins the metadata to IPFS automatically.",-1),s("div",{class:"tip custom-block"},[s("p",{class:"custom-block-title"},"TIP"),s("p",null,[a("You can set environment variables such as "),s("span",{class:"inline shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"PINATA_KEY")])])]),a(" and "),s("span",{class:"inline shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"PINATA_SECRET")])])]),a(" in your operating system or within your development environment.")])],-1)])),_:1}),e[9]||(e[9]=o('<h2 id="linking-to-metadata" tabindex="-1">Linking to metadata <a class="header-anchor" href="#linking-to-metadata" aria-label="Permalink to &quot;Linking to metadata&quot;">​</a></h2><p>Contracts store a link to their metadata in a <a href="/previews/smartpy/tutorials/manual/data-types/lists-sets-and-maps#big-maps">big map</a> of type <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">sp</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">big_map</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">sp</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">string</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> sp</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">bytes</span><span style="color:#89DDFF;">]</span></span></code></span>. This big map is stored in a variable named <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">metadata</span></span></code></span> in the contract storage. This big map always contains the empty key <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">&quot;&quot;</span></span></code></span> and its value is an encoded URI that points to a JSON document (the one created with <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">sp</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">create_tzip16_metadata</span></span></code></span>).</p><p>While you can provide additional metadata directly in the contract&#39;s storage, the JSON document should be the main place to store metadata.</p>',3)),t(l,{name:"sp.scenario_utils.metadata_of_url",arg:"url: str",rType:"sp.big_map[sp.string, sp.bytes]"},{default:n(()=>e[2]||(e[2]=[s("p",null,"Create a big map with an empty key with the encoded URL for its value.",-1),s("p",null,"For example:",-1),s("div",{class:"language-python"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"python"),s("pre",{class:"shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"metadata_big_map "),s("span",{style:{color:"#89DDFF"}},"="),s("span",{style:{color:"#BABED8"}}," sp"),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#F07178"}},"scenario_utils"),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#82AAFF"}},"metadata_of_url"),s("span",{style:{color:"#89DDFF"}},"(")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#82AAFF"}},"    "),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#C3E88D"}},"ipfs://QmaV5gQ6p9ND9pjc1BPD3dc8oyi8CWEDdueSmkmasiaWGA"),s("span",{style:{color:"#89DDFF"}},'"')]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#89DDFF"}},")")]),a(`
`),s("span",{class:"line"}),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#676E95","font-style":"italic"}},"# Equivalent to")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"metadata_big_map "),s("span",{style:{color:"#89DDFF"}},"="),s("span",{style:{color:"#BABED8"}}," sp"),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#82AAFF"}},"big_map"),s("span",{style:{color:"#89DDFF"}},"({"),s("span",{style:{color:"#89DDFF"}},'""'),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#82AAFF"}}," sp"),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#82AAFF"}},"bytes"),s("span",{style:{color:"#89DDFF"}},"("),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#C3E88D"}},"0x"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#82AAFF"}}," "),s("span",{style:{color:"#89DDFF"}},"+"),s("span",{style:{color:"#82AAFF"}}," s"),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#82AAFF"}},"encode"),s("span",{style:{color:"#89DDFF"}},"("),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#C3E88D"}},"utf-8"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},")."),s("span",{style:{color:"#82AAFF"}},"hex"),s("span",{style:{color:"#89DDFF"}},"())})")])])])],-1),s("p",null,[a("Then you can use this big map as the value of the "),s("span",{class:"inline shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"metadata")])])]),a(" field in the contract storage.")],-1)])),_:1}),e[10]||(e[10]=o('<h2 id="uploading-and-linking-to-source-code" tabindex="-1">Uploading and linking to source code <a class="header-anchor" href="#uploading-and-linking-to-source-code" aria-label="Permalink to &quot;Uploading and linking to source code&quot;">​</a></h2><p>If you want to expose the source code of your contract, you can retrieve it with <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">contract</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get_source</span><span style="color:#89DDFF;">()</span></span></code></span> and pin it to IPFS as described in <a href="#uploading-metadata">Uploading metadata</a>. You can then include the resulting URI (starting with <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">ipfs</span><span style="color:#89DDFF;">://</span></span></code></span>) in the contract metadata.</p><p>Here is <a href="https://ipfs.io/ipfs/QmNam86n8CwFUT5Cr9uTWiqgBtxLEW6oDd7hrhX9u1fzaA" target="_blank" rel="noreferrer">an example</a> of SmartPy source code uploaded to IPFS. It contains the following elements:</p><ul><li><span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">module_</span></span></code></span>: The module from which the contract was built</li><li><span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">name</span></span></code></span>: The class name</li><li><span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">param</span></span></code></span>: The parameters given to the constructor after evaluation</li><li><span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">modules</span></span></code></span>: All the modules imported in the scenario</li><li><span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">flags</span></span></code></span>: The flags given to the compilation</li></ul><h2 id="verifying-source-code" tabindex="-1">Verifying source code <a class="header-anchor" href="#verifying-source-code" aria-label="Permalink to &quot;Verifying source code&quot;">​</a></h2><p>Anyone can verify that the source code indicated in the metadata corresponds to the Michelson code uploaded on the Tezos blockchain.</p>',6)),t(l,{name:"sp.get_metadata",arg:'address: str, network = "mainnet"',rType:"dict"},{default:n(()=>e[3]||(e[3]=[s("p",null,[a("Fetches and returns the metadata dictionary for a given contract address and network from an explorer API like "),s("a",{href:"https://tzkt.io/api",target:"_blank",rel:"noreferrer"},"TZKT"),a(".")],-1)])),_:1}),t(l,{name:"sp.get_metadata_code",arg:"metadata: dict",rType:"dict"},{default:n(()=>e[4]||(e[4]=[s("p",null,[a("Fetches and returns the code metadata for a contract's metadata through an IPFS endpoint, for example "),s("a",{href:"https://ipfs.io/ipfs/",target:"_blank",rel:"noreferrer"},"ipfs.io"),a(".")],-1)])),_:1}),t(l,{name:"sp.get_code",arg:'address: str, network: "mainnet"',rType:"str"},{default:n(()=>e[5]||(e[5]=[s("p",null,[a("Fetches and returns the Michelson code of a contract from an explorer API like "),s("a",{href:"https://tzkt.io/api",target:"_blank",rel:"noreferrer"},"TZKT"),a(".")],-1)])),_:1}),t(l,{name:"sp.check_validity",arg:"metadata: dict, code_metadata: dict, onchain_michelson: str"},{default:n(()=>e[6]||(e[6]=[s("p",null,[a("Checks that the code given in the metadata generates the same on-chain code. Raises "),s("span",{class:"inline shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"CodeMismatchException")])])]),a(" if the codes do not match.")],-1),s("div",{class:"info custom-block"},[s("p",{class:"custom-block-title"},"INFO"),s("p",null,"The metadata dictionary is used to ensure that the version of SmartPy you are using is compatible with the version specified in the metadata. If you need to verify metadata for a contract created with a different version of SmartPy, you should run this function using that specific version of SmartPy.")],-1),s("p",null,"For example, this code verifies the code of a SmartPy contract that was compiled with SmartPy version 0.19.0a2:",-1),s("div",{class:"language-python"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"python"),s("pre",{class:"shiki material-theme-palenight has-diff"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#89DDFF","font-style":"italic"}},"import"),s("span",{style:{color:"#BABED8"}}," smartpy "),s("span",{style:{color:"#89DDFF","font-style":"italic"}},"as"),s("span",{style:{color:"#BABED8"}}," sp")]),a(`
`),s("span",{class:"line"}),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"address "),s("span",{style:{color:"#89DDFF"}},"="),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#C3E88D"}},"KT1EQLe6AbouoX9RhFYHKeYQUAGAdGyFJXoi"),s("span",{style:{color:"#89DDFF"}},'"')]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"metadata "),s("span",{style:{color:"#89DDFF"}},"="),s("span",{style:{color:"#BABED8"}}," sp"),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#82AAFF"}},"get_metadata"),s("span",{style:{color:"#89DDFF"}},"("),s("span",{style:{color:"#82AAFF"}},"address"),s("span",{style:{color:"#89DDFF"}},","),s("span",{style:{color:"#82AAFF"}}," "),s("span",{style:{color:"#BABED8","font-style":"italic"}},"network"),s("span",{style:{color:"#89DDFF"}},"="),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#C3E88D"}},"ghostnet"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},")")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"code_metadata "),s("span",{style:{color:"#89DDFF"}},"="),s("span",{style:{color:"#BABED8"}}," sp"),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#82AAFF"}},"get_metadata_code"),s("span",{style:{color:"#89DDFF"}},"("),s("span",{style:{color:"#82AAFF"}},"metadata"),s("span",{style:{color:"#89DDFF"}},")")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"onchain_michelson "),s("span",{style:{color:"#89DDFF"}},"="),s("span",{style:{color:"#BABED8"}}," sp"),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#82AAFF"}},"get_michelson_code"),s("span",{style:{color:"#89DDFF"}},"("),s("span",{style:{color:"#82AAFF"}},"address"),s("span",{style:{color:"#89DDFF"}},","),s("span",{style:{color:"#82AAFF"}}," "),s("span",{style:{color:"#BABED8","font-style":"italic"}},"network"),s("span",{style:{color:"#89DDFF"}},"="),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#C3E88D"}},"ghostnet"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},")")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#89DDFF","font-style":"italic"}},"try"),s("span",{style:{color:"#89DDFF"}},":")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"    sp"),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#82AAFF"}},"check_validity"),s("span",{style:{color:"#89DDFF"}},"("),s("span",{style:{color:"#82AAFF"}},"metadata"),s("span",{style:{color:"#89DDFF"}},","),s("span",{style:{color:"#82AAFF"}}," code_metadata"),s("span",{style:{color:"#89DDFF"}},","),s("span",{style:{color:"#82AAFF"}}," onchain_michelson"),s("span",{style:{color:"#89DDFF"}},")")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"    "),s("span",{style:{color:"#82AAFF"}},"print"),s("span",{style:{color:"#89DDFF"}},"("),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#C3E88D"}},"Metadata code is valid"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},")")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#89DDFF","font-style":"italic"}},"except"),s("span",{style:{color:"#BABED8"}}," sp"),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#F07178"}},"CodeMismatchException"),s("span",{style:{color:"#BABED8"}}," "),s("span",{style:{color:"#89DDFF","font-style":"italic"}},"as"),s("span",{style:{color:"#BABED8"}}," e"),s("span",{style:{color:"#89DDFF"}},":")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"    "),s("span",{style:{color:"#82AAFF"}},"print"),s("span",{style:{color:"#89DDFF"}},"("),s("span",{style:{color:"#82AAFF"}},"e"),s("span",{style:{color:"#89DDFF"}},")")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"    "),s("span",{style:{color:"#82AAFF"}},"print"),s("span",{style:{color:"#89DDFF"}},"("),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#C3E88D"}},"Generated michelson:"),s("span",{style:{color:"#BABED8"}},"\\n"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},","),s("span",{style:{color:"#82AAFF"}}," e"),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#F07178"}},"generated_michelson"),s("span",{style:{color:"#89DDFF"}},")")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#BABED8"}},"    "),s("span",{style:{color:"#82AAFF"}},"print"),s("span",{style:{color:"#89DDFF"}},"("),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#C3E88D"}},"Details of the first difference:"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},","),s("span",{style:{color:"#82AAFF"}}," e"),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#F07178"}},"diff_details"),s("span",{style:{color:"#89DDFF"}},")")])])])],-1)])),_:1})]))}});export{m as __pageData,u as default};
