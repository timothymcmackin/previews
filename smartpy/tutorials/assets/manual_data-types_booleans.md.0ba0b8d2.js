import{_ as a,o as e,c as n,Q as l}from"./chunks/framework.741828c6.js";const m=JSON.parse('{"title":"Booleans","description":"","frontmatter":{},"headers":[],"relativePath":"manual/data-types/booleans.md","filePath":"manual/data-types/booleans.md"}'),p={name:"manual/data-types/booleans.md"};function i(o,s,t,c,r,h){return e(),n("div",null,s[0]||(s[0]=[l('<h1 id="booleans" tabindex="-1">Booleans <a class="header-anchor" href="#booleans" aria-label="Permalink to &quot;Booleans&quot;">​</a></h1><p>The type <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">sp</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">bool</span></span></code></span> has two literals: <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">True</span></span></code></span> and <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">False</span></span></code></span>.</p><p>The expression <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">a </span><span style="color:#89DDFF;">and</span><span style="color:#BABED8;"> b</span></span></code></span> is <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">True</span></span></code></span> if and only if <em>both</em> <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">a</span></span></code></span> and <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">b</span></span></code></span> are <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">True</span></span></code></span>. The expression <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">a </span><span style="color:#89DDFF;">or</span><span style="color:#BABED8;"> b</span></span></code></span> is <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">True</span></span></code></span> if and only if <em>at least one</em> of <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">a</span></span></code></span> and <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">b</span></span></code></span> is <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">True</span></span></code></span>. The expression <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">a </span><span style="color:#89DDFF;">^</span><span style="color:#BABED8;"> b</span></span></code></span> is <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">True</span></span></code></span> if and only if <em>exactly one</em> of <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">a</span></span></code></span> and <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">b</span></span></code></span> is <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">True</span></span></code></span>.</p><p>Note that <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">and</span></span></code></span> and <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">or</span></span></code></span> do &quot;short-circuiting&quot;: for <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">a </span><span style="color:#89DDFF;">or</span><span style="color:#BABED8;"> b</span></span></code></span>, if <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">a </span><span style="color:#89DDFF;">==</span> <span style="color:#89DDFF;">True</span></span></code></span> then <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">b</span></span></code></span> is not evaluated. For <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">a </span><span style="color:#89DDFF;">and</span><span style="color:#BABED8;"> b</span></span></code></span>, if <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">a </span><span style="color:#89DDFF;">==</span> <span style="color:#89DDFF;">False</span></span></code></span> then <span class="inline shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">b</span></span></code></span> is not evaluated.</p><p>For example, this statement runs successfully:</p><div class="language-smartpy"><button title="Copy Code" class="copy"></button><span class="lang">smartpy</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">assert True or 1 / 0 == 42</span></span></code></pre></div><p>On the other hand, the following statement raises a division-by-zero error:</p><div class="language-smartpy"><button title="Copy Code" class="copy"></button><span class="lang">smartpy</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">assert 1 / 0 == 42 or True</span></span></code></pre></div><p>Note that these operations work on booleans only. For bitwise operations on integers, see <a href="./integers-and-mutez#bitwise-arithmetic">bitwise arithmetic</a>.</p>',9)]))}const y=a(p,[["render",i]]);export{m as __pageData,y as default};
